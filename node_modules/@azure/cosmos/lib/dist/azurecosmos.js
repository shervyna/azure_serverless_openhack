var CosmosClient =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./lib/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./lib/ClientContext.js":
/*!******************************!*\
  !*** ./lib/ClientContext.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst _1 = __webpack_require__(/*! . */ \"./lib/index.js\");\nconst common_1 = __webpack_require__(/*! ./common */ \"./lib/common/index.js\");\nconst documents_1 = __webpack_require__(/*! ./documents */ \"./lib/documents/index.js\");\nconst request_1 = __webpack_require__(/*! ./request */ \"./lib/request/index.js\");\nconst request_2 = __webpack_require__(/*! ./request/request */ \"./lib/request/request.js\");\nconst sessionContainer_1 = __webpack_require__(/*! ./session/sessionContainer */ \"./lib/session/sessionContainer.js\");\n/**\n * @hidden\n * @ignore\n */\nclass ClientContext {\n    constructor(cosmosClientOptions, globalEndpointManager) {\n        this.cosmosClientOptions = cosmosClientOptions;\n        this.globalEndpointManager = globalEndpointManager;\n        this.connectionPolicy = common_1.Helper.parseConnectionPolicy(cosmosClientOptions.connectionPolicy);\n        this.sessionContainer = new sessionContainer_1.SessionContainer();\n        this.requestHandler = new request_1.RequestHandler(globalEndpointManager, this.connectionPolicy, this.cosmosClientOptions.agent);\n        this.partitionKeyDefinitionCache = {};\n    }\n    /** @ignore */\n    read(path, type, id, initialHeaders, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                const requestHeaders = yield request_2.getHeaders(this.cosmosClientOptions.auth, Object.assign({}, initialHeaders, this.cosmosClientOptions.defaultHeaders, (options && options.initialHeaders)), \"get\", path, id, type, options, undefined, this.cosmosClientOptions.connectionPolicy.UseMultipleWriteLocations);\n                this.applySessionToken(path, requestHeaders);\n                const request = {\n                    // TODO: any\n                    path,\n                    operationType: _1.Constants.OperationTypes.Read,\n                    client: this,\n                    endpointOverride: null\n                };\n                // read will use ReadEndpoint since it uses GET operation\n                const endpoint = yield this.globalEndpointManager.resolveServiceEndpoint(request);\n                const response = yield this.requestHandler.get(endpoint, request, requestHeaders);\n                this.captureSessionToken(undefined, path, _1.Constants.OperationTypes.Read, response.headers);\n                return response;\n            }\n            catch (err) {\n                this.captureSessionToken(err, path, _1.Constants.OperationTypes.Upsert, err.headers);\n                throw err;\n            }\n        });\n    }\n    queryFeed(path, type, // TODO: code smell: enum?\n    id, resultFn, // TODO: any\n    query, options, partitionKeyRangeId) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            // Query operations will use ReadEndpoint even though it uses\n            // GET(for queryFeed) and POST(for regular query operations)\n            const request = {\n                // TODO: any request\n                path,\n                operationType: _1.Constants.OperationTypes.Query,\n                client: this,\n                endpointOverride: null\n            };\n            const endpoint = yield this.globalEndpointManager.resolveServiceEndpoint(request);\n            const initialHeaders = Object.assign({}, this.cosmosClientOptions.defaultHeaders, (options && options.initialHeaders));\n            if (query === undefined) {\n                const reqHeaders = yield request_2.getHeaders(this.cosmosClientOptions.auth, initialHeaders, \"get\", path, id, type, options, partitionKeyRangeId, this.cosmosClientOptions.connectionPolicy.UseMultipleWriteLocations);\n                this.applySessionToken(path, reqHeaders);\n                const { result, headers: resHeaders } = yield this.requestHandler.get(endpoint, request, reqHeaders);\n                this.captureSessionToken(undefined, path, _1.Constants.OperationTypes.Query, resHeaders);\n                return this.processQueryFeedResponse({ result, headers: resHeaders }, !!query, resultFn);\n            }\n            else {\n                initialHeaders[_1.Constants.HttpHeaders.IsQuery] = \"true\";\n                switch (this.cosmosClientOptions.queryCompatibilityMode) {\n                    case documents_1.QueryCompatibilityMode.SqlQuery:\n                        initialHeaders[_1.Constants.HttpHeaders.ContentType] = _1.Constants.MediaTypes.SQL;\n                        break;\n                    case documents_1.QueryCompatibilityMode.Query:\n                    case documents_1.QueryCompatibilityMode.Default:\n                    default:\n                        if (typeof query === \"string\") {\n                            query = { query }; // Converts query text to query object.\n                        }\n                        initialHeaders[_1.Constants.HttpHeaders.ContentType] = _1.Constants.MediaTypes.QueryJson;\n                        break;\n                }\n                const reqHeaders = yield request_2.getHeaders(this.cosmosClientOptions.auth, initialHeaders, \"post\", path, id, type, options, partitionKeyRangeId, this.cosmosClientOptions.connectionPolicy.UseMultipleWriteLocations);\n                this.applySessionToken(path, reqHeaders);\n                const response = yield this.requestHandler.post(endpoint, request, query, reqHeaders);\n                const { result, headers: resHeaders } = response;\n                this.captureSessionToken(undefined, path, _1.Constants.OperationTypes.Query, resHeaders);\n                return this.processQueryFeedResponse({ result, headers: resHeaders }, !!query, resultFn);\n            }\n        });\n    }\n    queryPartitionKeyRanges(collectionLink, query, options) {\n        const path = common_1.Helper.getPathFromLink(collectionLink, \"pkranges\");\n        const id = common_1.Helper.getIdFromLink(collectionLink);\n        const cb = innerOptions => {\n            return this.queryFeed(path, \"pkranges\", id, result => result.PartitionKeyRanges, query, innerOptions);\n        };\n        return new _1.QueryIterator(this, query, options, cb);\n    }\n    delete(path, type, id, initialHeaders, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                const reqHeaders = yield request_2.getHeaders(this.cosmosClientOptions.auth, Object.assign({}, initialHeaders, this.cosmosClientOptions.defaultHeaders, (options && options.initialHeaders)), \"delete\", path, id, type, options, undefined, this.cosmosClientOptions.connectionPolicy.UseMultipleWriteLocations);\n                const request = {\n                    client: this,\n                    operationType: _1.Constants.OperationTypes.Delete,\n                    path,\n                    resourceType: type\n                };\n                this.applySessionToken(path, reqHeaders);\n                // deleteResource will use WriteEndpoint since it uses DELETE operation\n                const endpoint = yield this.globalEndpointManager.resolveServiceEndpoint(request);\n                const response = yield this.requestHandler.delete(endpoint, request, reqHeaders);\n                if (common_1.Helper.parseLink(path).type !== \"colls\") {\n                    this.captureSessionToken(undefined, path, _1.Constants.OperationTypes.Delete, response.headers);\n                }\n                else {\n                    this.clearSessionToken(path);\n                }\n                return response;\n            }\n            catch (err) {\n                this.captureSessionToken(err, path, _1.Constants.OperationTypes.Upsert, err.headers);\n                throw err;\n            }\n        });\n    }\n    create(body, path, type, id, initialHeaders, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                const requestHeaders = yield request_2.getHeaders(this.cosmosClientOptions.auth, Object.assign({}, initialHeaders, this.cosmosClientOptions.defaultHeaders, (options && options.initialHeaders)), \"post\", path, id, type, options, undefined, this.cosmosClientOptions.connectionPolicy.UseMultipleWriteLocations);\n                const request = {\n                    client: this,\n                    operationType: _1.Constants.OperationTypes.Create,\n                    path,\n                    resourceType: type\n                };\n                // create will use WriteEndpoint since it uses POST operation\n                this.applySessionToken(path, requestHeaders);\n                const endpoint = yield this.globalEndpointManager.resolveServiceEndpoint(request);\n                const response = yield this.requestHandler.post(endpoint, request, body, requestHeaders);\n                this.captureSessionToken(undefined, path, _1.Constants.OperationTypes.Create, response.headers);\n                return response;\n            }\n            catch (err) {\n                this.captureSessionToken(err, path, _1.Constants.OperationTypes.Upsert, err.headers);\n                throw err;\n            }\n        });\n    }\n    processQueryFeedResponse(res, isQuery, resultFn) {\n        if (isQuery) {\n            return { result: resultFn(res.result), headers: res.headers };\n        }\n        else {\n            const newResult = resultFn(res.result).map((body) => body);\n            return { result: newResult, headers: res.headers };\n        }\n    }\n    applySessionToken(path, reqHeaders) {\n        const request = this.getSessionParams(path);\n        if (reqHeaders && reqHeaders[_1.Constants.HttpHeaders.SessionToken]) {\n            return;\n        }\n        const sessionConsistency = reqHeaders[_1.Constants.HttpHeaders.ConsistencyLevel];\n        if (!sessionConsistency) {\n            return;\n        }\n        if (sessionConsistency !== documents_1.ConsistencyLevel.Session) {\n            return;\n        }\n        if (request.resourceAddress) {\n            const sessionToken = this.sessionContainer.get(request);\n            if (sessionToken) {\n                reqHeaders[_1.Constants.HttpHeaders.SessionToken] = sessionToken;\n            }\n        }\n    }\n    replace(resource, path, type, id, initialHeaders, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                const reqHeaders = yield request_2.getHeaders(this.cosmosClientOptions.auth, Object.assign({}, initialHeaders, this.cosmosClientOptions.defaultHeaders, (options && options.initialHeaders)), \"put\", path, id, type, options, undefined, this.cosmosClientOptions.connectionPolicy.UseMultipleWriteLocations);\n                const request = {\n                    client: this,\n                    operationType: _1.Constants.OperationTypes.Replace,\n                    path,\n                    resourceType: type\n                };\n                this.applySessionToken(path, reqHeaders);\n                // replace will use WriteEndpoint since it uses PUT operation\n                const endpoint = yield this.globalEndpointManager.resolveServiceEndpoint(reqHeaders);\n                const response = yield this.requestHandler.put(endpoint, request, resource, reqHeaders);\n                this.captureSessionToken(undefined, path, _1.Constants.OperationTypes.Replace, response.headers);\n                return response;\n            }\n            catch (err) {\n                this.captureSessionToken(err, path, _1.Constants.OperationTypes.Upsert, err.headers);\n                throw err;\n            }\n        });\n    }\n    upsert(body, path, type, id, initialHeaders, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                const requestHeaders = yield request_2.getHeaders(this.cosmosClientOptions.auth, Object.assign({}, initialHeaders, this.cosmosClientOptions.defaultHeaders, (options && options.initialHeaders)), \"post\", path, id, type, options, undefined, this.cosmosClientOptions.connectionPolicy.UseMultipleWriteLocations);\n                const request = {\n                    client: this,\n                    operationType: _1.Constants.OperationTypes.Upsert,\n                    path,\n                    resourceType: type\n                };\n                common_1.Helper.setIsUpsertHeader(requestHeaders);\n                this.applySessionToken(path, requestHeaders);\n                // upsert will use WriteEndpoint since it uses POST operation\n                const endpoint = yield this.globalEndpointManager.resolveServiceEndpoint(request);\n                const response = yield this.requestHandler.post(endpoint, request, body, requestHeaders);\n                this.captureSessionToken(undefined, path, _1.Constants.OperationTypes.Upsert, response.headers);\n                return response;\n            }\n            catch (err) {\n                this.captureSessionToken(err, path, _1.Constants.OperationTypes.Upsert, err.headers);\n                throw err;\n            }\n        });\n    }\n    execute(sprocLink, params, // TODO: any\n    options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const initialHeaders = Object.assign({}, this.cosmosClientOptions.defaultHeaders, (options && options.initialHeaders));\n            // Accept a single parameter or an array of parameters.\n            // Didn't add type annotation for this because we should legacy this behavior\n            if (params !== null && params !== undefined && !Array.isArray(params)) {\n                params = [params];\n            }\n            const path = common_1.Helper.getPathFromLink(sprocLink);\n            const id = common_1.Helper.getIdFromLink(sprocLink);\n            const headers = yield request_2.getHeaders(this.cosmosClientOptions.auth, initialHeaders, \"post\", path, id, \"sprocs\", options, undefined, this.cosmosClientOptions.connectionPolicy.UseMultipleWriteLocations);\n            const request = {\n                client: this,\n                operationType: _1.Constants.OperationTypes.Execute,\n                path,\n                resourceType: \"sprocs\"\n            };\n            // executeStoredProcedure will use WriteEndpoint since it uses POST operation\n            const endpoint = yield this.globalEndpointManager.resolveServiceEndpoint(request);\n            return this.requestHandler.post(endpoint, request, params, headers);\n        });\n    }\n    /**\n     * Gets the Database account information.\n     * @param {string} [options.urlConnection]   - The endpoint url whose database account needs to be retrieved. \\\n     * If not present, current client's url will be used.\n     */\n    getDatabaseAccount(options = {}) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const urlConnection = options.urlConnection || this.cosmosClientOptions.endpoint;\n            const requestHeaders = yield request_2.getHeaders(this.cosmosClientOptions.auth, this.cosmosClientOptions.defaultHeaders, \"get\", \"\", \"\", \"\", {}, undefined, this.cosmosClientOptions.connectionPolicy.UseMultipleWriteLocations);\n            const request = {\n                client: this,\n                operationType: _1.Constants.OperationTypes.Read,\n                path: \"\",\n                resourceType: \"DatabaseAccount\"\n            };\n            const { result, headers } = yield this.requestHandler.get(urlConnection, request, requestHeaders);\n            const databaseAccount = new documents_1.DatabaseAccount(result, headers);\n            return { result: databaseAccount, headers };\n        });\n    }\n    getWriteEndpoint() {\n        return this.globalEndpointManager.getWriteEndpoint();\n    }\n    getReadEndpoint() {\n        return this.globalEndpointManager.getReadEndpoint();\n    }\n    captureSessionToken(err, path, opType, resHeaders) {\n        const request = this.getSessionParams(path); // TODO: any request\n        request.operationType = opType;\n        if (!err ||\n            (!this.isMasterResource(request.resourceType) &&\n                (err.code === common_1.StatusCodes.PreconditionFailed ||\n                    err.code === common_1.StatusCodes.Conflict ||\n                    (err.code === common_1.StatusCodes.NotFound && err.substatus !== common_1.SubStatusCodes.ReadSessionNotAvailable)))) {\n            this.sessionContainer.set(request, resHeaders);\n        }\n    }\n    // TODO: some session tests are using this, but I made them use type coercsion to call this method because I don't think it should be public.\n    getSessionToken(collectionLink) {\n        if (!collectionLink) {\n            throw new Error(\"collectionLink cannot be null\");\n        }\n        const paths = common_1.Helper.parseLink(collectionLink);\n        if (paths === undefined) {\n            return \"\";\n        }\n        const request = this.getSessionParams(collectionLink);\n        return this.sessionContainer.get(request);\n    }\n    clearSessionToken(path) {\n        const request = this.getSessionParams(path);\n        this.sessionContainer.remove(request);\n    }\n    getSessionParams(resourceLink) {\n        const resourceId = null;\n        let resourceAddress = null;\n        const parserOutput = common_1.Helper.parseLink(resourceLink);\n        resourceAddress = parserOutput.objectBody.self;\n        const resourceType = parserOutput.type;\n        return {\n            resourceId,\n            resourceAddress,\n            resourceType,\n            isNameBased: true\n        };\n    }\n    isMasterResource(resourceType) {\n        if (resourceType === _1.Constants.Path.OffersPathSegment ||\n            resourceType === _1.Constants.Path.DatabasesPathSegment ||\n            resourceType === _1.Constants.Path.UsersPathSegment ||\n            resourceType === _1.Constants.Path.PermissionsPathSegment ||\n            resourceType === _1.Constants.Path.TopologyPathSegment ||\n            resourceType === _1.Constants.Path.DatabaseAccountPathSegment ||\n            resourceType === _1.Constants.Path.PartitionKeyRangesPathSegment ||\n            resourceType === _1.Constants.Path.CollectionsPathSegment) {\n            return true;\n        }\n        return false;\n    }\n}\nexports.ClientContext = ClientContext;\n//# sourceMappingURL=ClientContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/ClientContext.js\n");

/***/ }),

/***/ "./lib/CosmosClient.js":
/*!*****************************!*\
  !*** ./lib/CosmosClient.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst https_1 = __webpack_require__(/*! https */ \"./node_modules/https-browserify/index.js\");\nconst tunnel = tslib_1.__importStar(__webpack_require__(/*! tunnel */ \"./node_modules/tunnel/index.js\"));\nconst url = tslib_1.__importStar(__webpack_require__(/*! url */ \"./node_modules/url/url.js\"));\nconst _1 = __webpack_require__(/*! . */ \"./lib/index.js\");\nconst Database_1 = __webpack_require__(/*! ./client/Database */ \"./lib/client/Database/index.js\");\nconst Offer_1 = __webpack_require__(/*! ./client/Offer */ \"./lib/client/Offer/index.js\");\nconst ClientContext_1 = __webpack_require__(/*! ./ClientContext */ \"./lib/ClientContext.js\");\nconst common_1 = __webpack_require__(/*! ./common */ \"./lib/common/index.js\");\nconst globalEndpointManager_1 = __webpack_require__(/*! ./globalEndpointManager */ \"./lib/globalEndpointManager.js\");\n/**\n * Provides a client-side logical representation of the Azure Cosmos DB database account.\n * This client is used to configure and execute requests in the Azure Cosmos DB database service.\n * @example Instantiate a client and create a new database\n * ```typescript\n * const client = new CosmosClient({endpoint: \"<URL HERE>\", auth: {masterKey: \"<KEY HERE>\"}});\n * await client.databases.create({id: \"<datbase name here>\"});\n * ```\n * @example Instantiate a client with custom Connection Policy\n * ```typescript\n * const connectionPolicy = new ConnectionPolicy();\n * connectionPolicy.RequestTimeout = 10000;\n * const client = new CosmosClient({\n *    endpoint: \"<URL HERE>\",\n *    auth: {masterKey: \"<KEY HERE>\"},\n *    connectionPolicy\n * });\n * ```\n */\nclass CosmosClient {\n    constructor(options) {\n        this.options = options;\n        options.auth = options.auth || {};\n        options.connectionPolicy = common_1.Helper.parseConnectionPolicy(options.connectionPolicy);\n        options.defaultHeaders = options.defaultHeaders || {};\n        options.defaultHeaders[_1.Constants.HttpHeaders.CacheControl] = \"no-cache\";\n        options.defaultHeaders[_1.Constants.HttpHeaders.Version] = _1.Constants.CurrentVersion;\n        if (options.consistencyLevel !== undefined) {\n            options.defaultHeaders[_1.Constants.HttpHeaders.ConsistencyLevel] = options.consistencyLevel;\n        }\n        const platformDefaultHeaders = common_1.Platform.getPlatformDefaultHeaders() || {};\n        for (const platformDefaultHeader of Object.keys(platformDefaultHeaders)) {\n            options.defaultHeaders[platformDefaultHeader] = platformDefaultHeaders[platformDefaultHeader];\n        }\n        options.defaultHeaders[_1.Constants.HttpHeaders.UserAgent] = common_1.Platform.getUserAgent();\n        if (!this.options.agent) {\n            // Initialize request agent\n            const requestAgentOptions = {\n                keepAlive: true,\n                maxSockets: 256,\n                maxFreeSockets: 256\n            };\n            if (!!this.options.connectionPolicy.ProxyUrl) {\n                const proxyUrl = url.parse(this.options.connectionPolicy.ProxyUrl);\n                const port = parseInt(proxyUrl.port, 10);\n                requestAgentOptions.proxy = {\n                    host: proxyUrl.hostname,\n                    port,\n                    headers: {}\n                };\n                if (!!proxyUrl.auth) {\n                    requestAgentOptions.proxy.proxyAuth = proxyUrl.auth;\n                }\n                this.options.agent =\n                    proxyUrl.protocol.toLowerCase() === \"https:\"\n                        ? tunnel.httpsOverHttps(requestAgentOptions)\n                        : tunnel.httpsOverHttp(requestAgentOptions); // TODO: type coersion\n            }\n            else {\n                this.options.agent = new https_1.Agent(requestAgentOptions); // TODO: Move to request?\n            }\n        }\n        const globalEndpointManager = new globalEndpointManager_1.GlobalEndpointManager(this.options, (opts) => tslib_1.__awaiter(this, void 0, void 0, function* () { return this.getDatabaseAccount(opts); }));\n        this.clientContext = new ClientContext_1.ClientContext(options, globalEndpointManager);\n        this.databases = new Database_1.Databases(this, this.clientContext);\n        this.offers = new Offer_1.Offers(this, this.clientContext);\n    }\n    /**\n     * Get information about the current {@link DatabaseAccount} (including which regions are supported, etc.)\n     */\n    getDatabaseAccount(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const response = yield this.clientContext.getDatabaseAccount(options);\n            return { body: response.result, headers: response.headers, ref: this };\n        });\n    }\n    /**\n     * Gets the currently used write endpoint url. Useful for troubleshooting purposes.\n     *\n     * The url may contain a region suffix (e.g. \"-eastus\") if we're using location specific endpoints.\n     */\n    getWriteEndpoint() {\n        return this.clientContext.getWriteEndpoint();\n    }\n    /**\n     * Gets the currently used read endpoint. Useful for troubleshooting purposes.\n     *\n     * The url may contain a region suffix (e.g. \"-eastus\") if we're using location specific endpoints.\n     */\n    getReadEndpoitn() {\n        return this.clientContext.getReadEndpoint();\n    }\n    /**\n     * Used for reading, updating, or deleting a existing database by id or accessing containers belonging to that database.\n     *\n     * This does not make a network call. Use `.read` to get info about the database after getting the {@link Database} object.\n     *\n     * @param id The id of the database.\n     * @example Create a new container off of an existing database\n     * ```typescript\n     * const container = client.database(\"<database id>\").containers.create(\"<container id>\");\n     * ```\n     *\n     * @example Delete an existing database\n     * ```typescript\n     * await client.database(\"<id here>\").delete();\n     * ```\n     */\n    database(id) {\n        return new Database_1.Database(this, id, this.clientContext);\n    }\n    /**\n     * Used for reading, or updating a existing offer by id.\n     * @param id The id of the offer.\n     */\n    offer(id) {\n        return new Offer_1.Offer(this, id, this.clientContext);\n    }\n}\nexports.CosmosClient = CosmosClient;\n//# sourceMappingURL=CosmosClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/CosmosClient.js\n");

/***/ }),

/***/ "./lib/LocationCache.js":
/*!******************************!*\
  !*** ./lib/LocationCache.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common_1 = __webpack_require__(/*! ./common */ \"./lib/common/index.js\");\nconst LocationInfo_1 = __webpack_require__(/*! ./LocationInfo */ \"./lib/LocationInfo.js\");\nconst LocationRouting_1 = __webpack_require__(/*! ./request/LocationRouting */ \"./lib/request/LocationRouting.js\");\n/**\n * @private\n * @hidden\n */\nvar EndpointOperationType;\n(function (EndpointOperationType) {\n    EndpointOperationType[\"None\"] = \"None\";\n    EndpointOperationType[\"Read\"] = \"Read\";\n    EndpointOperationType[\"Write\"] = \"Write\";\n})(EndpointOperationType || (EndpointOperationType = {}));\n/**\n * Implements the abstraction to resolve target location for geo-replicated Database Account\n * with multiple writable and readable locations.\n * @private\n * @hidden\n */\nclass LocationCache {\n    constructor(options) {\n        this.options = options;\n        this.locationUnavailabilityInfoByEndpoint = new Map();\n        this.lastCacheUpdateTimestamp = new Date(0);\n        this.defaultEndpoint = options.endpoint;\n        this.locationInfo = new LocationInfo_1.LocationInfo(options.connectionPolicy.PreferredLocations, options.endpoint);\n    }\n    get prefferredLocations() {\n        return this.options.connectionPolicy.PreferredLocations;\n    }\n    getWriteEndpoint() {\n        return this.getWriteEndpoints()[0];\n    }\n    getReadEndpoint() {\n        return this.getReadEndpoints()[0];\n    }\n    /**\n     * Gets list of write endpoints ordered by\n     * 1. Preferred location\n     * 2. Endpoint availability\n     */\n    getWriteEndpoints() {\n        if (this.locationUnavailabilityInfoByEndpoint.size > 0 && this.canUpdateCache(this.lastCacheUpdateTimestamp)) {\n            this.updateLocationCache();\n        }\n        return this.locationInfo.writeEndpoints;\n    }\n    /**\n     * Gets list of read endpoints ordered by\n     * 1. Preferred location\n     * 2. Endpoint availability\n     */\n    getReadEndpoints() {\n        if (this.locationUnavailabilityInfoByEndpoint.size > 0 && this.canUpdateCache(this.lastCacheUpdateTimestamp)) {\n            this.updateLocationCache();\n        }\n        return this.locationInfo.readEndpoints;\n    }\n    markCurrentLocationUnavailableForRead(endpoint) {\n        this.markEndpointUnavailable(endpoint, EndpointOperationType.Read);\n    }\n    markCurrentLocationUnavailableForWrite(endpoint) {\n        this.markEndpointUnavailable(endpoint, EndpointOperationType.Write);\n    }\n    /**\n     * Invoked when {@link DatabaseAccount} is read\n     * @param databaseAccount The DatabaseAccount read\n     */\n    onDatabaseAccountRead(databaseAccount) {\n        this.updateLocationCache(databaseAccount.writableLocations, databaseAccount.readableLocations, databaseAccount.enableMultipleWritableLocations);\n    }\n    resolveServiceEndpoint(request) {\n        request.locationRouting = request.locationRouting || new LocationRouting_1.LocationRouting();\n        let locationIndex = request.locationRouting.locationIndexToRoute || 0;\n        if (!this.options.connectionPolicy.EnableEndpointDiscovery) {\n            return this.defaultEndpoint;\n        }\n        if (request.locationRouting.locationEndpointToRoute) {\n            return request.locationRouting.locationEndpointToRoute;\n        }\n        // If we're ignoring preferred locations, or if it's a write request that can't use multiple locations\n        // then default to the first two write locations, alternating (or the default endpoint)\n        if (request.locationRouting.ignorePreferredLocation ||\n            (!common_1.Helper.isReadRequest(request) && !this.canUseMultipleWriteLocations(request))) {\n            const currentInfo = this.locationInfo;\n            if (currentInfo.orderedWriteLocations.length > 0) {\n                locationIndex = Math.min(locationIndex % 2, currentInfo.orderedWriteLocations.length - 1);\n                const writeLocation = currentInfo.orderedWriteLocations[locationIndex];\n                return currentInfo.availableWriteEndpointByLocation.get(writeLocation);\n            }\n            else {\n                return this.defaultEndpoint;\n            }\n        }\n        else {\n            // If we're using preferred regions, then choose the correct endpoint based on the location index\n            const endpoints = common_1.Helper.isReadRequest(request)\n                ? this.locationInfo.readEndpoints\n                : this.locationInfo.writeEndpoints;\n            return endpoints[locationIndex % endpoints.length];\n        }\n    }\n    shouldRefreshEndpoints() {\n        let canRefreshInBackground = true;\n        const currentInfo = this.locationInfo;\n        const mostPreferredLocation = currentInfo.preferredLocations ? currentInfo.preferredLocations[0] : null;\n        if (this.options.connectionPolicy.EnableEndpointDiscovery) {\n            // Refresh if client opts-in to use multiple write locations, but it's not enabled on the server.\n            const shouldRefresh = this.options.connectionPolicy.UseMultipleWriteLocations && !this.enableMultipleWritableLocations;\n            if (mostPreferredLocation) {\n                if (currentInfo.availableReadEndpointByLocation.size > 0) {\n                    const mostPreferredReadEndpoint = currentInfo.availableReadEndpointByLocation.get(mostPreferredLocation);\n                    if (mostPreferredReadEndpoint) {\n                        if (mostPreferredReadEndpoint !== currentInfo.readEndpoints[0]) {\n                            return { shouldRefresh: true, canRefreshInBackground };\n                        }\n                    }\n                    else {\n                        return { shouldRefresh: true, canRefreshInBackground };\n                    }\n                }\n                if (!this.canUseMultipleWriteLocations()) {\n                    if (this.isEndpointUnavailable(currentInfo.writeEndpoints[0], EndpointOperationType.Write)) {\n                        canRefreshInBackground = currentInfo.writeEndpoints.length > 1;\n                        return { shouldRefresh: true, canRefreshInBackground };\n                    }\n                    else {\n                        return { shouldRefresh, canRefreshInBackground };\n                    }\n                }\n                else if (mostPreferredLocation) {\n                    const mostPreferredWriteEndpoint = currentInfo.availableWriteEndpointByLocation.get(mostPreferredLocation);\n                    if (mostPreferredWriteEndpoint) {\n                        return {\n                            shouldRefresh: shouldRefresh || mostPreferredWriteEndpoint !== currentInfo.writeEndpoints[0],\n                            canRefreshInBackground\n                        };\n                    }\n                    else {\n                        return { shouldRefresh, canRefreshInBackground };\n                    }\n                }\n            }\n        }\n        return { shouldRefresh: false, canRefreshInBackground };\n    }\n    canUseMultipleWriteLocations(request) {\n        let canUse = this.options.connectionPolicy.UseMultipleWriteLocations && this.enableMultipleWritableLocations;\n        if (request) {\n            canUse =\n                canUse &&\n                    (request.resourceType === common_1.ResourceType.item ||\n                        (request.resourceType === common_1.ResourceType.sproc && request.operationType === common_1.Constants.OperationTypes.Execute));\n        }\n        return canUse;\n    }\n    clearStaleEndpointUnavailabilityInfo() {\n        if (this.locationUnavailabilityInfoByEndpoint.size > 0) {\n            for (const [endpoint, info] of this.locationUnavailabilityInfoByEndpoint.entries()) {\n                if (info && this.canUpdateCache(info.lastUnavailablityCheckTimeStamp)) {\n                    this.locationUnavailabilityInfoByEndpoint.delete(endpoint);\n                }\n            }\n        }\n    }\n    isEndpointUnavailable(endpoint, expectedAvailableOperations) {\n        const unavailabilityInfo = this.locationUnavailabilityInfoByEndpoint.get(endpoint);\n        if (expectedAvailableOperations === EndpointOperationType.None ||\n            unavailabilityInfo == null ||\n            !unavailabilityInfo.operationTypes.has(expectedAvailableOperations)) {\n            return false;\n        }\n        else {\n            if (this.canUpdateCache(unavailabilityInfo.lastUnavailablityCheckTimeStamp)) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n    }\n    markEndpointUnavailable(unavailableEndpoint, unavailableOperationType) {\n        const unavailabilityInfo = this.locationUnavailabilityInfoByEndpoint.get(unavailableEndpoint);\n        const now = new Date(Date.now());\n        if (unavailabilityInfo == null) {\n            this.locationUnavailabilityInfoByEndpoint.set(unavailableEndpoint, {\n                lastUnavailablityCheckTimeStamp: now,\n                operationTypes: new Set([unavailableOperationType])\n            });\n        }\n        else {\n            const unavailableOperations = new Set([unavailableOperationType]);\n            for (const op of unavailabilityInfo.operationTypes) {\n                unavailableOperations.add(op);\n            }\n            this.locationUnavailabilityInfoByEndpoint.set(unavailableEndpoint, {\n                lastUnavailablityCheckTimeStamp: now,\n                operationTypes: unavailableOperations\n            });\n        }\n        this.updateLocationCache();\n    }\n    updateLocationCache(writeLocations, readLocations, enableMultipleWritableLocations) {\n        if (enableMultipleWritableLocations) {\n            this.enableMultipleWritableLocations = enableMultipleWritableLocations;\n        }\n        this.clearStaleEndpointUnavailabilityInfo();\n        // TODO: To sstay consistent with .NET, grab a local copy of the locationInfo\n        if (this.options.connectionPolicy.EnableEndpointDiscovery) {\n            if (readLocations) {\n                ({\n                    endpointsByLocation: this.locationInfo.availableReadEndpointByLocation,\n                    orderedLocations: this.locationInfo.orderedReadLocations\n                } = this.getEndpointByLocation(readLocations));\n            }\n            if (writeLocations) {\n                ({\n                    endpointsByLocation: this.locationInfo.availableWriteEndpointByLocation,\n                    orderedLocations: this.locationInfo.orderedWriteLocations\n                } = this.getEndpointByLocation(writeLocations));\n            }\n        }\n        this.locationInfo.writeEndpoints = this.getPreferredAvailableEndpoints(this.locationInfo.availableWriteEndpointByLocation, this.locationInfo.orderedWriteLocations, EndpointOperationType.Write, this.defaultEndpoint);\n        this.locationInfo.readEndpoints = this.getPreferredAvailableEndpoints(this.locationInfo.availableReadEndpointByLocation, this.locationInfo.orderedReadLocations, EndpointOperationType.Read, this.defaultEndpoint);\n        this.lastCacheUpdateTimestamp = new Date();\n    }\n    getPreferredAvailableEndpoints(endpointsByLocation, orderedLocations, expectedAvailableOperation, fallbackEndpoint) {\n        const endpoints = [];\n        if (this.options.connectionPolicy.EnableEndpointDiscovery && endpointsByLocation && endpointsByLocation.size > 0) {\n            if (this.canUseMultipleWriteLocations() || expectedAvailableOperation === EndpointOperationType.Read) {\n                const unavailableEndpoints = [];\n                if (this.options.connectionPolicy.PreferredLocations) {\n                    for (const location of this.options.connectionPolicy.PreferredLocations) {\n                        const endpoint = endpointsByLocation.get(location);\n                        if (endpoint) {\n                            if (this.isEndpointUnavailable(endpoint, expectedAvailableOperation)) {\n                                unavailableEndpoints.push(endpoint);\n                            }\n                            else {\n                                endpoints.push(endpoint);\n                            }\n                        }\n                    }\n                }\n                if (endpoints.length === 0) {\n                    endpoints.push(fallbackEndpoint);\n                }\n            }\n            else {\n                for (const location of orderedLocations) {\n                    if (endpointsByLocation.has(location)) {\n                        endpoints.push(endpointsByLocation.get(location));\n                    }\n                }\n            }\n        }\n        if (endpoints.length === 0) {\n            endpoints.push(fallbackEndpoint);\n        }\n        return endpoints;\n    }\n    getEndpointByLocation(locations) {\n        const endpointsByLocation = new Map();\n        const orderedLocations = [];\n        for (const location of locations) {\n            if (!location) {\n                continue;\n            }\n            const fixedUpLocation = location.name.toLowerCase().replace(/ /g, \"\");\n            endpointsByLocation.set(fixedUpLocation, location.databaseAccountEndpoint);\n            orderedLocations.push(fixedUpLocation);\n        }\n        return { endpointsByLocation, orderedLocations };\n    }\n    canUpdateCache(timestamp) {\n        return new Date(Date.now() - common_1.Constants.DefaultUnavailableLocationExpirationTimeMS) > timestamp;\n    }\n}\nexports.LocationCache = LocationCache;\n//# sourceMappingURL=LocationCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvTG9jYXRpb25DYWNoZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9Mb2NhdGlvbkNhY2hlLmpzPzBhYzMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBjb21tb25fMSA9IHJlcXVpcmUoXCIuL2NvbW1vblwiKTtcbmNvbnN0IExvY2F0aW9uSW5mb18xID0gcmVxdWlyZShcIi4vTG9jYXRpb25JbmZvXCIpO1xuY29uc3QgTG9jYXRpb25Sb3V0aW5nXzEgPSByZXF1aXJlKFwiLi9yZXF1ZXN0L0xvY2F0aW9uUm91dGluZ1wiKTtcbi8qKlxuICogQHByaXZhdGVcbiAqIEBoaWRkZW5cbiAqL1xudmFyIEVuZHBvaW50T3BlcmF0aW9uVHlwZTtcbihmdW5jdGlvbiAoRW5kcG9pbnRPcGVyYXRpb25UeXBlKSB7XG4gICAgRW5kcG9pbnRPcGVyYXRpb25UeXBlW1wiTm9uZVwiXSA9IFwiTm9uZVwiO1xuICAgIEVuZHBvaW50T3BlcmF0aW9uVHlwZVtcIlJlYWRcIl0gPSBcIlJlYWRcIjtcbiAgICBFbmRwb2ludE9wZXJhdGlvblR5cGVbXCJXcml0ZVwiXSA9IFwiV3JpdGVcIjtcbn0pKEVuZHBvaW50T3BlcmF0aW9uVHlwZSB8fCAoRW5kcG9pbnRPcGVyYXRpb25UeXBlID0ge30pKTtcbi8qKlxuICogSW1wbGVtZW50cyB0aGUgYWJzdHJhY3Rpb24gdG8gcmVzb2x2ZSB0YXJnZXQgbG9jYXRpb24gZm9yIGdlby1yZXBsaWNhdGVkIERhdGFiYXNlIEFjY291bnRcbiAqIHdpdGggbXVsdGlwbGUgd3JpdGFibGUgYW5kIHJlYWRhYmxlIGxvY2F0aW9ucy5cbiAqIEBwcml2YXRlXG4gKiBAaGlkZGVuXG4gKi9cbmNsYXNzIExvY2F0aW9uQ2FjaGUge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICAgICAgdGhpcy5sb2NhdGlvblVuYXZhaWxhYmlsaXR5SW5mb0J5RW5kcG9pbnQgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMubGFzdENhY2hlVXBkYXRlVGltZXN0YW1wID0gbmV3IERhdGUoMCk7XG4gICAgICAgIHRoaXMuZGVmYXVsdEVuZHBvaW50ID0gb3B0aW9ucy5lbmRwb2ludDtcbiAgICAgICAgdGhpcy5sb2NhdGlvbkluZm8gPSBuZXcgTG9jYXRpb25JbmZvXzEuTG9jYXRpb25JbmZvKG9wdGlvbnMuY29ubmVjdGlvblBvbGljeS5QcmVmZXJyZWRMb2NhdGlvbnMsIG9wdGlvbnMuZW5kcG9pbnQpO1xuICAgIH1cbiAgICBnZXQgcHJlZmZlcnJlZExvY2F0aW9ucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5jb25uZWN0aW9uUG9saWN5LlByZWZlcnJlZExvY2F0aW9ucztcbiAgICB9XG4gICAgZ2V0V3JpdGVFbmRwb2ludCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0V3JpdGVFbmRwb2ludHMoKVswXTtcbiAgICB9XG4gICAgZ2V0UmVhZEVuZHBvaW50KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRSZWFkRW5kcG9pbnRzKClbMF07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgbGlzdCBvZiB3cml0ZSBlbmRwb2ludHMgb3JkZXJlZCBieVxuICAgICAqIDEuIFByZWZlcnJlZCBsb2NhdGlvblxuICAgICAqIDIuIEVuZHBvaW50IGF2YWlsYWJpbGl0eVxuICAgICAqL1xuICAgIGdldFdyaXRlRW5kcG9pbnRzKCkge1xuICAgICAgICBpZiAodGhpcy5sb2NhdGlvblVuYXZhaWxhYmlsaXR5SW5mb0J5RW5kcG9pbnQuc2l6ZSA+IDAgJiYgdGhpcy5jYW5VcGRhdGVDYWNoZSh0aGlzLmxhc3RDYWNoZVVwZGF0ZVRpbWVzdGFtcCkpIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlTG9jYXRpb25DYWNoZSgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmxvY2F0aW9uSW5mby53cml0ZUVuZHBvaW50cztcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyBsaXN0IG9mIHJlYWQgZW5kcG9pbnRzIG9yZGVyZWQgYnlcbiAgICAgKiAxLiBQcmVmZXJyZWQgbG9jYXRpb25cbiAgICAgKiAyLiBFbmRwb2ludCBhdmFpbGFiaWxpdHlcbiAgICAgKi9cbiAgICBnZXRSZWFkRW5kcG9pbnRzKCkge1xuICAgICAgICBpZiAodGhpcy5sb2NhdGlvblVuYXZhaWxhYmlsaXR5SW5mb0J5RW5kcG9pbnQuc2l6ZSA+IDAgJiYgdGhpcy5jYW5VcGRhdGVDYWNoZSh0aGlzLmxhc3RDYWNoZVVwZGF0ZVRpbWVzdGFtcCkpIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlTG9jYXRpb25DYWNoZSgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmxvY2F0aW9uSW5mby5yZWFkRW5kcG9pbnRzO1xuICAgIH1cbiAgICBtYXJrQ3VycmVudExvY2F0aW9uVW5hdmFpbGFibGVGb3JSZWFkKGVuZHBvaW50KSB7XG4gICAgICAgIHRoaXMubWFya0VuZHBvaW50VW5hdmFpbGFibGUoZW5kcG9pbnQsIEVuZHBvaW50T3BlcmF0aW9uVHlwZS5SZWFkKTtcbiAgICB9XG4gICAgbWFya0N1cnJlbnRMb2NhdGlvblVuYXZhaWxhYmxlRm9yV3JpdGUoZW5kcG9pbnQpIHtcbiAgICAgICAgdGhpcy5tYXJrRW5kcG9pbnRVbmF2YWlsYWJsZShlbmRwb2ludCwgRW5kcG9pbnRPcGVyYXRpb25UeXBlLldyaXRlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSW52b2tlZCB3aGVuIHtAbGluayBEYXRhYmFzZUFjY291bnR9IGlzIHJlYWRcbiAgICAgKiBAcGFyYW0gZGF0YWJhc2VBY2NvdW50IFRoZSBEYXRhYmFzZUFjY291bnQgcmVhZFxuICAgICAqL1xuICAgIG9uRGF0YWJhc2VBY2NvdW50UmVhZChkYXRhYmFzZUFjY291bnQpIHtcbiAgICAgICAgdGhpcy51cGRhdGVMb2NhdGlvbkNhY2hlKGRhdGFiYXNlQWNjb3VudC53cml0YWJsZUxvY2F0aW9ucywgZGF0YWJhc2VBY2NvdW50LnJlYWRhYmxlTG9jYXRpb25zLCBkYXRhYmFzZUFjY291bnQuZW5hYmxlTXVsdGlwbGVXcml0YWJsZUxvY2F0aW9ucyk7XG4gICAgfVxuICAgIHJlc29sdmVTZXJ2aWNlRW5kcG9pbnQocmVxdWVzdCkge1xuICAgICAgICByZXF1ZXN0LmxvY2F0aW9uUm91dGluZyA9IHJlcXVlc3QubG9jYXRpb25Sb3V0aW5nIHx8IG5ldyBMb2NhdGlvblJvdXRpbmdfMS5Mb2NhdGlvblJvdXRpbmcoKTtcbiAgICAgICAgbGV0IGxvY2F0aW9uSW5kZXggPSByZXF1ZXN0LmxvY2F0aW9uUm91dGluZy5sb2NhdGlvbkluZGV4VG9Sb3V0ZSB8fCAwO1xuICAgICAgICBpZiAoIXRoaXMub3B0aW9ucy5jb25uZWN0aW9uUG9saWN5LkVuYWJsZUVuZHBvaW50RGlzY292ZXJ5KSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kZWZhdWx0RW5kcG9pbnQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlcXVlc3QubG9jYXRpb25Sb3V0aW5nLmxvY2F0aW9uRW5kcG9pbnRUb1JvdXRlKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVxdWVzdC5sb2NhdGlvblJvdXRpbmcubG9jYXRpb25FbmRwb2ludFRvUm91dGU7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgd2UncmUgaWdub3JpbmcgcHJlZmVycmVkIGxvY2F0aW9ucywgb3IgaWYgaXQncyBhIHdyaXRlIHJlcXVlc3QgdGhhdCBjYW4ndCB1c2UgbXVsdGlwbGUgbG9jYXRpb25zXG4gICAgICAgIC8vIHRoZW4gZGVmYXVsdCB0byB0aGUgZmlyc3QgdHdvIHdyaXRlIGxvY2F0aW9ucywgYWx0ZXJuYXRpbmcgKG9yIHRoZSBkZWZhdWx0IGVuZHBvaW50KVxuICAgICAgICBpZiAocmVxdWVzdC5sb2NhdGlvblJvdXRpbmcuaWdub3JlUHJlZmVycmVkTG9jYXRpb24gfHxcbiAgICAgICAgICAgICghY29tbW9uXzEuSGVscGVyLmlzUmVhZFJlcXVlc3QocmVxdWVzdCkgJiYgIXRoaXMuY2FuVXNlTXVsdGlwbGVXcml0ZUxvY2F0aW9ucyhyZXF1ZXN0KSkpIHtcbiAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRJbmZvID0gdGhpcy5sb2NhdGlvbkluZm87XG4gICAgICAgICAgICBpZiAoY3VycmVudEluZm8ub3JkZXJlZFdyaXRlTG9jYXRpb25zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBsb2NhdGlvbkluZGV4ID0gTWF0aC5taW4obG9jYXRpb25JbmRleCAlIDIsIGN1cnJlbnRJbmZvLm9yZGVyZWRXcml0ZUxvY2F0aW9ucy5sZW5ndGggLSAxKTtcbiAgICAgICAgICAgICAgICBjb25zdCB3cml0ZUxvY2F0aW9uID0gY3VycmVudEluZm8ub3JkZXJlZFdyaXRlTG9jYXRpb25zW2xvY2F0aW9uSW5kZXhdO1xuICAgICAgICAgICAgICAgIHJldHVybiBjdXJyZW50SW5mby5hdmFpbGFibGVXcml0ZUVuZHBvaW50QnlMb2NhdGlvbi5nZXQod3JpdGVMb2NhdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kZWZhdWx0RW5kcG9pbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBJZiB3ZSdyZSB1c2luZyBwcmVmZXJyZWQgcmVnaW9ucywgdGhlbiBjaG9vc2UgdGhlIGNvcnJlY3QgZW5kcG9pbnQgYmFzZWQgb24gdGhlIGxvY2F0aW9uIGluZGV4XG4gICAgICAgICAgICBjb25zdCBlbmRwb2ludHMgPSBjb21tb25fMS5IZWxwZXIuaXNSZWFkUmVxdWVzdChyZXF1ZXN0KVxuICAgICAgICAgICAgICAgID8gdGhpcy5sb2NhdGlvbkluZm8ucmVhZEVuZHBvaW50c1xuICAgICAgICAgICAgICAgIDogdGhpcy5sb2NhdGlvbkluZm8ud3JpdGVFbmRwb2ludHM7XG4gICAgICAgICAgICByZXR1cm4gZW5kcG9pbnRzW2xvY2F0aW9uSW5kZXggJSBlbmRwb2ludHMubGVuZ3RoXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzaG91bGRSZWZyZXNoRW5kcG9pbnRzKCkge1xuICAgICAgICBsZXQgY2FuUmVmcmVzaEluQmFja2dyb3VuZCA9IHRydWU7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRJbmZvID0gdGhpcy5sb2NhdGlvbkluZm87XG4gICAgICAgIGNvbnN0IG1vc3RQcmVmZXJyZWRMb2NhdGlvbiA9IGN1cnJlbnRJbmZvLnByZWZlcnJlZExvY2F0aW9ucyA/IGN1cnJlbnRJbmZvLnByZWZlcnJlZExvY2F0aW9uc1swXSA6IG51bGw7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuY29ubmVjdGlvblBvbGljeS5FbmFibGVFbmRwb2ludERpc2NvdmVyeSkge1xuICAgICAgICAgICAgLy8gUmVmcmVzaCBpZiBjbGllbnQgb3B0cy1pbiB0byB1c2UgbXVsdGlwbGUgd3JpdGUgbG9jYXRpb25zLCBidXQgaXQncyBub3QgZW5hYmxlZCBvbiB0aGUgc2VydmVyLlxuICAgICAgICAgICAgY29uc3Qgc2hvdWxkUmVmcmVzaCA9IHRoaXMub3B0aW9ucy5jb25uZWN0aW9uUG9saWN5LlVzZU11bHRpcGxlV3JpdGVMb2NhdGlvbnMgJiYgIXRoaXMuZW5hYmxlTXVsdGlwbGVXcml0YWJsZUxvY2F0aW9ucztcbiAgICAgICAgICAgIGlmIChtb3N0UHJlZmVycmVkTG9jYXRpb24pIHtcbiAgICAgICAgICAgICAgICBpZiAoY3VycmVudEluZm8uYXZhaWxhYmxlUmVhZEVuZHBvaW50QnlMb2NhdGlvbi5zaXplID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBtb3N0UHJlZmVycmVkUmVhZEVuZHBvaW50ID0gY3VycmVudEluZm8uYXZhaWxhYmxlUmVhZEVuZHBvaW50QnlMb2NhdGlvbi5nZXQobW9zdFByZWZlcnJlZExvY2F0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1vc3RQcmVmZXJyZWRSZWFkRW5kcG9pbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtb3N0UHJlZmVycmVkUmVhZEVuZHBvaW50ICE9PSBjdXJyZW50SW5mby5yZWFkRW5kcG9pbnRzWzBdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgc2hvdWxkUmVmcmVzaDogdHJ1ZSwgY2FuUmVmcmVzaEluQmFja2dyb3VuZCB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgc2hvdWxkUmVmcmVzaDogdHJ1ZSwgY2FuUmVmcmVzaEluQmFja2dyb3VuZCB9O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5jYW5Vc2VNdWx0aXBsZVdyaXRlTG9jYXRpb25zKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNFbmRwb2ludFVuYXZhaWxhYmxlKGN1cnJlbnRJbmZvLndyaXRlRW5kcG9pbnRzWzBdLCBFbmRwb2ludE9wZXJhdGlvblR5cGUuV3JpdGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYW5SZWZyZXNoSW5CYWNrZ3JvdW5kID0gY3VycmVudEluZm8ud3JpdGVFbmRwb2ludHMubGVuZ3RoID4gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IHNob3VsZFJlZnJlc2g6IHRydWUsIGNhblJlZnJlc2hJbkJhY2tncm91bmQgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IHNob3VsZFJlZnJlc2gsIGNhblJlZnJlc2hJbkJhY2tncm91bmQgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChtb3N0UHJlZmVycmVkTG9jYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbW9zdFByZWZlcnJlZFdyaXRlRW5kcG9pbnQgPSBjdXJyZW50SW5mby5hdmFpbGFibGVXcml0ZUVuZHBvaW50QnlMb2NhdGlvbi5nZXQobW9zdFByZWZlcnJlZExvY2F0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1vc3RQcmVmZXJyZWRXcml0ZUVuZHBvaW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3VsZFJlZnJlc2g6IHNob3VsZFJlZnJlc2ggfHwgbW9zdFByZWZlcnJlZFdyaXRlRW5kcG9pbnQgIT09IGN1cnJlbnRJbmZvLndyaXRlRW5kcG9pbnRzWzBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhblJlZnJlc2hJbkJhY2tncm91bmRcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBzaG91bGRSZWZyZXNoLCBjYW5SZWZyZXNoSW5CYWNrZ3JvdW5kIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgc2hvdWxkUmVmcmVzaDogZmFsc2UsIGNhblJlZnJlc2hJbkJhY2tncm91bmQgfTtcbiAgICB9XG4gICAgY2FuVXNlTXVsdGlwbGVXcml0ZUxvY2F0aW9ucyhyZXF1ZXN0KSB7XG4gICAgICAgIGxldCBjYW5Vc2UgPSB0aGlzLm9wdGlvbnMuY29ubmVjdGlvblBvbGljeS5Vc2VNdWx0aXBsZVdyaXRlTG9jYXRpb25zICYmIHRoaXMuZW5hYmxlTXVsdGlwbGVXcml0YWJsZUxvY2F0aW9ucztcbiAgICAgICAgaWYgKHJlcXVlc3QpIHtcbiAgICAgICAgICAgIGNhblVzZSA9XG4gICAgICAgICAgICAgICAgY2FuVXNlICYmXG4gICAgICAgICAgICAgICAgICAgIChyZXF1ZXN0LnJlc291cmNlVHlwZSA9PT0gY29tbW9uXzEuUmVzb3VyY2VUeXBlLml0ZW0gfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIChyZXF1ZXN0LnJlc291cmNlVHlwZSA9PT0gY29tbW9uXzEuUmVzb3VyY2VUeXBlLnNwcm9jICYmIHJlcXVlc3Qub3BlcmF0aW9uVHlwZSA9PT0gY29tbW9uXzEuQ29uc3RhbnRzLk9wZXJhdGlvblR5cGVzLkV4ZWN1dGUpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY2FuVXNlO1xuICAgIH1cbiAgICBjbGVhclN0YWxlRW5kcG9pbnRVbmF2YWlsYWJpbGl0eUluZm8oKSB7XG4gICAgICAgIGlmICh0aGlzLmxvY2F0aW9uVW5hdmFpbGFiaWxpdHlJbmZvQnlFbmRwb2ludC5zaXplID4gMCkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBbZW5kcG9pbnQsIGluZm9dIG9mIHRoaXMubG9jYXRpb25VbmF2YWlsYWJpbGl0eUluZm9CeUVuZHBvaW50LmVudHJpZXMoKSkge1xuICAgICAgICAgICAgICAgIGlmIChpbmZvICYmIHRoaXMuY2FuVXBkYXRlQ2FjaGUoaW5mby5sYXN0VW5hdmFpbGFibGl0eUNoZWNrVGltZVN0YW1wKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvY2F0aW9uVW5hdmFpbGFiaWxpdHlJbmZvQnlFbmRwb2ludC5kZWxldGUoZW5kcG9pbnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBpc0VuZHBvaW50VW5hdmFpbGFibGUoZW5kcG9pbnQsIGV4cGVjdGVkQXZhaWxhYmxlT3BlcmF0aW9ucykge1xuICAgICAgICBjb25zdCB1bmF2YWlsYWJpbGl0eUluZm8gPSB0aGlzLmxvY2F0aW9uVW5hdmFpbGFiaWxpdHlJbmZvQnlFbmRwb2ludC5nZXQoZW5kcG9pbnQpO1xuICAgICAgICBpZiAoZXhwZWN0ZWRBdmFpbGFibGVPcGVyYXRpb25zID09PSBFbmRwb2ludE9wZXJhdGlvblR5cGUuTm9uZSB8fFxuICAgICAgICAgICAgdW5hdmFpbGFiaWxpdHlJbmZvID09IG51bGwgfHxcbiAgICAgICAgICAgICF1bmF2YWlsYWJpbGl0eUluZm8ub3BlcmF0aW9uVHlwZXMuaGFzKGV4cGVjdGVkQXZhaWxhYmxlT3BlcmF0aW9ucykpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmNhblVwZGF0ZUNhY2hlKHVuYXZhaWxhYmlsaXR5SW5mby5sYXN0VW5hdmFpbGFibGl0eUNoZWNrVGltZVN0YW1wKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIG1hcmtFbmRwb2ludFVuYXZhaWxhYmxlKHVuYXZhaWxhYmxlRW5kcG9pbnQsIHVuYXZhaWxhYmxlT3BlcmF0aW9uVHlwZSkge1xuICAgICAgICBjb25zdCB1bmF2YWlsYWJpbGl0eUluZm8gPSB0aGlzLmxvY2F0aW9uVW5hdmFpbGFiaWxpdHlJbmZvQnlFbmRwb2ludC5nZXQodW5hdmFpbGFibGVFbmRwb2ludCk7XG4gICAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKERhdGUubm93KCkpO1xuICAgICAgICBpZiAodW5hdmFpbGFiaWxpdHlJbmZvID09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMubG9jYXRpb25VbmF2YWlsYWJpbGl0eUluZm9CeUVuZHBvaW50LnNldCh1bmF2YWlsYWJsZUVuZHBvaW50LCB7XG4gICAgICAgICAgICAgICAgbGFzdFVuYXZhaWxhYmxpdHlDaGVja1RpbWVTdGFtcDogbm93LFxuICAgICAgICAgICAgICAgIG9wZXJhdGlvblR5cGVzOiBuZXcgU2V0KFt1bmF2YWlsYWJsZU9wZXJhdGlvblR5cGVdKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCB1bmF2YWlsYWJsZU9wZXJhdGlvbnMgPSBuZXcgU2V0KFt1bmF2YWlsYWJsZU9wZXJhdGlvblR5cGVdKTtcbiAgICAgICAgICAgIGZvciAoY29uc3Qgb3Agb2YgdW5hdmFpbGFiaWxpdHlJbmZvLm9wZXJhdGlvblR5cGVzKSB7XG4gICAgICAgICAgICAgICAgdW5hdmFpbGFibGVPcGVyYXRpb25zLmFkZChvcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmxvY2F0aW9uVW5hdmFpbGFiaWxpdHlJbmZvQnlFbmRwb2ludC5zZXQodW5hdmFpbGFibGVFbmRwb2ludCwge1xuICAgICAgICAgICAgICAgIGxhc3RVbmF2YWlsYWJsaXR5Q2hlY2tUaW1lU3RhbXA6IG5vdyxcbiAgICAgICAgICAgICAgICBvcGVyYXRpb25UeXBlczogdW5hdmFpbGFibGVPcGVyYXRpb25zXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnVwZGF0ZUxvY2F0aW9uQ2FjaGUoKTtcbiAgICB9XG4gICAgdXBkYXRlTG9jYXRpb25DYWNoZSh3cml0ZUxvY2F0aW9ucywgcmVhZExvY2F0aW9ucywgZW5hYmxlTXVsdGlwbGVXcml0YWJsZUxvY2F0aW9ucykge1xuICAgICAgICBpZiAoZW5hYmxlTXVsdGlwbGVXcml0YWJsZUxvY2F0aW9ucykge1xuICAgICAgICAgICAgdGhpcy5lbmFibGVNdWx0aXBsZVdyaXRhYmxlTG9jYXRpb25zID0gZW5hYmxlTXVsdGlwbGVXcml0YWJsZUxvY2F0aW9ucztcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNsZWFyU3RhbGVFbmRwb2ludFVuYXZhaWxhYmlsaXR5SW5mbygpO1xuICAgICAgICAvLyBUT0RPOiBUbyBzc3RheSBjb25zaXN0ZW50IHdpdGggLk5FVCwgZ3JhYiBhIGxvY2FsIGNvcHkgb2YgdGhlIGxvY2F0aW9uSW5mb1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmNvbm5lY3Rpb25Qb2xpY3kuRW5hYmxlRW5kcG9pbnREaXNjb3ZlcnkpIHtcbiAgICAgICAgICAgIGlmIChyZWFkTG9jYXRpb25zKSB7XG4gICAgICAgICAgICAgICAgKHtcbiAgICAgICAgICAgICAgICAgICAgZW5kcG9pbnRzQnlMb2NhdGlvbjogdGhpcy5sb2NhdGlvbkluZm8uYXZhaWxhYmxlUmVhZEVuZHBvaW50QnlMb2NhdGlvbixcbiAgICAgICAgICAgICAgICAgICAgb3JkZXJlZExvY2F0aW9uczogdGhpcy5sb2NhdGlvbkluZm8ub3JkZXJlZFJlYWRMb2NhdGlvbnNcbiAgICAgICAgICAgICAgICB9ID0gdGhpcy5nZXRFbmRwb2ludEJ5TG9jYXRpb24ocmVhZExvY2F0aW9ucykpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHdyaXRlTG9jYXRpb25zKSB7XG4gICAgICAgICAgICAgICAgKHtcbiAgICAgICAgICAgICAgICAgICAgZW5kcG9pbnRzQnlMb2NhdGlvbjogdGhpcy5sb2NhdGlvbkluZm8uYXZhaWxhYmxlV3JpdGVFbmRwb2ludEJ5TG9jYXRpb24sXG4gICAgICAgICAgICAgICAgICAgIG9yZGVyZWRMb2NhdGlvbnM6IHRoaXMubG9jYXRpb25JbmZvLm9yZGVyZWRXcml0ZUxvY2F0aW9uc1xuICAgICAgICAgICAgICAgIH0gPSB0aGlzLmdldEVuZHBvaW50QnlMb2NhdGlvbih3cml0ZUxvY2F0aW9ucykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMubG9jYXRpb25JbmZvLndyaXRlRW5kcG9pbnRzID0gdGhpcy5nZXRQcmVmZXJyZWRBdmFpbGFibGVFbmRwb2ludHModGhpcy5sb2NhdGlvbkluZm8uYXZhaWxhYmxlV3JpdGVFbmRwb2ludEJ5TG9jYXRpb24sIHRoaXMubG9jYXRpb25JbmZvLm9yZGVyZWRXcml0ZUxvY2F0aW9ucywgRW5kcG9pbnRPcGVyYXRpb25UeXBlLldyaXRlLCB0aGlzLmRlZmF1bHRFbmRwb2ludCk7XG4gICAgICAgIHRoaXMubG9jYXRpb25JbmZvLnJlYWRFbmRwb2ludHMgPSB0aGlzLmdldFByZWZlcnJlZEF2YWlsYWJsZUVuZHBvaW50cyh0aGlzLmxvY2F0aW9uSW5mby5hdmFpbGFibGVSZWFkRW5kcG9pbnRCeUxvY2F0aW9uLCB0aGlzLmxvY2F0aW9uSW5mby5vcmRlcmVkUmVhZExvY2F0aW9ucywgRW5kcG9pbnRPcGVyYXRpb25UeXBlLlJlYWQsIHRoaXMuZGVmYXVsdEVuZHBvaW50KTtcbiAgICAgICAgdGhpcy5sYXN0Q2FjaGVVcGRhdGVUaW1lc3RhbXAgPSBuZXcgRGF0ZSgpO1xuICAgIH1cbiAgICBnZXRQcmVmZXJyZWRBdmFpbGFibGVFbmRwb2ludHMoZW5kcG9pbnRzQnlMb2NhdGlvbiwgb3JkZXJlZExvY2F0aW9ucywgZXhwZWN0ZWRBdmFpbGFibGVPcGVyYXRpb24sIGZhbGxiYWNrRW5kcG9pbnQpIHtcbiAgICAgICAgY29uc3QgZW5kcG9pbnRzID0gW107XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuY29ubmVjdGlvblBvbGljeS5FbmFibGVFbmRwb2ludERpc2NvdmVyeSAmJiBlbmRwb2ludHNCeUxvY2F0aW9uICYmIGVuZHBvaW50c0J5TG9jYXRpb24uc2l6ZSA+IDApIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmNhblVzZU11bHRpcGxlV3JpdGVMb2NhdGlvbnMoKSB8fCBleHBlY3RlZEF2YWlsYWJsZU9wZXJhdGlvbiA9PT0gRW5kcG9pbnRPcGVyYXRpb25UeXBlLlJlYWQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB1bmF2YWlsYWJsZUVuZHBvaW50cyA9IFtdO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuY29ubmVjdGlvblBvbGljeS5QcmVmZXJyZWRMb2NhdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBsb2NhdGlvbiBvZiB0aGlzLm9wdGlvbnMuY29ubmVjdGlvblBvbGljeS5QcmVmZXJyZWRMb2NhdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGVuZHBvaW50ID0gZW5kcG9pbnRzQnlMb2NhdGlvbi5nZXQobG9jYXRpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVuZHBvaW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNFbmRwb2ludFVuYXZhaWxhYmxlKGVuZHBvaW50LCBleHBlY3RlZEF2YWlsYWJsZU9wZXJhdGlvbikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5hdmFpbGFibGVFbmRwb2ludHMucHVzaChlbmRwb2ludCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmRwb2ludHMucHVzaChlbmRwb2ludCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChlbmRwb2ludHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGVuZHBvaW50cy5wdXNoKGZhbGxiYWNrRW5kcG9pbnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgbG9jYXRpb24gb2Ygb3JkZXJlZExvY2F0aW9ucykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZW5kcG9pbnRzQnlMb2NhdGlvbi5oYXMobG9jYXRpb24pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbmRwb2ludHMucHVzaChlbmRwb2ludHNCeUxvY2F0aW9uLmdldChsb2NhdGlvbikpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChlbmRwb2ludHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBlbmRwb2ludHMucHVzaChmYWxsYmFja0VuZHBvaW50KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZW5kcG9pbnRzO1xuICAgIH1cbiAgICBnZXRFbmRwb2ludEJ5TG9jYXRpb24obG9jYXRpb25zKSB7XG4gICAgICAgIGNvbnN0IGVuZHBvaW50c0J5TG9jYXRpb24gPSBuZXcgTWFwKCk7XG4gICAgICAgIGNvbnN0IG9yZGVyZWRMb2NhdGlvbnMgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBsb2NhdGlvbiBvZiBsb2NhdGlvbnMpIHtcbiAgICAgICAgICAgIGlmICghbG9jYXRpb24pIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGZpeGVkVXBMb2NhdGlvbiA9IGxvY2F0aW9uLm5hbWUudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC8gL2csIFwiXCIpO1xuICAgICAgICAgICAgZW5kcG9pbnRzQnlMb2NhdGlvbi5zZXQoZml4ZWRVcExvY2F0aW9uLCBsb2NhdGlvbi5kYXRhYmFzZUFjY291bnRFbmRwb2ludCk7XG4gICAgICAgICAgICBvcmRlcmVkTG9jYXRpb25zLnB1c2goZml4ZWRVcExvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBlbmRwb2ludHNCeUxvY2F0aW9uLCBvcmRlcmVkTG9jYXRpb25zIH07XG4gICAgfVxuICAgIGNhblVwZGF0ZUNhY2hlKHRpbWVzdGFtcCkge1xuICAgICAgICByZXR1cm4gbmV3IERhdGUoRGF0ZS5ub3coKSAtIGNvbW1vbl8xLkNvbnN0YW50cy5EZWZhdWx0VW5hdmFpbGFibGVMb2NhdGlvbkV4cGlyYXRpb25UaW1lTVMpID4gdGltZXN0YW1wO1xuICAgIH1cbn1cbmV4cG9ydHMuTG9jYXRpb25DYWNoZSA9IExvY2F0aW9uQ2FjaGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Mb2NhdGlvbkNhY2hlLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/LocationCache.js\n");

/***/ }),

/***/ "./lib/LocationInfo.js":
/*!*****************************!*\
  !*** ./lib/LocationInfo.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Used to store the location info in Location Cache\n * @private\n * @hidden\n */\nclass LocationInfo {\n    constructor(preferredLocationsOrOtherLocationInfo, defaultEndpoint) {\n        let preferredLocations = null;\n        let other = null;\n        if (Array.isArray(preferredLocationsOrOtherLocationInfo)) {\n            preferredLocations = preferredLocationsOrOtherLocationInfo;\n        }\n        else if (preferredLocationsOrOtherLocationInfo instanceof LocationInfo) {\n            other = preferredLocationsOrOtherLocationInfo;\n        }\n        else {\n            throw new Error(\"Invalid type passed to LocationInfo\");\n        }\n        if (preferredLocations && defaultEndpoint) {\n            this.preferredLocations = preferredLocations;\n            this.availableWriteEndpointByLocation = new Map();\n            this.availableReadEndpointByLocation = new Map();\n            this.orderedWriteLocations = [];\n            this.orderedReadLocations = [];\n            this.writeEndpoints = [defaultEndpoint];\n            this.readEndpoints = [defaultEndpoint];\n        }\n        else if (other) {\n            this.preferredLocations = other.preferredLocations;\n            this.availableReadEndpointByLocation = other.availableReadEndpointByLocation;\n            this.availableWriteEndpointByLocation = other.availableWriteEndpointByLocation;\n            this.orderedReadLocations = other.orderedReadLocations;\n            this.orderedWriteLocations = other.orderedWriteLocations;\n            this.writeEndpoints = other.writeEndpoints;\n            this.readEndpoints = other.readEndpoints;\n        }\n        else {\n            // This should never be called\n            throw new Error(\"Invalid arguments passed to LocationInfo\");\n        }\n    }\n}\nexports.LocationInfo = LocationInfo;\n//# sourceMappingURL=LocationInfo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvTG9jYXRpb25JbmZvLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL0xvY2F0aW9uSW5mby5qcz82MTBkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqXG4gKiBVc2VkIHRvIHN0b3JlIHRoZSBsb2NhdGlvbiBpbmZvIGluIExvY2F0aW9uIENhY2hlXG4gKiBAcHJpdmF0ZVxuICogQGhpZGRlblxuICovXG5jbGFzcyBMb2NhdGlvbkluZm8ge1xuICAgIGNvbnN0cnVjdG9yKHByZWZlcnJlZExvY2F0aW9uc09yT3RoZXJMb2NhdGlvbkluZm8sIGRlZmF1bHRFbmRwb2ludCkge1xuICAgICAgICBsZXQgcHJlZmVycmVkTG9jYXRpb25zID0gbnVsbDtcbiAgICAgICAgbGV0IG90aGVyID0gbnVsbDtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocHJlZmVycmVkTG9jYXRpb25zT3JPdGhlckxvY2F0aW9uSW5mbykpIHtcbiAgICAgICAgICAgIHByZWZlcnJlZExvY2F0aW9ucyA9IHByZWZlcnJlZExvY2F0aW9uc09yT3RoZXJMb2NhdGlvbkluZm87XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocHJlZmVycmVkTG9jYXRpb25zT3JPdGhlckxvY2F0aW9uSW5mbyBpbnN0YW5jZW9mIExvY2F0aW9uSW5mbykge1xuICAgICAgICAgICAgb3RoZXIgPSBwcmVmZXJyZWRMb2NhdGlvbnNPck90aGVyTG9jYXRpb25JbmZvO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB0eXBlIHBhc3NlZCB0byBMb2NhdGlvbkluZm9cIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByZWZlcnJlZExvY2F0aW9ucyAmJiBkZWZhdWx0RW5kcG9pbnQpIHtcbiAgICAgICAgICAgIHRoaXMucHJlZmVycmVkTG9jYXRpb25zID0gcHJlZmVycmVkTG9jYXRpb25zO1xuICAgICAgICAgICAgdGhpcy5hdmFpbGFibGVXcml0ZUVuZHBvaW50QnlMb2NhdGlvbiA9IG5ldyBNYXAoKTtcbiAgICAgICAgICAgIHRoaXMuYXZhaWxhYmxlUmVhZEVuZHBvaW50QnlMb2NhdGlvbiA9IG5ldyBNYXAoKTtcbiAgICAgICAgICAgIHRoaXMub3JkZXJlZFdyaXRlTG9jYXRpb25zID0gW107XG4gICAgICAgICAgICB0aGlzLm9yZGVyZWRSZWFkTG9jYXRpb25zID0gW107XG4gICAgICAgICAgICB0aGlzLndyaXRlRW5kcG9pbnRzID0gW2RlZmF1bHRFbmRwb2ludF07XG4gICAgICAgICAgICB0aGlzLnJlYWRFbmRwb2ludHMgPSBbZGVmYXVsdEVuZHBvaW50XTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChvdGhlcikge1xuICAgICAgICAgICAgdGhpcy5wcmVmZXJyZWRMb2NhdGlvbnMgPSBvdGhlci5wcmVmZXJyZWRMb2NhdGlvbnM7XG4gICAgICAgICAgICB0aGlzLmF2YWlsYWJsZVJlYWRFbmRwb2ludEJ5TG9jYXRpb24gPSBvdGhlci5hdmFpbGFibGVSZWFkRW5kcG9pbnRCeUxvY2F0aW9uO1xuICAgICAgICAgICAgdGhpcy5hdmFpbGFibGVXcml0ZUVuZHBvaW50QnlMb2NhdGlvbiA9IG90aGVyLmF2YWlsYWJsZVdyaXRlRW5kcG9pbnRCeUxvY2F0aW9uO1xuICAgICAgICAgICAgdGhpcy5vcmRlcmVkUmVhZExvY2F0aW9ucyA9IG90aGVyLm9yZGVyZWRSZWFkTG9jYXRpb25zO1xuICAgICAgICAgICAgdGhpcy5vcmRlcmVkV3JpdGVMb2NhdGlvbnMgPSBvdGhlci5vcmRlcmVkV3JpdGVMb2NhdGlvbnM7XG4gICAgICAgICAgICB0aGlzLndyaXRlRW5kcG9pbnRzID0gb3RoZXIud3JpdGVFbmRwb2ludHM7XG4gICAgICAgICAgICB0aGlzLnJlYWRFbmRwb2ludHMgPSBvdGhlci5yZWFkRW5kcG9pbnRzO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gVGhpcyBzaG91bGQgbmV2ZXIgYmUgY2FsbGVkXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBwYXNzZWQgdG8gTG9jYXRpb25JbmZvXCIpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5Mb2NhdGlvbkluZm8gPSBMb2NhdGlvbkluZm87XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Mb2NhdGlvbkluZm8uanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/LocationInfo.js\n");

/***/ }),

/***/ "./lib/auth.js":
/*!*********************!*\
  !*** ./lib/auth.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst create_hmac_1 = tslib_1.__importDefault(__webpack_require__(/*! create-hmac */ \"./node_modules/create-hmac/browser.js\"));\nconst common_1 = __webpack_require__(/*! ./common */ \"./lib/common/index.js\");\n/** @hidden */\nclass AuthHandler {\n    static getAuthorizationHeader(authOptions, verb, path, resourceId, resourceType, headers) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (authOptions.permissionFeed) {\n                authOptions.resourceTokens = {};\n                for (const permission of authOptions.permissionFeed) {\n                    const id = common_1.Helper.getResourceIdFromPath(permission.resource);\n                    if (!id) {\n                        throw new Error(`authorization error: ${id} \\\n                          is an invalid resourceId in permissionFeed`);\n                    }\n                    authOptions.resourceTokens[id] = permission._token; // TODO: any\n                }\n            }\n            if (authOptions.masterKey) {\n                return encodeURIComponent(AuthHandler.getAuthorizationTokenUsingMasterKey(verb, resourceId, resourceType, headers, authOptions.masterKey));\n            }\n            else if (authOptions.resourceTokens) {\n                return encodeURIComponent(AuthHandler.getAuthorizationTokenUsingResourceTokens(authOptions.resourceTokens, path, resourceId));\n            }\n            else if (authOptions.tokenProvider) {\n                return encodeURIComponent(yield AuthHandler.getAuthorizationTokenUsingTokenProvider(authOptions.tokenProvider, {\n                    verb,\n                    path,\n                    resourceId,\n                    resourceType,\n                    headers\n                }));\n            }\n        });\n    }\n    static getAuthorizationTokenUsingMasterKey(verb, resourceId, resourceType, headers, masterKey) {\n        const key = Buffer.from(masterKey, \"base64\");\n        const text = (verb || \"\").toLowerCase() +\n            \"\\n\" +\n            (resourceType || \"\").toLowerCase() +\n            \"\\n\" +\n            (resourceId || \"\") +\n            \"\\n\" +\n            (headers[\"x-ms-date\"] || \"\").toLowerCase() +\n            \"\\n\" +\n            (headers[\"date\"] || \"\").toLowerCase() +\n            \"\\n\";\n        const body = Buffer.from(text, \"utf8\");\n        const signature = create_hmac_1.default(\"sha256\", key)\n            .update(body)\n            .digest(\"base64\");\n        const MasterToken = \"master\";\n        const TokenVersion = \"1.0\";\n        return `type=${MasterToken}&ver=${TokenVersion}&sig=${signature}`;\n    }\n    // TODO: Resource tokens\n    static getAuthorizationTokenUsingResourceTokens(resourceTokens, path, resourceId) {\n        if (resourceTokens && Object.keys(resourceTokens).length > 0) {\n            // For database account access(through getDatabaseAccount API), path and resourceId are \"\",\n            // so in this case we return the first token to be used for creating the auth header as the\n            // service will accept any token in this case\n            if (!path && !resourceId) {\n                return resourceTokens[Object.keys(resourceTokens)[0]];\n            }\n            if (resourceId && resourceTokens[resourceId]) {\n                return resourceTokens[resourceId];\n            }\n            // minimum valid path /dbs\n            if (!path || path.length < 4) {\n                return null;\n            }\n            // remove '/' from left and right of path\n            path = path[0] === \"/\" ? path.substring(1) : path;\n            path = path[path.length - 1] === \"/\" ? path.substring(0, path.length - 1) : path;\n            const pathSegments = (path && path.split(\"/\")) || [];\n            // if it's an incomplete path like /dbs/db1/colls/, start from the paretn resource\n            let index = pathSegments.length % 2 === 0 ? pathSegments.length - 1 : pathSegments.length - 2;\n            for (; index > 0; index -= 2) {\n                const id = decodeURI(pathSegments[index]);\n                if (resourceTokens[id]) {\n                    return resourceTokens[id];\n                }\n            }\n        }\n        return null;\n    }\n    static getAuthorizationTokenUsingTokenProvider(tokenProvider, requestInfo) {\n        requestInfo.getAuthorizationTokenUsingMasterKey = AuthHandler.getAuthorizationTokenUsingMasterKey;\n        return new Promise((resolve, reject) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const callback = (err, token) => {\n                if (reject) {\n                    return reject(err);\n                }\n                resolve(token);\n            };\n            const results = tokenProvider.getToken(requestInfo, callback);\n            if (results.then && typeof results.then === \"function\") {\n                resolve(yield results);\n            }\n        }));\n    }\n}\nexports.AuthHandler = AuthHandler;\n//# sourceMappingURL=auth.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvYXV0aC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9hdXRoLmpzPzMyNGYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgY3JlYXRlX2htYWNfMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJjcmVhdGUtaG1hY1wiKSk7XG5jb25zdCBjb21tb25fMSA9IHJlcXVpcmUoXCIuL2NvbW1vblwiKTtcbi8qKiBAaGlkZGVuICovXG5jbGFzcyBBdXRoSGFuZGxlciB7XG4gICAgc3RhdGljIGdldEF1dGhvcml6YXRpb25IZWFkZXIoYXV0aE9wdGlvbnMsIHZlcmIsIHBhdGgsIHJlc291cmNlSWQsIHJlc291cmNlVHlwZSwgaGVhZGVycykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBpZiAoYXV0aE9wdGlvbnMucGVybWlzc2lvbkZlZWQpIHtcbiAgICAgICAgICAgICAgICBhdXRoT3B0aW9ucy5yZXNvdXJjZVRva2VucyA9IHt9O1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgcGVybWlzc2lvbiBvZiBhdXRoT3B0aW9ucy5wZXJtaXNzaW9uRmVlZCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRSZXNvdXJjZUlkRnJvbVBhdGgocGVybWlzc2lvbi5yZXNvdXJjZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmICghaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgYXV0aG9yaXphdGlvbiBlcnJvcjogJHtpZH0gXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaXMgYW4gaW52YWxpZCByZXNvdXJjZUlkIGluIHBlcm1pc3Npb25GZWVkYCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYXV0aE9wdGlvbnMucmVzb3VyY2VUb2tlbnNbaWRdID0gcGVybWlzc2lvbi5fdG9rZW47IC8vIFRPRE86IGFueVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChhdXRoT3B0aW9ucy5tYXN0ZXJLZXkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KEF1dGhIYW5kbGVyLmdldEF1dGhvcml6YXRpb25Ub2tlblVzaW5nTWFzdGVyS2V5KHZlcmIsIHJlc291cmNlSWQsIHJlc291cmNlVHlwZSwgaGVhZGVycywgYXV0aE9wdGlvbnMubWFzdGVyS2V5KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChhdXRoT3B0aW9ucy5yZXNvdXJjZVRva2Vucykge1xuICAgICAgICAgICAgICAgIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoQXV0aEhhbmRsZXIuZ2V0QXV0aG9yaXphdGlvblRva2VuVXNpbmdSZXNvdXJjZVRva2VucyhhdXRoT3B0aW9ucy5yZXNvdXJjZVRva2VucywgcGF0aCwgcmVzb3VyY2VJZCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoYXV0aE9wdGlvbnMudG9rZW5Qcm92aWRlcikge1xuICAgICAgICAgICAgICAgIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoeWllbGQgQXV0aEhhbmRsZXIuZ2V0QXV0aG9yaXphdGlvblRva2VuVXNpbmdUb2tlblByb3ZpZGVyKGF1dGhPcHRpb25zLnRva2VuUHJvdmlkZXIsIHtcbiAgICAgICAgICAgICAgICAgICAgdmVyYixcbiAgICAgICAgICAgICAgICAgICAgcGF0aCxcbiAgICAgICAgICAgICAgICAgICAgcmVzb3VyY2VJZCxcbiAgICAgICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlLFxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzXG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIGdldEF1dGhvcml6YXRpb25Ub2tlblVzaW5nTWFzdGVyS2V5KHZlcmIsIHJlc291cmNlSWQsIHJlc291cmNlVHlwZSwgaGVhZGVycywgbWFzdGVyS2V5KSB7XG4gICAgICAgIGNvbnN0IGtleSA9IEJ1ZmZlci5mcm9tKG1hc3RlcktleSwgXCJiYXNlNjRcIik7XG4gICAgICAgIGNvbnN0IHRleHQgPSAodmVyYiB8fCBcIlwiKS50b0xvd2VyQ2FzZSgpICtcbiAgICAgICAgICAgIFwiXFxuXCIgK1xuICAgICAgICAgICAgKHJlc291cmNlVHlwZSB8fCBcIlwiKS50b0xvd2VyQ2FzZSgpICtcbiAgICAgICAgICAgIFwiXFxuXCIgK1xuICAgICAgICAgICAgKHJlc291cmNlSWQgfHwgXCJcIikgK1xuICAgICAgICAgICAgXCJcXG5cIiArXG4gICAgICAgICAgICAoaGVhZGVyc1tcIngtbXMtZGF0ZVwiXSB8fCBcIlwiKS50b0xvd2VyQ2FzZSgpICtcbiAgICAgICAgICAgIFwiXFxuXCIgK1xuICAgICAgICAgICAgKGhlYWRlcnNbXCJkYXRlXCJdIHx8IFwiXCIpLnRvTG93ZXJDYXNlKCkgK1xuICAgICAgICAgICAgXCJcXG5cIjtcbiAgICAgICAgY29uc3QgYm9keSA9IEJ1ZmZlci5mcm9tKHRleHQsIFwidXRmOFwiKTtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gY3JlYXRlX2htYWNfMS5kZWZhdWx0KFwic2hhMjU2XCIsIGtleSlcbiAgICAgICAgICAgIC51cGRhdGUoYm9keSlcbiAgICAgICAgICAgIC5kaWdlc3QoXCJiYXNlNjRcIik7XG4gICAgICAgIGNvbnN0IE1hc3RlclRva2VuID0gXCJtYXN0ZXJcIjtcbiAgICAgICAgY29uc3QgVG9rZW5WZXJzaW9uID0gXCIxLjBcIjtcbiAgICAgICAgcmV0dXJuIGB0eXBlPSR7TWFzdGVyVG9rZW59JnZlcj0ke1Rva2VuVmVyc2lvbn0mc2lnPSR7c2lnbmF0dXJlfWA7XG4gICAgfVxuICAgIC8vIFRPRE86IFJlc291cmNlIHRva2Vuc1xuICAgIHN0YXRpYyBnZXRBdXRob3JpemF0aW9uVG9rZW5Vc2luZ1Jlc291cmNlVG9rZW5zKHJlc291cmNlVG9rZW5zLCBwYXRoLCByZXNvdXJjZUlkKSB7XG4gICAgICAgIGlmIChyZXNvdXJjZVRva2VucyAmJiBPYmplY3Qua2V5cyhyZXNvdXJjZVRva2VucykubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgLy8gRm9yIGRhdGFiYXNlIGFjY291bnQgYWNjZXNzKHRocm91Z2ggZ2V0RGF0YWJhc2VBY2NvdW50IEFQSSksIHBhdGggYW5kIHJlc291cmNlSWQgYXJlIFwiXCIsXG4gICAgICAgICAgICAvLyBzbyBpbiB0aGlzIGNhc2Ugd2UgcmV0dXJuIHRoZSBmaXJzdCB0b2tlbiB0byBiZSB1c2VkIGZvciBjcmVhdGluZyB0aGUgYXV0aCBoZWFkZXIgYXMgdGhlXG4gICAgICAgICAgICAvLyBzZXJ2aWNlIHdpbGwgYWNjZXB0IGFueSB0b2tlbiBpbiB0aGlzIGNhc2VcbiAgICAgICAgICAgIGlmICghcGF0aCAmJiAhcmVzb3VyY2VJZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNvdXJjZVRva2Vuc1tPYmplY3Qua2V5cyhyZXNvdXJjZVRva2VucylbMF1dO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlc291cmNlSWQgJiYgcmVzb3VyY2VUb2tlbnNbcmVzb3VyY2VJZF0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzb3VyY2VUb2tlbnNbcmVzb3VyY2VJZF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBtaW5pbXVtIHZhbGlkIHBhdGggL2Ric1xuICAgICAgICAgICAgaWYgKCFwYXRoIHx8IHBhdGgubGVuZ3RoIDwgNCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gcmVtb3ZlICcvJyBmcm9tIGxlZnQgYW5kIHJpZ2h0IG9mIHBhdGhcbiAgICAgICAgICAgIHBhdGggPSBwYXRoWzBdID09PSBcIi9cIiA/IHBhdGguc3Vic3RyaW5nKDEpIDogcGF0aDtcbiAgICAgICAgICAgIHBhdGggPSBwYXRoW3BhdGgubGVuZ3RoIC0gMV0gPT09IFwiL1wiID8gcGF0aC5zdWJzdHJpbmcoMCwgcGF0aC5sZW5ndGggLSAxKSA6IHBhdGg7XG4gICAgICAgICAgICBjb25zdCBwYXRoU2VnbWVudHMgPSAocGF0aCAmJiBwYXRoLnNwbGl0KFwiL1wiKSkgfHwgW107XG4gICAgICAgICAgICAvLyBpZiBpdCdzIGFuIGluY29tcGxldGUgcGF0aCBsaWtlIC9kYnMvZGIxL2NvbGxzLywgc3RhcnQgZnJvbSB0aGUgcGFyZXRuIHJlc291cmNlXG4gICAgICAgICAgICBsZXQgaW5kZXggPSBwYXRoU2VnbWVudHMubGVuZ3RoICUgMiA9PT0gMCA/IHBhdGhTZWdtZW50cy5sZW5ndGggLSAxIDogcGF0aFNlZ21lbnRzLmxlbmd0aCAtIDI7XG4gICAgICAgICAgICBmb3IgKDsgaW5kZXggPiAwOyBpbmRleCAtPSAyKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaWQgPSBkZWNvZGVVUkkocGF0aFNlZ21lbnRzW2luZGV4XSk7XG4gICAgICAgICAgICAgICAgaWYgKHJlc291cmNlVG9rZW5zW2lkXSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzb3VyY2VUb2tlbnNbaWRdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgc3RhdGljIGdldEF1dGhvcml6YXRpb25Ub2tlblVzaW5nVG9rZW5Qcm92aWRlcih0b2tlblByb3ZpZGVyLCByZXF1ZXN0SW5mbykge1xuICAgICAgICByZXF1ZXN0SW5mby5nZXRBdXRob3JpemF0aW9uVG9rZW5Vc2luZ01hc3RlcktleSA9IEF1dGhIYW5kbGVyLmdldEF1dGhvcml6YXRpb25Ub2tlblVzaW5nTWFzdGVyS2V5O1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBjYWxsYmFjayA9IChlcnIsIHRva2VuKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHJlamVjdCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVqZWN0KGVycik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlc29sdmUodG9rZW4pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdHMgPSB0b2tlblByb3ZpZGVyLmdldFRva2VuKHJlcXVlc3RJbmZvLCBjYWxsYmFjayk7XG4gICAgICAgICAgICBpZiAocmVzdWx0cy50aGVuICYmIHR5cGVvZiByZXN1bHRzLnRoZW4gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoeWllbGQgcmVzdWx0cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pKTtcbiAgICB9XG59XG5leHBvcnRzLkF1dGhIYW5kbGVyID0gQXV0aEhhbmRsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRoLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/auth.js\n");

/***/ }),

/***/ "./lib/client/Conflict/Conflict.js":
/*!*****************************************!*\
  !*** ./lib/client/Conflict/Conflict.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\n/**\n * Use to read or delete a given {@link Conflict} by id.\n *\n * @see {@link Conflicts} to query or read all conflicts.\n */\nclass Conflict {\n    /**\n     * @hidden\n     * @param container The parent {@link Container}.\n     * @param id The id of the given {@link Conflict}.\n     */\n    constructor(container, id, clientContext) {\n        this.container = container;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return `/${this.container.url}/${common_1.Constants.Path.ConflictsPathSegment}/${this.id}`;\n    }\n    /**\n     * Read the {@link ConflictDefinition} for the given {@link Conflict}.\n     * @param options\n     */\n    read(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.url, \"conflicts\");\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.read(path, \"users\", id, undefined, options);\n            return { body: response.result, headers: response.headers, ref: this, conflict: this };\n        });\n    }\n    /**\n     * Delete the given {@link ConflictDefinition}.\n     * @param options\n     */\n    delete(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.delete(path, \"conflicts\", id, undefined, options);\n            return { body: response.result, headers: response.headers, ref: this, conflict: this };\n        });\n    }\n}\nexports.Conflict = Conflict;\n//# sourceMappingURL=Conflict.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L0NvbmZsaWN0L0NvbmZsaWN0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2NsaWVudC9Db25mbGljdC9Db25mbGljdC5qcz84ODUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGNvbW1vbl8xID0gcmVxdWlyZShcIi4uLy4uL2NvbW1vblwiKTtcbi8qKlxuICogVXNlIHRvIHJlYWQgb3IgZGVsZXRlIGEgZ2l2ZW4ge0BsaW5rIENvbmZsaWN0fSBieSBpZC5cbiAqXG4gKiBAc2VlIHtAbGluayBDb25mbGljdHN9IHRvIHF1ZXJ5IG9yIHJlYWQgYWxsIGNvbmZsaWN0cy5cbiAqL1xuY2xhc3MgQ29uZmxpY3Qge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAcGFyYW0gY29udGFpbmVyIFRoZSBwYXJlbnQge0BsaW5rIENvbnRhaW5lcn0uXG4gICAgICogQHBhcmFtIGlkIFRoZSBpZCBvZiB0aGUgZ2l2ZW4ge0BsaW5rIENvbmZsaWN0fS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb250YWluZXIsIGlkLCBjbGllbnRDb250ZXh0KSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMuY2xpZW50Q29udGV4dCA9IGNsaWVudENvbnRleHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSByZWZlcmVuY2UgVVJMIHRvIHRoZSByZXNvdXJjZS4gVXNlZCBmb3IgbGlua2luZyBpbiBQZXJtaXNzaW9ucy5cbiAgICAgKi9cbiAgICBnZXQgdXJsKCkge1xuICAgICAgICByZXR1cm4gYC8ke3RoaXMuY29udGFpbmVyLnVybH0vJHtjb21tb25fMS5Db25zdGFudHMuUGF0aC5Db25mbGljdHNQYXRoU2VnbWVudH0vJHt0aGlzLmlkfWA7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlYWQgdGhlIHtAbGluayBDb25mbGljdERlZmluaXRpb259IGZvciB0aGUgZ2l2ZW4ge0BsaW5rIENvbmZsaWN0fS5cbiAgICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgICAqL1xuICAgIHJlYWQob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLnVybCwgXCJjb25mbGljdHNcIik7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRJZEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LnJlYWQocGF0aCwgXCJ1c2Vyc1wiLCBpZCwgdW5kZWZpbmVkLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHJldHVybiB7IGJvZHk6IHJlc3BvbnNlLnJlc3VsdCwgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVycywgcmVmOiB0aGlzLCBjb25mbGljdDogdGhpcyB9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlIHRoZSBnaXZlbiB7QGxpbmsgQ29uZmxpY3REZWZpbml0aW9ufS5cbiAgICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgICAqL1xuICAgIGRlbGV0ZShvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBjb21tb25fMS5IZWxwZXIuZ2V0UGF0aEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gY29tbW9uXzEuSGVscGVyLmdldElkRnJvbUxpbmsodGhpcy51cmwpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCB0aGlzLmNsaWVudENvbnRleHQuZGVsZXRlKHBhdGgsIFwiY29uZmxpY3RzXCIsIGlkLCB1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgcmV0dXJuIHsgYm9keTogcmVzcG9uc2UucmVzdWx0LCBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLCByZWY6IHRoaXMsIGNvbmZsaWN0OiB0aGlzIH07XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29uZmxpY3QgPSBDb25mbGljdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbmZsaWN0LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/client/Conflict/Conflict.js\n");

/***/ }),

/***/ "./lib/client/Conflict/ConflictResolutionMode.js":
/*!*******************************************************!*\
  !*** ./lib/client/Conflict/ConflictResolutionMode.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConflictResolutionMode;\n(function (ConflictResolutionMode) {\n    ConflictResolutionMode[\"Custom\"] = \"Custom\";\n    ConflictResolutionMode[\"LastWriterWins\"] = \"LastWriterWins\";\n})(ConflictResolutionMode = exports.ConflictResolutionMode || (exports.ConflictResolutionMode = {}));\n//# sourceMappingURL=ConflictResolutionMode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L0NvbmZsaWN0L0NvbmZsaWN0UmVzb2x1dGlvbk1vZGUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvY2xpZW50L0NvbmZsaWN0L0NvbmZsaWN0UmVzb2x1dGlvbk1vZGUuanM/MjhiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBDb25mbGljdFJlc29sdXRpb25Nb2RlO1xuKGZ1bmN0aW9uIChDb25mbGljdFJlc29sdXRpb25Nb2RlKSB7XG4gICAgQ29uZmxpY3RSZXNvbHV0aW9uTW9kZVtcIkN1c3RvbVwiXSA9IFwiQ3VzdG9tXCI7XG4gICAgQ29uZmxpY3RSZXNvbHV0aW9uTW9kZVtcIkxhc3RXcml0ZXJXaW5zXCJdID0gXCJMYXN0V3JpdGVyV2luc1wiO1xufSkoQ29uZmxpY3RSZXNvbHV0aW9uTW9kZSA9IGV4cG9ydHMuQ29uZmxpY3RSZXNvbHV0aW9uTW9kZSB8fCAoZXhwb3J0cy5Db25mbGljdFJlc29sdXRpb25Nb2RlID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbmZsaWN0UmVzb2x1dGlvbk1vZGUuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/client/Conflict/ConflictResolutionMode.js\n");

/***/ }),

/***/ "./lib/client/Conflict/Conflicts.js":
/*!******************************************!*\
  !*** ./lib/client/Conflict/Conflicts.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\nconst queryIterator_1 = __webpack_require__(/*! ../../queryIterator */ \"./lib/queryIterator.js\");\n/**\n * Use to query or read all conflicts.\n *\n * @see {@link Conflict} to read or delete a given {@link Conflict} by id.\n */\nclass Conflicts {\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = common_1.Helper.getPathFromLink(this.container.url, \"conflicts\");\n        const id = common_1.Helper.getIdFromLink(this.container.url);\n        return new queryIterator_1.QueryIterator(this.clientContext, query, options, innerOptions => {\n            return this.clientContext.queryFeed(path, \"conflicts\", id, result => result.Conflicts, query, innerOptions);\n        });\n    }\n    /**\n     * Reads all conflicts\n     * @param options Use to set options like response page size, continuation tokens, etc.\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n}\nexports.Conflicts = Conflicts;\n//# sourceMappingURL=Conflicts.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L0NvbmZsaWN0L0NvbmZsaWN0cy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9jbGllbnQvQ29uZmxpY3QvQ29uZmxpY3RzLmpzP2QyNmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBjb21tb25fMSA9IHJlcXVpcmUoXCIuLi8uLi9jb21tb25cIik7XG5jb25zdCBxdWVyeUl0ZXJhdG9yXzEgPSByZXF1aXJlKFwiLi4vLi4vcXVlcnlJdGVyYXRvclwiKTtcbi8qKlxuICogVXNlIHRvIHF1ZXJ5IG9yIHJlYWQgYWxsIGNvbmZsaWN0cy5cbiAqXG4gKiBAc2VlIHtAbGluayBDb25mbGljdH0gdG8gcmVhZCBvciBkZWxldGUgYSBnaXZlbiB7QGxpbmsgQ29uZmxpY3R9IGJ5IGlkLlxuICovXG5jbGFzcyBDb25mbGljdHMge1xuICAgIGNvbnN0cnVjdG9yKGNvbnRhaW5lciwgY2xpZW50Q29udGV4dCkge1xuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgICAgICAgdGhpcy5jbGllbnRDb250ZXh0ID0gY2xpZW50Q29udGV4dDtcbiAgICB9XG4gICAgcXVlcnkocXVlcnksIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgcGF0aCA9IGNvbW1vbl8xLkhlbHBlci5nZXRQYXRoRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsLCBcImNvbmZsaWN0c1wiKTtcbiAgICAgICAgY29uc3QgaWQgPSBjb21tb25fMS5IZWxwZXIuZ2V0SWRGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwpO1xuICAgICAgICByZXR1cm4gbmV3IHF1ZXJ5SXRlcmF0b3JfMS5RdWVyeUl0ZXJhdG9yKHRoaXMuY2xpZW50Q29udGV4dCwgcXVlcnksIG9wdGlvbnMsIGlubmVyT3B0aW9ucyA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jbGllbnRDb250ZXh0LnF1ZXJ5RmVlZChwYXRoLCBcImNvbmZsaWN0c1wiLCBpZCwgcmVzdWx0ID0+IHJlc3VsdC5Db25mbGljdHMsIHF1ZXJ5LCBpbm5lck9wdGlvbnMpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZHMgYWxsIGNvbmZsaWN0c1xuICAgICAqIEBwYXJhbSBvcHRpb25zIFVzZSB0byBzZXQgb3B0aW9ucyBsaWtlIHJlc3BvbnNlIHBhZ2Ugc2l6ZSwgY29udGludWF0aW9uIHRva2VucywgZXRjLlxuICAgICAqL1xuICAgIHJlYWRBbGwob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5xdWVyeSh1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29uZmxpY3RzID0gQ29uZmxpY3RzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29uZmxpY3RzLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/client/Conflict/Conflicts.js\n");

/***/ }),

/***/ "./lib/client/Conflict/index.js":
/*!**************************************!*\
  !*** ./lib/client/Conflict/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Conflict_1 = __webpack_require__(/*! ./Conflict */ \"./lib/client/Conflict/Conflict.js\");\nexports.Conflict = Conflict_1.Conflict;\nvar Conflicts_1 = __webpack_require__(/*! ./Conflicts */ \"./lib/client/Conflict/Conflicts.js\");\nexports.Conflicts = Conflicts_1.Conflicts;\nvar ConflictResolutionMode_1 = __webpack_require__(/*! ./ConflictResolutionMode */ \"./lib/client/Conflict/ConflictResolutionMode.js\");\nexports.ConflictResolutionMode = ConflictResolutionMode_1.ConflictResolutionMode;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L0NvbmZsaWN0L2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2NsaWVudC9Db25mbGljdC9pbmRleC5qcz84MzUzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIENvbmZsaWN0XzEgPSByZXF1aXJlKFwiLi9Db25mbGljdFwiKTtcbmV4cG9ydHMuQ29uZmxpY3QgPSBDb25mbGljdF8xLkNvbmZsaWN0O1xudmFyIENvbmZsaWN0c18xID0gcmVxdWlyZShcIi4vQ29uZmxpY3RzXCIpO1xuZXhwb3J0cy5Db25mbGljdHMgPSBDb25mbGljdHNfMS5Db25mbGljdHM7XG52YXIgQ29uZmxpY3RSZXNvbHV0aW9uTW9kZV8xID0gcmVxdWlyZShcIi4vQ29uZmxpY3RSZXNvbHV0aW9uTW9kZVwiKTtcbmV4cG9ydHMuQ29uZmxpY3RSZXNvbHV0aW9uTW9kZSA9IENvbmZsaWN0UmVzb2x1dGlvbk1vZGVfMS5Db25mbGljdFJlc29sdXRpb25Nb2RlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/client/Conflict/index.js\n");

/***/ }),

/***/ "./lib/client/Container/Container.js":
/*!*******************************************!*\
  !*** ./lib/client/Container/Container.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\nconst Conflict_1 = __webpack_require__(/*! ../Conflict */ \"./lib/client/Conflict/index.js\");\nconst Item_1 = __webpack_require__(/*! ../Item */ \"./lib/client/Item/index.js\");\nconst StoredProcedure_1 = __webpack_require__(/*! ../StoredProcedure */ \"./lib/client/StoredProcedure/index.js\");\nconst Trigger_1 = __webpack_require__(/*! ../Trigger */ \"./lib/client/Trigger/index.js\");\nconst UserDefinedFunction_1 = __webpack_require__(/*! ../UserDefinedFunction */ \"./lib/client/UserDefinedFunction/index.js\");\n/**\n * Operations for reading, replacing, or deleting a specific, existing container by id.\n *\n * @see {@link Containers} for creating new containers, and reading/querying all containers; use `.containers`.\n *\n * Note: all these operations make calls against a fixed budget.\n * You should design your system such that these calls scale sublinearly with your application.\n * For instance, do not call `container(id).read()` before every single `item.read()` call, to ensure the container exists;\n * do this once on application start up.\n */\nclass Container {\n    /**\n     * Returns a container instance. Note: You should get this from `database.container(id)`, rather than creating your own object.\n     * @param database The parent {@link Database}.\n     * @param id The id of the given container.\n     * @hidden\n     */\n    constructor(database, id, clientContext) {\n        this.database = database;\n        this.id = id;\n        this.clientContext = clientContext;\n        this.items = new Item_1.Items(this, this.clientContext);\n        this.storedProcedures = new StoredProcedure_1.StoredProcedures(this, this.clientContext);\n        this.triggers = new Trigger_1.Triggers(this, this.clientContext);\n        this.userDefinedFunctions = new UserDefinedFunction_1.UserDefinedFunctions(this, this.clientContext);\n        this.conflicts = new Conflict_1.Conflicts(this, this.clientContext);\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return common_1.UriFactory.createDocumentCollectionUri(this.database.id, this.id);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link Item} by id.\n     *\n     * Use `.items` for creating new items, or querying/reading all items.\n     *\n     * @param id The id of the {@link Item}.\n     * @param partitionKey The partition key of the {@link Item}. (Required for partitioned containers).\n     * @example Replace an item\n     * const {body: replacedItem} = await container.item(\"<item id>\").replace({id: \"<item id>\", title: \"Updated post\", authorID: 5});\n     */\n    item(id, partitionKey) {\n        return new Item_1.Item(this, id, partitionKey, this.clientContext);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link UserDefinedFunction} by id.\n     *\n     * Use `.userDefinedFunctions` for creating new user defined functions, or querying/reading all user defined functions.\n     * @param id The id of the {@link UserDefinedFunction}.\n     */\n    userDefinedFunction(id) {\n        return new UserDefinedFunction_1.UserDefinedFunction(this, id, this.clientContext);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link Conflict} by id.\n     *\n     * Use `.conflicts` for creating new conflicts, or querying/reading all conflicts.\n     * @param id The id of the {@link Conflict}.\n     */\n    conflict(id) {\n        return new Conflict_1.Conflict(this, id, this.clientContext);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link StoredProcedure} by id.\n     *\n     * Use `.storedProcedures` for creating new stored procedures, or querying/reading all stored procedures.\n     * @param id The id of the {@link StoredProcedure}.\n     */\n    storedProcedure(id) {\n        return new StoredProcedure_1.StoredProcedure(this, id, this.clientContext);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link Trigger} by id.\n     *\n     * Use `.triggers` for creating new triggers, or querying/reading all triggers.\n     * @param id The id of the {@link Trigger}.\n     */\n    trigger(id) {\n        return new Trigger_1.Trigger(this, id, this.clientContext);\n    }\n    /** Read the container's definition */\n    read(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.read(path, \"colls\", id, undefined, options);\n            this.clientContext.partitionKeyDefinitionCache[this.url] = response.result.partitionKey;\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref: this,\n                container: this\n            };\n        });\n    }\n    /** Replace the container's definition */\n    replace(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.replace(body, path, \"colls\", id, undefined, options);\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref: this,\n                container: this\n            };\n        });\n    }\n    /** Delete the container */\n    delete(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.delete(path, \"colls\", id, undefined, options);\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref: this,\n                container: this\n            };\n        });\n    }\n    /**\n     * Gets the partition key definition first by looking into the cache otherwise by reading the collection.\n     * @ignore\n     * @param {string} collectionLink   - Link to the collection whose partition key needs to be extracted.\n     * @param {function} callback       - \\\n     * The arguments to the callback are(in order): error, partitionKeyDefinition, response object and response headers\n     */\n    getPartitionKeyDefinition() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            // $ISSUE-felixfan-2016-03-17: Make name based path and link based path use the same key\n            // $ISSUE-felixfan-2016-03-17: Refresh partitionKeyDefinitionCache when necessary\n            if (this.url in this.clientContext.partitionKeyDefinitionCache) {\n                return {\n                    body: this.clientContext.partitionKeyDefinitionCache[this.url],\n                    ref: this\n                };\n            }\n            const { headers } = yield this.read();\n            return {\n                body: this.clientContext.partitionKeyDefinitionCache[this.url],\n                headers,\n                ref: this\n            };\n        });\n    }\n    // TODO: The ParitionKey type is REALLY weird. Now that it's being exported, we should clean it up.\n    extractPartitionKey(document, partitionKeyDefinition) {\n        // TODO: any\n        if (partitionKeyDefinition && partitionKeyDefinition.paths && partitionKeyDefinition.paths.length > 0) {\n            const partitionKey = [];\n            partitionKeyDefinition.paths.forEach((path) => {\n                const pathParts = common_1.Helper.parsePath(path);\n                let obj = document;\n                for (const part of pathParts) {\n                    if (!(typeof obj === \"object\" && part in obj)) {\n                        obj = {};\n                        break;\n                    }\n                    obj = obj[part];\n                }\n                partitionKey.push(obj);\n            });\n            return partitionKey;\n        }\n        return undefined;\n    }\n}\nexports.Container = Container;\n//# sourceMappingURL=Container.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/client/Container/Container.js\n");

/***/ }),

/***/ "./lib/client/Container/Containers.js":
/*!********************************************!*\
  !*** ./lib/client/Container/Containers.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\nconst queryExecutionContext_1 = __webpack_require__(/*! ../../queryExecutionContext */ \"./lib/queryExecutionContext/index.js\");\nconst queryIterator_1 = __webpack_require__(/*! ../../queryIterator */ \"./lib/queryIterator.js\");\nconst Container_1 = __webpack_require__(/*! ./Container */ \"./lib/client/Container/Container.js\");\n/**\n * Operations for creating new containers, and reading/querying all containers\n *\n * @see {@link Container} for reading, replacing, or deleting an existing container; use `.container(id)`.\n *\n * Note: all these operations make calls against a fixed budget.\n * You should design your system such that these calls scale sublinearly with your application.\n * For instance, do not call `containers.readAll()` before every single `item.read()` call, to ensure the container exists;\n * do this once on application start up.\n */\nclass Containers {\n    constructor(database, clientContext) {\n        this.database = database;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = common_1.Helper.getPathFromLink(this.database.url, \"colls\");\n        const id = common_1.Helper.getIdFromLink(this.database.url);\n        return new queryIterator_1.QueryIterator(this.clientContext, query, options, innerOptions => {\n            return this.clientContext.queryFeed(path, \"colls\", id, result => result.DocumentCollections, query, innerOptions);\n        });\n    }\n    /**\n     * Creates a container.\n     *\n     * A container is a named logical container for items.\n     *\n     * A database may contain zero or more named containers and each container consists of\n     * zero or more JSON items.\n     *\n     * Being schema-free, the items in a container do not need to share the same structure or fields.\n     *\n     *\n     * Since containers are application resources, they can be authorized using either the\n     * master key or resource keys.\n     *\n     * @param body Represents the body of the container.\n     * @param options Use to set options like response page size, continuation tokens, etc.\n     */\n    create(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.database.url, \"colls\");\n            const id = common_1.Helper.getIdFromLink(this.database.url);\n            const response = yield this.clientContext.create(body, path, \"colls\", id, undefined, options);\n            const ref = new Container_1.Container(this.database, response.result.id, this.clientContext);\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref,\n                container: ref\n            };\n        });\n    }\n    /**\n     * Checks if a Container exists, and, if it doesn't, creates it.\n     * This will make a read operation based on the id in the `body`, then if it is not found, a create operation.\n     * You should confirm that the output matches the body you passed in for non-default properties (i.e. indexing policy/etc.)\n     *\n     * A container is a named logical container for items.\n     *\n     * A database may contain zero or more named containers and each container consists of\n     * zero or more JSON items.\n     *\n     * Being schema-free, the items in a container do not need to share the same structure or fields.\n     *\n     *\n     * Since containers are application resources, they can be authorized using either the\n     * master key or resource keys.\n     *\n     * @param body Represents the body of the container.\n     * @param options Use to set options like response page size, continuation tokens, etc.\n     */\n    createIfNotExists(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!body || body.id === null || body.id === undefined) {\n                throw new Error(\"body parameter must be an object with an id property\");\n            }\n            /*\n              1. Attempt to read the Database (based on an assumption that most databases will already exist, so its faster)\n              2. If it fails with NotFound error, attempt to create the db. Else, return the read results.\n            */\n            try {\n                const readResponse = yield this.database.container(body.id).read(options);\n                return readResponse;\n            }\n            catch (err) {\n                if (err.code === common_1.StatusCodes.NotFound) {\n                    const createResponse = yield this.create(body, options);\n                    // Must merge the headers to capture RU costskaty\n                    queryExecutionContext_1.HeaderUtils.mergeHeaders(createResponse.headers, err.headers);\n                    return createResponse;\n                }\n                else {\n                    throw err;\n                }\n            }\n        });\n    }\n    /**\n     * Read all containers.\n     * @param options Use to set options like response page size, continuation tokens, etc.\n     * @returns {@link QueryIterator} Allows you to return all containers in an array or iterate over them one at a time.\n     * @example Read all containers to array.\n     * ```typescript\n     * const {body: containerList} = await client.database(\"<db id>\").containers.readAll().toArray();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n}\nexports.Containers = Containers;\n//# sourceMappingURL=Containers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/client/Container/Containers.js\n");

/***/ }),

/***/ "./lib/client/Container/index.js":
/*!***************************************!*\
  !*** ./lib/client/Container/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Container_1 = __webpack_require__(/*! ./Container */ \"./lib/client/Container/Container.js\");\nexports.Container = Container_1.Container;\nvar Containers_1 = __webpack_require__(/*! ./Containers */ \"./lib/client/Container/Containers.js\");\nexports.Containers = Containers_1.Containers;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L0NvbnRhaW5lci9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9jbGllbnQvQ29udGFpbmVyL2luZGV4LmpzPzNkZjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgQ29udGFpbmVyXzEgPSByZXF1aXJlKFwiLi9Db250YWluZXJcIik7XG5leHBvcnRzLkNvbnRhaW5lciA9IENvbnRhaW5lcl8xLkNvbnRhaW5lcjtcbnZhciBDb250YWluZXJzXzEgPSByZXF1aXJlKFwiLi9Db250YWluZXJzXCIpO1xuZXhwb3J0cy5Db250YWluZXJzID0gQ29udGFpbmVyc18xLkNvbnRhaW5lcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/client/Container/index.js\n");

/***/ }),

/***/ "./lib/client/Database/Database.js":
/*!*****************************************!*\
  !*** ./lib/client/Database/Database.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\nconst Container_1 = __webpack_require__(/*! ../Container */ \"./lib/client/Container/index.js\");\nconst User_1 = __webpack_require__(/*! ../User */ \"./lib/client/User/index.js\");\n/**\n * Operations for reading or deleting an existing database.\n *\n * @see {@link Databases} for creating new databases, and reading/querying all databases; use `client.databases`.\n *\n * Note: all these operations make calls against a fixed budget.\n * You should design your system such that these calls scale sublinearly with your application.\n * For instance, do not call `database.read()` before every single `item.read()` call, to ensure the database exists;\n * do this once on application start up.\n */\nclass Database {\n    /** Returns a new {@link Database} instance.\n     *\n     * Note: the intention is to get this object from {@link CosmosClient} via `client.databsae(id)`, not to instaniate it yourself.\n     */\n    constructor(client, id, clientContext) {\n        this.client = client;\n        this.id = id;\n        this.clientContext = clientContext;\n        this.containers = new Container_1.Containers(this, this.clientContext);\n        this.users = new User_1.Users(this, this.clientContext);\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return common_1.UriFactory.createDatabaseUri(this.id);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link Database} by id.\n     *\n     * Use `.containers` creating new containers, or querying/reading all containers.\n     *\n     * @example Delete a container\n     * ```typescript\n     * await client.database(\"<db id>\").container(\"<container id>\").delete();\n     * ```\n     */\n    container(id) {\n        return new Container_1.Container(this, id, this.clientContext);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link User} by id.\n     *\n     * Use `.users` for creating new users, or querying/reading all users.\n     */\n    user(id) {\n        return new User_1.User(this, id, this.clientContext);\n    }\n    /** Read the definition of the given Database. */\n    read(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.read(path, \"dbs\", id, undefined, options);\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref: this,\n                database: this\n            };\n        });\n    }\n    /** Delete the given Database. */\n    delete(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.delete(path, \"dbs\", id, undefined, options);\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref: this,\n                database: this\n            };\n        });\n    }\n}\nexports.Database = Database;\n//# sourceMappingURL=Database.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L0RhdGFiYXNlL0RhdGFiYXNlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2NsaWVudC9EYXRhYmFzZS9EYXRhYmFzZS5qcz9iY2ZmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGNvbW1vbl8xID0gcmVxdWlyZShcIi4uLy4uL2NvbW1vblwiKTtcbmNvbnN0IENvbnRhaW5lcl8xID0gcmVxdWlyZShcIi4uL0NvbnRhaW5lclwiKTtcbmNvbnN0IFVzZXJfMSA9IHJlcXVpcmUoXCIuLi9Vc2VyXCIpO1xuLyoqXG4gKiBPcGVyYXRpb25zIGZvciByZWFkaW5nIG9yIGRlbGV0aW5nIGFuIGV4aXN0aW5nIGRhdGFiYXNlLlxuICpcbiAqIEBzZWUge0BsaW5rIERhdGFiYXNlc30gZm9yIGNyZWF0aW5nIG5ldyBkYXRhYmFzZXMsIGFuZCByZWFkaW5nL3F1ZXJ5aW5nIGFsbCBkYXRhYmFzZXM7IHVzZSBgY2xpZW50LmRhdGFiYXNlc2AuXG4gKlxuICogTm90ZTogYWxsIHRoZXNlIG9wZXJhdGlvbnMgbWFrZSBjYWxscyBhZ2FpbnN0IGEgZml4ZWQgYnVkZ2V0LlxuICogWW91IHNob3VsZCBkZXNpZ24geW91ciBzeXN0ZW0gc3VjaCB0aGF0IHRoZXNlIGNhbGxzIHNjYWxlIHN1YmxpbmVhcmx5IHdpdGggeW91ciBhcHBsaWNhdGlvbi5cbiAqIEZvciBpbnN0YW5jZSwgZG8gbm90IGNhbGwgYGRhdGFiYXNlLnJlYWQoKWAgYmVmb3JlIGV2ZXJ5IHNpbmdsZSBgaXRlbS5yZWFkKClgIGNhbGwsIHRvIGVuc3VyZSB0aGUgZGF0YWJhc2UgZXhpc3RzO1xuICogZG8gdGhpcyBvbmNlIG9uIGFwcGxpY2F0aW9uIHN0YXJ0IHVwLlxuICovXG5jbGFzcyBEYXRhYmFzZSB7XG4gICAgLyoqIFJldHVybnMgYSBuZXcge0BsaW5rIERhdGFiYXNlfSBpbnN0YW5jZS5cbiAgICAgKlxuICAgICAqIE5vdGU6IHRoZSBpbnRlbnRpb24gaXMgdG8gZ2V0IHRoaXMgb2JqZWN0IGZyb20ge0BsaW5rIENvc21vc0NsaWVudH0gdmlhIGBjbGllbnQuZGF0YWJzYWUoaWQpYCwgbm90IHRvIGluc3RhbmlhdGUgaXQgeW91cnNlbGYuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2xpZW50LCBpZCwgY2xpZW50Q29udGV4dCkge1xuICAgICAgICB0aGlzLmNsaWVudCA9IGNsaWVudDtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICB0aGlzLmNsaWVudENvbnRleHQgPSBjbGllbnRDb250ZXh0O1xuICAgICAgICB0aGlzLmNvbnRhaW5lcnMgPSBuZXcgQ29udGFpbmVyXzEuQ29udGFpbmVycyh0aGlzLCB0aGlzLmNsaWVudENvbnRleHQpO1xuICAgICAgICB0aGlzLnVzZXJzID0gbmV3IFVzZXJfMS5Vc2Vycyh0aGlzLCB0aGlzLmNsaWVudENvbnRleHQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgcmVmZXJlbmNlIFVSTCB0byB0aGUgcmVzb3VyY2UuIFVzZWQgZm9yIGxpbmtpbmcgaW4gUGVybWlzc2lvbnMuXG4gICAgICovXG4gICAgZ2V0IHVybCgpIHtcbiAgICAgICAgcmV0dXJuIGNvbW1vbl8xLlVyaUZhY3RvcnkuY3JlYXRlRGF0YWJhc2VVcmkodGhpcy5pZCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVzZWQgdG8gcmVhZCwgcmVwbGFjZSwgb3IgZGVsZXRlIGEgc3BlY2lmaWMsIGV4aXN0aW5nIHtAbGluayBEYXRhYmFzZX0gYnkgaWQuXG4gICAgICpcbiAgICAgKiBVc2UgYC5jb250YWluZXJzYCBjcmVhdGluZyBuZXcgY29udGFpbmVycywgb3IgcXVlcnlpbmcvcmVhZGluZyBhbGwgY29udGFpbmVycy5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlIERlbGV0ZSBhIGNvbnRhaW5lclxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBhd2FpdCBjbGllbnQuZGF0YWJhc2UoXCI8ZGIgaWQ+XCIpLmNvbnRhaW5lcihcIjxjb250YWluZXIgaWQ+XCIpLmRlbGV0ZSgpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNvbnRhaW5lcihpZCkge1xuICAgICAgICByZXR1cm4gbmV3IENvbnRhaW5lcl8xLkNvbnRhaW5lcih0aGlzLCBpZCwgdGhpcy5jbGllbnRDb250ZXh0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXNlZCB0byByZWFkLCByZXBsYWNlLCBvciBkZWxldGUgYSBzcGVjaWZpYywgZXhpc3Rpbmcge0BsaW5rIFVzZXJ9IGJ5IGlkLlxuICAgICAqXG4gICAgICogVXNlIGAudXNlcnNgIGZvciBjcmVhdGluZyBuZXcgdXNlcnMsIG9yIHF1ZXJ5aW5nL3JlYWRpbmcgYWxsIHVzZXJzLlxuICAgICAqL1xuICAgIHVzZXIoaWQpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVc2VyXzEuVXNlcih0aGlzLCBpZCwgdGhpcy5jbGllbnRDb250ZXh0KTtcbiAgICB9XG4gICAgLyoqIFJlYWQgdGhlIGRlZmluaXRpb24gb2YgdGhlIGdpdmVuIERhdGFiYXNlLiAqL1xuICAgIHJlYWQob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRJZEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LnJlYWQocGF0aCwgXCJkYnNcIiwgaWQsIHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGJvZHk6IHJlc3BvbnNlLnJlc3VsdCxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgICAgICAgIHJlZjogdGhpcyxcbiAgICAgICAgICAgICAgICBkYXRhYmFzZTogdGhpc1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKiBEZWxldGUgdGhlIGdpdmVuIERhdGFiYXNlLiAqL1xuICAgIGRlbGV0ZShvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBjb21tb25fMS5IZWxwZXIuZ2V0UGF0aEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gY29tbW9uXzEuSGVscGVyLmdldElkRnJvbUxpbmsodGhpcy51cmwpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCB0aGlzLmNsaWVudENvbnRleHQuZGVsZXRlKHBhdGgsIFwiZGJzXCIsIGlkLCB1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBib2R5OiByZXNwb25zZS5yZXN1bHQsXG4gICAgICAgICAgICAgICAgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVycyxcbiAgICAgICAgICAgICAgICByZWY6IHRoaXMsXG4gICAgICAgICAgICAgICAgZGF0YWJhc2U6IHRoaXNcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuRGF0YWJhc2UgPSBEYXRhYmFzZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURhdGFiYXNlLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/client/Database/Database.js\n");

/***/ }),

/***/ "./lib/client/Database/Databases.js":
/*!******************************************!*\
  !*** ./lib/client/Database/Databases.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\nconst queryExecutionContext_1 = __webpack_require__(/*! ../../queryExecutionContext */ \"./lib/queryExecutionContext/index.js\");\nconst queryIterator_1 = __webpack_require__(/*! ../../queryIterator */ \"./lib/queryIterator.js\");\nconst Database_1 = __webpack_require__(/*! ./Database */ \"./lib/client/Database/Database.js\");\n/**\n * Operations for creating new databases, and reading/querying all databases\n *\n * @see {@link Database} for reading or deleting an existing database; use `client.database(id)`.\n *\n * Note: all these operations make calls against a fixed budget.\n * You should design your system such that these calls scale sublinearly with your application.\n * For instance, do not call `databases.readAll()` before every single `item.read()` call, to ensure the database exists;\n * do this once on application start up.\n */\nclass Databases {\n    /**\n     * @hidden\n     * @param client The parent {@link CosmosClient} for the Database.\n     */\n    constructor(client, clientContext) {\n        this.client = client;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const cb = innerOptions => {\n            return this.clientContext.queryFeed(\"/dbs\", \"dbs\", \"\", result => result.Databases, query, innerOptions);\n        };\n        return new queryIterator_1.QueryIterator(this.clientContext, query, options, cb);\n    }\n    /**\n     * Send a request for creating a database.\n     *\n     * A database manages users, permissions and a set of containers.\n     * Each Azure Cosmos DB Database Account is able to support multiple independent named databases,\n     * with the database being the logical container for data.\n     *\n     * Each Database consists of one or more containers, each of which in turn contain one or more\n     * documents. Since databases are an an administrative resource, the Service Master Key will be\n     * required in order to access and successfully complete any action using the User APIs.\n     *\n     * @param body The {@link DatabaseDefinition} that represents the {@link Database} to be created.\n     * @param options Use to set options like response page size, continuation tokens, etc.\n     */\n    create(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = \"/dbs\"; // TODO: constant\n            const response = yield this.clientContext.create(body, path, \"dbs\", undefined, undefined, options);\n            const ref = new Database_1.Database(this.client, body.id, this.clientContext);\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref,\n                database: ref\n            };\n        });\n    }\n    /**\n     * Check if a database exists, and if it doesn't, create it.\n     * This will make a read operation based on the id in the `body`, then if it is not found, a create operation.\n     *\n     * A database manages users, permissions and a set of containers.\n     * Each Azure Cosmos DB Database Account is able to support multiple independent named databases,\n     * with the database being the logical container for data.\n     *\n     * Each Database consists of one or more containers, each of which in turn contain one or more\n     * documents. Since databases are an an administrative resource, the Service Master Key will be\n     * required in order to access and successfully complete any action using the User APIs.\n     *\n     * @param body The {@link DatabaseDefinition} that represents the {@link Database} to be created.\n     * @param options\n     */\n    createIfNotExists(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!body || body.id === null || body.id === undefined) {\n                throw new Error(\"body parameter must be an object with an id property\");\n            }\n            /*\n              1. Attempt to read the Database (based on an assumption that most databases will already exist, so its faster)\n              2. If it fails with NotFound error, attempt to create the db. Else, return the read results.\n            */\n            try {\n                const readResponse = yield this.client.database(body.id).read(options);\n                return readResponse;\n            }\n            catch (err) {\n                if (err.code === common_1.StatusCodes.NotFound) {\n                    const createResponse = yield this.create(body, options);\n                    // Must merge the headers to capture RU costskaty\n                    queryExecutionContext_1.HeaderUtils.mergeHeaders(createResponse.headers, err.headers);\n                    return createResponse;\n                }\n                else {\n                    throw err;\n                }\n            }\n        });\n    }\n    // TODO: DatabaseResponse for QueryIterator?\n    /**\n     * Reads all databases.\n     * @param options Use to set options like response page size, continuation tokens, etc.\n     * @returns {@link QueryIterator} Allows you to return all databases in an array or iterate over them one at a time.\n     * @example Read all databases to array.\n     * ```typescript\n     * const {body: databaseList} = await client.databases.readAll().toArray();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n}\nexports.Databases = Databases;\n//# sourceMappingURL=Databases.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L0RhdGFiYXNlL0RhdGFiYXNlcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9jbGllbnQvRGF0YWJhc2UvRGF0YWJhc2VzLmpzPzIxMmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgY29tbW9uXzEgPSByZXF1aXJlKFwiLi4vLi4vY29tbW9uXCIpO1xuY29uc3QgcXVlcnlFeGVjdXRpb25Db250ZXh0XzEgPSByZXF1aXJlKFwiLi4vLi4vcXVlcnlFeGVjdXRpb25Db250ZXh0XCIpO1xuY29uc3QgcXVlcnlJdGVyYXRvcl8xID0gcmVxdWlyZShcIi4uLy4uL3F1ZXJ5SXRlcmF0b3JcIik7XG5jb25zdCBEYXRhYmFzZV8xID0gcmVxdWlyZShcIi4vRGF0YWJhc2VcIik7XG4vKipcbiAqIE9wZXJhdGlvbnMgZm9yIGNyZWF0aW5nIG5ldyBkYXRhYmFzZXMsIGFuZCByZWFkaW5nL3F1ZXJ5aW5nIGFsbCBkYXRhYmFzZXNcbiAqXG4gKiBAc2VlIHtAbGluayBEYXRhYmFzZX0gZm9yIHJlYWRpbmcgb3IgZGVsZXRpbmcgYW4gZXhpc3RpbmcgZGF0YWJhc2U7IHVzZSBgY2xpZW50LmRhdGFiYXNlKGlkKWAuXG4gKlxuICogTm90ZTogYWxsIHRoZXNlIG9wZXJhdGlvbnMgbWFrZSBjYWxscyBhZ2FpbnN0IGEgZml4ZWQgYnVkZ2V0LlxuICogWW91IHNob3VsZCBkZXNpZ24geW91ciBzeXN0ZW0gc3VjaCB0aGF0IHRoZXNlIGNhbGxzIHNjYWxlIHN1YmxpbmVhcmx5IHdpdGggeW91ciBhcHBsaWNhdGlvbi5cbiAqIEZvciBpbnN0YW5jZSwgZG8gbm90IGNhbGwgYGRhdGFiYXNlcy5yZWFkQWxsKClgIGJlZm9yZSBldmVyeSBzaW5nbGUgYGl0ZW0ucmVhZCgpYCBjYWxsLCB0byBlbnN1cmUgdGhlIGRhdGFiYXNlIGV4aXN0cztcbiAqIGRvIHRoaXMgb25jZSBvbiBhcHBsaWNhdGlvbiBzdGFydCB1cC5cbiAqL1xuY2xhc3MgRGF0YWJhc2VzIHtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQHBhcmFtIGNsaWVudCBUaGUgcGFyZW50IHtAbGluayBDb3Ntb3NDbGllbnR9IGZvciB0aGUgRGF0YWJhc2UuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2xpZW50LCBjbGllbnRDb250ZXh0KSB7XG4gICAgICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICAgICAgICB0aGlzLmNsaWVudENvbnRleHQgPSBjbGllbnRDb250ZXh0O1xuICAgIH1cbiAgICBxdWVyeShxdWVyeSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBjYiA9IGlubmVyT3B0aW9ucyA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jbGllbnRDb250ZXh0LnF1ZXJ5RmVlZChcIi9kYnNcIiwgXCJkYnNcIiwgXCJcIiwgcmVzdWx0ID0+IHJlc3VsdC5EYXRhYmFzZXMsIHF1ZXJ5LCBpbm5lck9wdGlvbnMpO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gbmV3IHF1ZXJ5SXRlcmF0b3JfMS5RdWVyeUl0ZXJhdG9yKHRoaXMuY2xpZW50Q29udGV4dCwgcXVlcnksIG9wdGlvbnMsIGNiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2VuZCBhIHJlcXVlc3QgZm9yIGNyZWF0aW5nIGEgZGF0YWJhc2UuXG4gICAgICpcbiAgICAgKiBBIGRhdGFiYXNlIG1hbmFnZXMgdXNlcnMsIHBlcm1pc3Npb25zIGFuZCBhIHNldCBvZiBjb250YWluZXJzLlxuICAgICAqIEVhY2ggQXp1cmUgQ29zbW9zIERCIERhdGFiYXNlIEFjY291bnQgaXMgYWJsZSB0byBzdXBwb3J0IG11bHRpcGxlIGluZGVwZW5kZW50IG5hbWVkIGRhdGFiYXNlcyxcbiAgICAgKiB3aXRoIHRoZSBkYXRhYmFzZSBiZWluZyB0aGUgbG9naWNhbCBjb250YWluZXIgZm9yIGRhdGEuXG4gICAgICpcbiAgICAgKiBFYWNoIERhdGFiYXNlIGNvbnNpc3RzIG9mIG9uZSBvciBtb3JlIGNvbnRhaW5lcnMsIGVhY2ggb2Ygd2hpY2ggaW4gdHVybiBjb250YWluIG9uZSBvciBtb3JlXG4gICAgICogZG9jdW1lbnRzLiBTaW5jZSBkYXRhYmFzZXMgYXJlIGFuIGFuIGFkbWluaXN0cmF0aXZlIHJlc291cmNlLCB0aGUgU2VydmljZSBNYXN0ZXIgS2V5IHdpbGwgYmVcbiAgICAgKiByZXF1aXJlZCBpbiBvcmRlciB0byBhY2Nlc3MgYW5kIHN1Y2Nlc3NmdWxseSBjb21wbGV0ZSBhbnkgYWN0aW9uIHVzaW5nIHRoZSBVc2VyIEFQSXMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYm9keSBUaGUge0BsaW5rIERhdGFiYXNlRGVmaW5pdGlvbn0gdGhhdCByZXByZXNlbnRzIHRoZSB7QGxpbmsgRGF0YWJhc2V9IHRvIGJlIGNyZWF0ZWQuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgVXNlIHRvIHNldCBvcHRpb25zIGxpa2UgcmVzcG9uc2UgcGFnZSBzaXplLCBjb250aW51YXRpb24gdG9rZW5zLCBldGMuXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgZXJyID0ge307XG4gICAgICAgICAgICBpZiAoIWNvbW1vbl8xLkhlbHBlci5pc1Jlc291cmNlVmFsaWQoYm9keSwgZXJyKSkge1xuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBcIi9kYnNcIjsgLy8gVE9ETzogY29uc3RhbnRcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LmNyZWF0ZShib2R5LCBwYXRoLCBcImRic1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgICAgICAgICBjb25zdCByZWYgPSBuZXcgRGF0YWJhc2VfMS5EYXRhYmFzZSh0aGlzLmNsaWVudCwgYm9keS5pZCwgdGhpcy5jbGllbnRDb250ZXh0KTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgYm9keTogcmVzcG9uc2UucmVzdWx0LFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICAgICAgICAgICAgcmVmLFxuICAgICAgICAgICAgICAgIGRhdGFiYXNlOiByZWZcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDaGVjayBpZiBhIGRhdGFiYXNlIGV4aXN0cywgYW5kIGlmIGl0IGRvZXNuJ3QsIGNyZWF0ZSBpdC5cbiAgICAgKiBUaGlzIHdpbGwgbWFrZSBhIHJlYWQgb3BlcmF0aW9uIGJhc2VkIG9uIHRoZSBpZCBpbiB0aGUgYGJvZHlgLCB0aGVuIGlmIGl0IGlzIG5vdCBmb3VuZCwgYSBjcmVhdGUgb3BlcmF0aW9uLlxuICAgICAqXG4gICAgICogQSBkYXRhYmFzZSBtYW5hZ2VzIHVzZXJzLCBwZXJtaXNzaW9ucyBhbmQgYSBzZXQgb2YgY29udGFpbmVycy5cbiAgICAgKiBFYWNoIEF6dXJlIENvc21vcyBEQiBEYXRhYmFzZSBBY2NvdW50IGlzIGFibGUgdG8gc3VwcG9ydCBtdWx0aXBsZSBpbmRlcGVuZGVudCBuYW1lZCBkYXRhYmFzZXMsXG4gICAgICogd2l0aCB0aGUgZGF0YWJhc2UgYmVpbmcgdGhlIGxvZ2ljYWwgY29udGFpbmVyIGZvciBkYXRhLlxuICAgICAqXG4gICAgICogRWFjaCBEYXRhYmFzZSBjb25zaXN0cyBvZiBvbmUgb3IgbW9yZSBjb250YWluZXJzLCBlYWNoIG9mIHdoaWNoIGluIHR1cm4gY29udGFpbiBvbmUgb3IgbW9yZVxuICAgICAqIGRvY3VtZW50cy4gU2luY2UgZGF0YWJhc2VzIGFyZSBhbiBhbiBhZG1pbmlzdHJhdGl2ZSByZXNvdXJjZSwgdGhlIFNlcnZpY2UgTWFzdGVyIEtleSB3aWxsIGJlXG4gICAgICogcmVxdWlyZWQgaW4gb3JkZXIgdG8gYWNjZXNzIGFuZCBzdWNjZXNzZnVsbHkgY29tcGxldGUgYW55IGFjdGlvbiB1c2luZyB0aGUgVXNlciBBUElzLlxuICAgICAqXG4gICAgICogQHBhcmFtIGJvZHkgVGhlIHtAbGluayBEYXRhYmFzZURlZmluaXRpb259IHRoYXQgcmVwcmVzZW50cyB0aGUge0BsaW5rIERhdGFiYXNlfSB0byBiZSBjcmVhdGVkLlxuICAgICAqIEBwYXJhbSBvcHRpb25zXG4gICAgICovXG4gICAgY3JlYXRlSWZOb3RFeGlzdHMoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBpZiAoIWJvZHkgfHwgYm9keS5pZCA9PT0gbnVsbCB8fCBib2R5LmlkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJib2R5IHBhcmFtZXRlciBtdXN0IGJlIGFuIG9iamVjdCB3aXRoIGFuIGlkIHByb3BlcnR5XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLypcbiAgICAgICAgICAgICAgMS4gQXR0ZW1wdCB0byByZWFkIHRoZSBEYXRhYmFzZSAoYmFzZWQgb24gYW4gYXNzdW1wdGlvbiB0aGF0IG1vc3QgZGF0YWJhc2VzIHdpbGwgYWxyZWFkeSBleGlzdCwgc28gaXRzIGZhc3RlcilcbiAgICAgICAgICAgICAgMi4gSWYgaXQgZmFpbHMgd2l0aCBOb3RGb3VuZCBlcnJvciwgYXR0ZW1wdCB0byBjcmVhdGUgdGhlIGRiLiBFbHNlLCByZXR1cm4gdGhlIHJlYWQgcmVzdWx0cy5cbiAgICAgICAgICAgICovXG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlYWRSZXNwb25zZSA9IHlpZWxkIHRoaXMuY2xpZW50LmRhdGFiYXNlKGJvZHkuaWQpLnJlYWQob3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlYWRSZXNwb25zZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyLmNvZGUgPT09IGNvbW1vbl8xLlN0YXR1c0NvZGVzLk5vdEZvdW5kKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNyZWF0ZVJlc3BvbnNlID0geWllbGQgdGhpcy5jcmVhdGUoYm9keSwgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgICAgIC8vIE11c3QgbWVyZ2UgdGhlIGhlYWRlcnMgdG8gY2FwdHVyZSBSVSBjb3N0c2thdHlcbiAgICAgICAgICAgICAgICAgICAgcXVlcnlFeGVjdXRpb25Db250ZXh0XzEuSGVhZGVyVXRpbHMubWVyZ2VIZWFkZXJzKGNyZWF0ZVJlc3BvbnNlLmhlYWRlcnMsIGVyci5oZWFkZXJzKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZVJlc3BvbnNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8vIFRPRE86IERhdGFiYXNlUmVzcG9uc2UgZm9yIFF1ZXJ5SXRlcmF0b3I/XG4gICAgLyoqXG4gICAgICogUmVhZHMgYWxsIGRhdGFiYXNlcy5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBVc2UgdG8gc2V0IG9wdGlvbnMgbGlrZSByZXNwb25zZSBwYWdlIHNpemUsIGNvbnRpbnVhdGlvbiB0b2tlbnMsIGV0Yy5cbiAgICAgKiBAcmV0dXJucyB7QGxpbmsgUXVlcnlJdGVyYXRvcn0gQWxsb3dzIHlvdSB0byByZXR1cm4gYWxsIGRhdGFiYXNlcyBpbiBhbiBhcnJheSBvciBpdGVyYXRlIG92ZXIgdGhlbSBvbmUgYXQgYSB0aW1lLlxuICAgICAqIEBleGFtcGxlIFJlYWQgYWxsIGRhdGFiYXNlcyB0byBhcnJheS5cbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogY29uc3Qge2JvZHk6IGRhdGFiYXNlTGlzdH0gPSBhd2FpdCBjbGllbnQuZGF0YWJhc2VzLnJlYWRBbGwoKS50b0FycmF5KCk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgcmVhZEFsbChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnF1ZXJ5KHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgfVxufVxuZXhwb3J0cy5EYXRhYmFzZXMgPSBEYXRhYmFzZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1EYXRhYmFzZXMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/client/Database/Databases.js\n");

/***/ }),

/***/ "./lib/client/Database/index.js":
/*!**************************************!*\
  !*** ./lib/client/Database/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Database_1 = __webpack_require__(/*! ./Database */ \"./lib/client/Database/Database.js\");\nexports.Database = Database_1.Database;\nvar Databases_1 = __webpack_require__(/*! ./Databases */ \"./lib/client/Database/Databases.js\");\nexports.Databases = Databases_1.Databases;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L0RhdGFiYXNlL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2NsaWVudC9EYXRhYmFzZS9pbmRleC5qcz9kZGI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIERhdGFiYXNlXzEgPSByZXF1aXJlKFwiLi9EYXRhYmFzZVwiKTtcbmV4cG9ydHMuRGF0YWJhc2UgPSBEYXRhYmFzZV8xLkRhdGFiYXNlO1xudmFyIERhdGFiYXNlc18xID0gcmVxdWlyZShcIi4vRGF0YWJhc2VzXCIpO1xuZXhwb3J0cy5EYXRhYmFzZXMgPSBEYXRhYmFzZXNfMS5EYXRhYmFzZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/client/Database/index.js\n");

/***/ }),

/***/ "./lib/client/Item/Item.js":
/*!*********************************!*\
  !*** ./lib/client/Item/Item.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\n/**\n * Used to perform operations on a specific item.\n *\n * @see {@link Items} for operations on all items; see `container.items`.\n */\nclass Item {\n    /**\n     * @hidden\n     * @param container The parent {@link Container}.\n     * @param id The id of the given {@link Item}.\n     * @param primaryKey The primary key of the given {@link Item} (only for partitioned containers).\n     */\n    constructor(container, id, primaryKey, clientContext) {\n        this.container = container;\n        this.id = id;\n        this.primaryKey = primaryKey;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return common_1.UriFactory.createDocumentUri(this.container.database.id, this.container.id, this.id);\n    }\n    read(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            options = options || {};\n            if ((!options || !options.partitionKey) && this.primaryKey) {\n                options.partitionKey = this.primaryKey;\n            }\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.read(path, \"docs\", id, undefined, options);\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref: this,\n                item: this\n            };\n        });\n    }\n    replace(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            options = options || {};\n            if ((!options || !options.partitionKey) && this.primaryKey) {\n                options.partitionKey = this.primaryKey;\n            }\n            if (options.partitionKey === undefined && options.skipGetPartitionKeyDefinition !== true) {\n                const { body: partitionKeyDefinition } = yield this.container.getPartitionKeyDefinition();\n                options.partitionKey = this.container.extractPartitionKey(body, partitionKeyDefinition);\n            }\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.replace(body, path, \"docs\", id, undefined, options);\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref: this,\n                item: this\n            };\n        });\n    }\n    delete(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            options = options || {};\n            if ((!options || !options.partitionKey) && this.primaryKey) {\n                options.partitionKey = this.primaryKey;\n            }\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.delete(path, \"docs\", id, undefined, options);\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref: this,\n                item: this\n            };\n        });\n    }\n}\nexports.Item = Item;\n//# sourceMappingURL=Item.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L0l0ZW0vSXRlbS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9jbGllbnQvSXRlbS9JdGVtLmpzP2IxN2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgY29tbW9uXzEgPSByZXF1aXJlKFwiLi4vLi4vY29tbW9uXCIpO1xuLyoqXG4gKiBVc2VkIHRvIHBlcmZvcm0gb3BlcmF0aW9ucyBvbiBhIHNwZWNpZmljIGl0ZW0uXG4gKlxuICogQHNlZSB7QGxpbmsgSXRlbXN9IGZvciBvcGVyYXRpb25zIG9uIGFsbCBpdGVtczsgc2VlIGBjb250YWluZXIuaXRlbXNgLlxuICovXG5jbGFzcyBJdGVtIHtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQHBhcmFtIGNvbnRhaW5lciBUaGUgcGFyZW50IHtAbGluayBDb250YWluZXJ9LlxuICAgICAqIEBwYXJhbSBpZCBUaGUgaWQgb2YgdGhlIGdpdmVuIHtAbGluayBJdGVtfS5cbiAgICAgKiBAcGFyYW0gcHJpbWFyeUtleSBUaGUgcHJpbWFyeSBrZXkgb2YgdGhlIGdpdmVuIHtAbGluayBJdGVtfSAob25seSBmb3IgcGFydGl0aW9uZWQgY29udGFpbmVycykuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29udGFpbmVyLCBpZCwgcHJpbWFyeUtleSwgY2xpZW50Q29udGV4dCkge1xuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICB0aGlzLnByaW1hcnlLZXkgPSBwcmltYXJ5S2V5O1xuICAgICAgICB0aGlzLmNsaWVudENvbnRleHQgPSBjbGllbnRDb250ZXh0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgcmVmZXJlbmNlIFVSTCB0byB0aGUgcmVzb3VyY2UuIFVzZWQgZm9yIGxpbmtpbmcgaW4gUGVybWlzc2lvbnMuXG4gICAgICovXG4gICAgZ2V0IHVybCgpIHtcbiAgICAgICAgcmV0dXJuIGNvbW1vbl8xLlVyaUZhY3RvcnkuY3JlYXRlRG9jdW1lbnRVcmkodGhpcy5jb250YWluZXIuZGF0YWJhc2UuaWQsIHRoaXMuY29udGFpbmVyLmlkLCB0aGlzLmlkKTtcbiAgICB9XG4gICAgcmVhZChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgICAgICAgICAgaWYgKCghb3B0aW9ucyB8fCAhb3B0aW9ucy5wYXJ0aXRpb25LZXkpICYmIHRoaXMucHJpbWFyeUtleSkge1xuICAgICAgICAgICAgICAgIG9wdGlvbnMucGFydGl0aW9uS2V5ID0gdGhpcy5wcmltYXJ5S2V5O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcGF0aCA9IGNvbW1vbl8xLkhlbHBlci5nZXRQYXRoRnJvbUxpbmsodGhpcy51cmwpO1xuICAgICAgICAgICAgY29uc3QgaWQgPSBjb21tb25fMS5IZWxwZXIuZ2V0SWRGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIHRoaXMuY2xpZW50Q29udGV4dC5yZWFkKHBhdGgsIFwiZG9jc1wiLCBpZCwgdW5kZWZpbmVkLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgYm9keTogcmVzcG9uc2UucmVzdWx0LFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICAgICAgICAgICAgcmVmOiB0aGlzLFxuICAgICAgICAgICAgICAgIGl0ZW06IHRoaXNcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXBsYWNlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgICAgICAgICBpZiAoKCFvcHRpb25zIHx8ICFvcHRpb25zLnBhcnRpdGlvbktleSkgJiYgdGhpcy5wcmltYXJ5S2V5KSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5wYXJ0aXRpb25LZXkgPSB0aGlzLnByaW1hcnlLZXk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5wYXJ0aXRpb25LZXkgPT09IHVuZGVmaW5lZCAmJiBvcHRpb25zLnNraXBHZXRQYXJ0aXRpb25LZXlEZWZpbml0aW9uICE9PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBib2R5OiBwYXJ0aXRpb25LZXlEZWZpbml0aW9uIH0gPSB5aWVsZCB0aGlzLmNvbnRhaW5lci5nZXRQYXJ0aXRpb25LZXlEZWZpbml0aW9uKCk7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5wYXJ0aXRpb25LZXkgPSB0aGlzLmNvbnRhaW5lci5leHRyYWN0UGFydGl0aW9uS2V5KGJvZHksIHBhcnRpdGlvbktleURlZmluaXRpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZXJyID0ge307XG4gICAgICAgICAgICBpZiAoIWNvbW1vbl8xLkhlbHBlci5pc1Jlc291cmNlVmFsaWQoYm9keSwgZXJyKSkge1xuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBjb21tb25fMS5IZWxwZXIuZ2V0UGF0aEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gY29tbW9uXzEuSGVscGVyLmdldElkRnJvbUxpbmsodGhpcy51cmwpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCB0aGlzLmNsaWVudENvbnRleHQucmVwbGFjZShib2R5LCBwYXRoLCBcImRvY3NcIiwgaWQsIHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGJvZHk6IHJlc3BvbnNlLnJlc3VsdCxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgICAgICAgIHJlZjogdGhpcyxcbiAgICAgICAgICAgICAgICBpdGVtOiB0aGlzXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZGVsZXRlKG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgICAgICAgICBpZiAoKCFvcHRpb25zIHx8ICFvcHRpb25zLnBhcnRpdGlvbktleSkgJiYgdGhpcy5wcmltYXJ5S2V5KSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5wYXJ0aXRpb25LZXkgPSB0aGlzLnByaW1hcnlLZXk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRJZEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LmRlbGV0ZShwYXRoLCBcImRvY3NcIiwgaWQsIHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGJvZHk6IHJlc3BvbnNlLnJlc3VsdCxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgICAgICAgIHJlZjogdGhpcyxcbiAgICAgICAgICAgICAgICBpdGVtOiB0aGlzXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLkl0ZW0gPSBJdGVtO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SXRlbS5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/client/Item/Item.js\n");

/***/ }),

/***/ "./lib/client/Item/Items.js":
/*!**********************************!*\
  !*** ./lib/client/Item/Items.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\nconst queryIterator_1 = __webpack_require__(/*! ../../queryIterator */ \"./lib/queryIterator.js\");\nconst Item_1 = __webpack_require__(/*! ./Item */ \"./lib/client/Item/Item.js\");\n/**\n * Operations for creating new items, and reading/querying all items\n *\n * @see {@link Item} for reading, replacing, or deleting an existing container; use `.item(id)`.\n */\nclass Items {\n    /**\n     * Create an instance of {@link Items} linked to the parent {@link Container}.\n     * @param container The parent container.\n     * @hidden\n     */\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = common_1.Helper.getPathFromLink(this.container.url, \"docs\");\n        const id = common_1.Helper.getIdFromLink(this.container.url);\n        const fetchFunction = (innerOptions) => {\n            return this.clientContext.queryFeed(path, \"docs\", id, result => (result ? result.Documents : []), query, innerOptions);\n        };\n        return new queryIterator_1.QueryIterator(this.clientContext, query, options, fetchFunction, this.container.url);\n    }\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n    create(body, options = {}) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (options.partitionKey === undefined && options.skipGetPartitionKeyDefinition !== true) {\n                const { body: partitionKeyDefinition } = yield this.container.getPartitionKeyDefinition();\n                options.partitionKey = this.container.extractPartitionKey(body, partitionKeyDefinition);\n            }\n            // Generate random document id if the id is missing in the payload and\n            // options.disableAutomaticIdGeneration != true\n            if ((body.id === undefined || body.id === \"\") && !options.disableAutomaticIdGeneration) {\n                body.id = common_1.Helper.generateGuidId();\n            }\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.container.url, \"docs\");\n            const id = common_1.Helper.getIdFromLink(this.container.url);\n            const response = yield this.clientContext.create(body, path, \"docs\", id, undefined, options);\n            const ref = new Item_1.Item(this.container, response.result.id, (options && options.partitionKey), this.clientContext);\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref,\n                item: ref\n            };\n        });\n    }\n    upsert(body, options = {}) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (options.partitionKey === undefined && options.skipGetPartitionKeyDefinition !== true) {\n                const { body: partitionKeyDefinition } = yield this.container.getPartitionKeyDefinition();\n                options.partitionKey = this.container.extractPartitionKey(body, partitionKeyDefinition);\n            }\n            // Generate random document id if the id is missing in the payload and\n            // options.disableAutomaticIdGeneration != true\n            if ((body.id === undefined || body.id === \"\") && !options.disableAutomaticIdGeneration) {\n                body.id = common_1.Helper.generateGuidId();\n            }\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.container.url, \"docs\");\n            const id = common_1.Helper.getIdFromLink(this.container.url);\n            const response = (yield this.clientContext.upsert(body, path, \"docs\", id, undefined, options));\n            const ref = new Item_1.Item(this.container, response.result.id, (options && options.partitionKey), this.clientContext);\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref,\n                item: ref\n            };\n        });\n    }\n}\nexports.Items = Items;\n//# sourceMappingURL=Items.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L0l0ZW0vSXRlbXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvY2xpZW50L0l0ZW0vSXRlbXMuanM/Y2Y3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBjb21tb25fMSA9IHJlcXVpcmUoXCIuLi8uLi9jb21tb25cIik7XG5jb25zdCBxdWVyeUl0ZXJhdG9yXzEgPSByZXF1aXJlKFwiLi4vLi4vcXVlcnlJdGVyYXRvclwiKTtcbmNvbnN0IEl0ZW1fMSA9IHJlcXVpcmUoXCIuL0l0ZW1cIik7XG4vKipcbiAqIE9wZXJhdGlvbnMgZm9yIGNyZWF0aW5nIG5ldyBpdGVtcywgYW5kIHJlYWRpbmcvcXVlcnlpbmcgYWxsIGl0ZW1zXG4gKlxuICogQHNlZSB7QGxpbmsgSXRlbX0gZm9yIHJlYWRpbmcsIHJlcGxhY2luZywgb3IgZGVsZXRpbmcgYW4gZXhpc3RpbmcgY29udGFpbmVyOyB1c2UgYC5pdGVtKGlkKWAuXG4gKi9cbmNsYXNzIEl0ZW1zIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYW4gaW5zdGFuY2Ugb2Yge0BsaW5rIEl0ZW1zfSBsaW5rZWQgdG8gdGhlIHBhcmVudCB7QGxpbmsgQ29udGFpbmVyfS5cbiAgICAgKiBAcGFyYW0gY29udGFpbmVyIFRoZSBwYXJlbnQgY29udGFpbmVyLlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb250YWluZXIsIGNsaWVudENvbnRleHQpIHtcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XG4gICAgICAgIHRoaXMuY2xpZW50Q29udGV4dCA9IGNsaWVudENvbnRleHQ7XG4gICAgfVxuICAgIHF1ZXJ5KHF1ZXJ5LCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHBhdGggPSBjb21tb25fMS5IZWxwZXIuZ2V0UGF0aEZyb21MaW5rKHRoaXMuY29udGFpbmVyLnVybCwgXCJkb2NzXCIpO1xuICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRJZEZyb21MaW5rKHRoaXMuY29udGFpbmVyLnVybCk7XG4gICAgICAgIGNvbnN0IGZldGNoRnVuY3Rpb24gPSAoaW5uZXJPcHRpb25zKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jbGllbnRDb250ZXh0LnF1ZXJ5RmVlZChwYXRoLCBcImRvY3NcIiwgaWQsIHJlc3VsdCA9PiAocmVzdWx0ID8gcmVzdWx0LkRvY3VtZW50cyA6IFtdKSwgcXVlcnksIGlubmVyT3B0aW9ucyk7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBuZXcgcXVlcnlJdGVyYXRvcl8xLlF1ZXJ5SXRlcmF0b3IodGhpcy5jbGllbnRDb250ZXh0LCBxdWVyeSwgb3B0aW9ucywgZmV0Y2hGdW5jdGlvbiwgdGhpcy5jb250YWluZXIudXJsKTtcbiAgICB9XG4gICAgcmVhZEFsbChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnF1ZXJ5KHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMucGFydGl0aW9uS2V5ID09PSB1bmRlZmluZWQgJiYgb3B0aW9ucy5za2lwR2V0UGFydGl0aW9uS2V5RGVmaW5pdGlvbiAhPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgYm9keTogcGFydGl0aW9uS2V5RGVmaW5pdGlvbiB9ID0geWllbGQgdGhpcy5jb250YWluZXIuZ2V0UGFydGl0aW9uS2V5RGVmaW5pdGlvbigpO1xuICAgICAgICAgICAgICAgIG9wdGlvbnMucGFydGl0aW9uS2V5ID0gdGhpcy5jb250YWluZXIuZXh0cmFjdFBhcnRpdGlvbktleShib2R5LCBwYXJ0aXRpb25LZXlEZWZpbml0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIEdlbmVyYXRlIHJhbmRvbSBkb2N1bWVudCBpZCBpZiB0aGUgaWQgaXMgbWlzc2luZyBpbiB0aGUgcGF5bG9hZCBhbmRcbiAgICAgICAgICAgIC8vIG9wdGlvbnMuZGlzYWJsZUF1dG9tYXRpY0lkR2VuZXJhdGlvbiAhPSB0cnVlXG4gICAgICAgICAgICBpZiAoKGJvZHkuaWQgPT09IHVuZGVmaW5lZCB8fCBib2R5LmlkID09PSBcIlwiKSAmJiAhb3B0aW9ucy5kaXNhYmxlQXV0b21hdGljSWRHZW5lcmF0aW9uKSB7XG4gICAgICAgICAgICAgICAgYm9keS5pZCA9IGNvbW1vbl8xLkhlbHBlci5nZW5lcmF0ZUd1aWRJZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZXJyID0ge307XG4gICAgICAgICAgICBpZiAoIWNvbW1vbl8xLkhlbHBlci5pc1Jlc291cmNlVmFsaWQoYm9keSwgZXJyKSkge1xuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBjb21tb25fMS5IZWxwZXIuZ2V0UGF0aEZyb21MaW5rKHRoaXMuY29udGFpbmVyLnVybCwgXCJkb2NzXCIpO1xuICAgICAgICAgICAgY29uc3QgaWQgPSBjb21tb25fMS5IZWxwZXIuZ2V0SWRGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCB0aGlzLmNsaWVudENvbnRleHQuY3JlYXRlKGJvZHksIHBhdGgsIFwiZG9jc1wiLCBpZCwgdW5kZWZpbmVkLCBvcHRpb25zKTtcbiAgICAgICAgICAgIGNvbnN0IHJlZiA9IG5ldyBJdGVtXzEuSXRlbSh0aGlzLmNvbnRhaW5lciwgcmVzcG9uc2UucmVzdWx0LmlkLCAob3B0aW9ucyAmJiBvcHRpb25zLnBhcnRpdGlvbktleSksIHRoaXMuY2xpZW50Q29udGV4dCk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGJvZHk6IHJlc3BvbnNlLnJlc3VsdCxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgICAgICAgIHJlZixcbiAgICAgICAgICAgICAgICBpdGVtOiByZWZcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB1cHNlcnQoYm9keSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnBhcnRpdGlvbktleSA9PT0gdW5kZWZpbmVkICYmIG9wdGlvbnMuc2tpcEdldFBhcnRpdGlvbktleURlZmluaXRpb24gIT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IGJvZHk6IHBhcnRpdGlvbktleURlZmluaXRpb24gfSA9IHlpZWxkIHRoaXMuY29udGFpbmVyLmdldFBhcnRpdGlvbktleURlZmluaXRpb24oKTtcbiAgICAgICAgICAgICAgICBvcHRpb25zLnBhcnRpdGlvbktleSA9IHRoaXMuY29udGFpbmVyLmV4dHJhY3RQYXJ0aXRpb25LZXkoYm9keSwgcGFydGl0aW9uS2V5RGVmaW5pdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBHZW5lcmF0ZSByYW5kb20gZG9jdW1lbnQgaWQgaWYgdGhlIGlkIGlzIG1pc3NpbmcgaW4gdGhlIHBheWxvYWQgYW5kXG4gICAgICAgICAgICAvLyBvcHRpb25zLmRpc2FibGVBdXRvbWF0aWNJZEdlbmVyYXRpb24gIT0gdHJ1ZVxuICAgICAgICAgICAgaWYgKChib2R5LmlkID09PSB1bmRlZmluZWQgfHwgYm9keS5pZCA9PT0gXCJcIikgJiYgIW9wdGlvbnMuZGlzYWJsZUF1dG9tYXRpY0lkR2VuZXJhdGlvbikge1xuICAgICAgICAgICAgICAgIGJvZHkuaWQgPSBjb21tb25fMS5IZWxwZXIuZ2VuZXJhdGVHdWlkSWQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGVyciA9IHt9O1xuICAgICAgICAgICAgaWYgKCFjb21tb25fMS5IZWxwZXIuaXNSZXNvdXJjZVZhbGlkKGJvZHksIGVycikpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwsIFwiZG9jc1wiKTtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gY29tbW9uXzEuSGVscGVyLmdldElkRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gKHlpZWxkIHRoaXMuY2xpZW50Q29udGV4dC51cHNlcnQoYm9keSwgcGF0aCwgXCJkb2NzXCIsIGlkLCB1bmRlZmluZWQsIG9wdGlvbnMpKTtcbiAgICAgICAgICAgIGNvbnN0IHJlZiA9IG5ldyBJdGVtXzEuSXRlbSh0aGlzLmNvbnRhaW5lciwgcmVzcG9uc2UucmVzdWx0LmlkLCAob3B0aW9ucyAmJiBvcHRpb25zLnBhcnRpdGlvbktleSksIHRoaXMuY2xpZW50Q29udGV4dCk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGJvZHk6IHJlc3BvbnNlLnJlc3VsdCxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgICAgICAgIHJlZixcbiAgICAgICAgICAgICAgICBpdGVtOiByZWZcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuSXRlbXMgPSBJdGVtcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUl0ZW1zLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/client/Item/Items.js\n");

/***/ }),

/***/ "./lib/client/Item/index.js":
/*!**********************************!*\
  !*** ./lib/client/Item/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Item_1 = __webpack_require__(/*! ./Item */ \"./lib/client/Item/Item.js\");\nexports.Item = Item_1.Item;\nvar Items_1 = __webpack_require__(/*! ./Items */ \"./lib/client/Item/Items.js\");\nexports.Items = Items_1.Items;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L0l0ZW0vaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvY2xpZW50L0l0ZW0vaW5kZXguanM/YjI3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBJdGVtXzEgPSByZXF1aXJlKFwiLi9JdGVtXCIpO1xuZXhwb3J0cy5JdGVtID0gSXRlbV8xLkl0ZW07XG52YXIgSXRlbXNfMSA9IHJlcXVpcmUoXCIuL0l0ZW1zXCIpO1xuZXhwb3J0cy5JdGVtcyA9IEl0ZW1zXzEuSXRlbXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/client/Item/index.js\n");

/***/ }),

/***/ "./lib/client/Offer/Offer.js":
/*!***********************************!*\
  !*** ./lib/client/Offer/Offer.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\n/**\n * Use to read or replace an existing {@link Offer} by id.\n *\n * @see {@link Offers} to query or read all offers.\n */\nclass Offer {\n    /**\n     * @hidden\n     * @param client The parent {@link CosmosClient} for the Database Account.\n     * @param id The id of the given {@link Offer}.\n     */\n    constructor(client, id, clientContext) {\n        this.client = client;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return `/${common_1.Constants.Path.OffersPathSegment}/${this.id}`;\n    }\n    /**\n     * Read the {@link OfferDefinition} for the given {@link Offer}.\n     * @param options\n     */\n    read(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const response = yield this.clientContext.read(this.url, \"offers\", this.id, undefined, options);\n            return { body: response.result, headers: response.headers, ref: this, offer: this };\n        });\n    }\n    /**\n     * Replace the given {@link Offer} with the specified {@link OfferDefinition}.\n     * @param body The specified {@link OfferDefinition}\n     * @param options\n     */\n    replace(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const response = yield this.clientContext.replace(body, this.url, \"offers\", this.id, undefined, options);\n            return { body: response.result, headers: response.headers, ref: this, offer: this };\n        });\n    }\n}\nexports.Offer = Offer;\n//# sourceMappingURL=Offer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L09mZmVyL09mZmVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2NsaWVudC9PZmZlci9PZmZlci5qcz85ZGE2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGNvbW1vbl8xID0gcmVxdWlyZShcIi4uLy4uL2NvbW1vblwiKTtcbi8qKlxuICogVXNlIHRvIHJlYWQgb3IgcmVwbGFjZSBhbiBleGlzdGluZyB7QGxpbmsgT2ZmZXJ9IGJ5IGlkLlxuICpcbiAqIEBzZWUge0BsaW5rIE9mZmVyc30gdG8gcXVlcnkgb3IgcmVhZCBhbGwgb2ZmZXJzLlxuICovXG5jbGFzcyBPZmZlciB7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIEBwYXJhbSBjbGllbnQgVGhlIHBhcmVudCB7QGxpbmsgQ29zbW9zQ2xpZW50fSBmb3IgdGhlIERhdGFiYXNlIEFjY291bnQuXG4gICAgICogQHBhcmFtIGlkIFRoZSBpZCBvZiB0aGUgZ2l2ZW4ge0BsaW5rIE9mZmVyfS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjbGllbnQsIGlkLCBjbGllbnRDb250ZXh0KSB7XG4gICAgICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMuY2xpZW50Q29udGV4dCA9IGNsaWVudENvbnRleHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSByZWZlcmVuY2UgVVJMIHRvIHRoZSByZXNvdXJjZS4gVXNlZCBmb3IgbGlua2luZyBpbiBQZXJtaXNzaW9ucy5cbiAgICAgKi9cbiAgICBnZXQgdXJsKCkge1xuICAgICAgICByZXR1cm4gYC8ke2NvbW1vbl8xLkNvbnN0YW50cy5QYXRoLk9mZmVyc1BhdGhTZWdtZW50fS8ke3RoaXMuaWR9YDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZCB0aGUge0BsaW5rIE9mZmVyRGVmaW5pdGlvbn0gZm9yIHRoZSBnaXZlbiB7QGxpbmsgT2ZmZXJ9LlxuICAgICAqIEBwYXJhbSBvcHRpb25zXG4gICAgICovXG4gICAgcmVhZChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LnJlYWQodGhpcy51cmwsIFwib2ZmZXJzXCIsIHRoaXMuaWQsIHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4geyBib2R5OiByZXNwb25zZS5yZXN1bHQsIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsIHJlZjogdGhpcywgb2ZmZXI6IHRoaXMgfTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlcGxhY2UgdGhlIGdpdmVuIHtAbGluayBPZmZlcn0gd2l0aCB0aGUgc3BlY2lmaWVkIHtAbGluayBPZmZlckRlZmluaXRpb259LlxuICAgICAqIEBwYXJhbSBib2R5IFRoZSBzcGVjaWZpZWQge0BsaW5rIE9mZmVyRGVmaW5pdGlvbn1cbiAgICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgICAqL1xuICAgIHJlcGxhY2UoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBlcnIgPSB7fTtcbiAgICAgICAgICAgIGlmICghY29tbW9uXzEuSGVscGVyLmlzUmVzb3VyY2VWYWxpZChib2R5LCBlcnIpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCB0aGlzLmNsaWVudENvbnRleHQucmVwbGFjZShib2R5LCB0aGlzLnVybCwgXCJvZmZlcnNcIiwgdGhpcy5pZCwgdW5kZWZpbmVkLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHJldHVybiB7IGJvZHk6IHJlc3BvbnNlLnJlc3VsdCwgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVycywgcmVmOiB0aGlzLCBvZmZlcjogdGhpcyB9O1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLk9mZmVyID0gT2ZmZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1PZmZlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/client/Offer/Offer.js\n");

/***/ }),

/***/ "./lib/client/Offer/Offers.js":
/*!************************************!*\
  !*** ./lib/client/Offer/Offers.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst queryIterator_1 = __webpack_require__(/*! ../../queryIterator */ \"./lib/queryIterator.js\");\n/**\n * Use to query or read all Offers.\n *\n * @see {@link Offer} to read or replace an existing {@link Offer} by id.\n */\nclass Offers {\n    /**\n     * @hidden\n     * @param client The parent {@link CosmosClient} for the offers.\n     */\n    constructor(client, clientContext) {\n        this.client = client;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        return new queryIterator_1.QueryIterator(this.clientContext, query, options, innerOptions => {\n            return this.clientContext.queryFeed(\"/offers\", \"offers\", \"\", result => result.Offers, query, innerOptions);\n        });\n    }\n    /**\n     * Read all offers.\n     * @param options\n     * @example Read all offers to array.\n     * ```typescript\n     * const {body: offerList} = await client.offers.readAll().toArray();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n}\nexports.Offers = Offers;\n//# sourceMappingURL=Offers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L09mZmVyL09mZmVycy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9jbGllbnQvT2ZmZXIvT2ZmZXJzLmpzPzc0M2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBxdWVyeUl0ZXJhdG9yXzEgPSByZXF1aXJlKFwiLi4vLi4vcXVlcnlJdGVyYXRvclwiKTtcbi8qKlxuICogVXNlIHRvIHF1ZXJ5IG9yIHJlYWQgYWxsIE9mZmVycy5cbiAqXG4gKiBAc2VlIHtAbGluayBPZmZlcn0gdG8gcmVhZCBvciByZXBsYWNlIGFuIGV4aXN0aW5nIHtAbGluayBPZmZlcn0gYnkgaWQuXG4gKi9cbmNsYXNzIE9mZmVycyB7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIEBwYXJhbSBjbGllbnQgVGhlIHBhcmVudCB7QGxpbmsgQ29zbW9zQ2xpZW50fSBmb3IgdGhlIG9mZmVycy5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjbGllbnQsIGNsaWVudENvbnRleHQpIHtcbiAgICAgICAgdGhpcy5jbGllbnQgPSBjbGllbnQ7XG4gICAgICAgIHRoaXMuY2xpZW50Q29udGV4dCA9IGNsaWVudENvbnRleHQ7XG4gICAgfVxuICAgIHF1ZXJ5KHF1ZXJ5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgcXVlcnlJdGVyYXRvcl8xLlF1ZXJ5SXRlcmF0b3IodGhpcy5jbGllbnRDb250ZXh0LCBxdWVyeSwgb3B0aW9ucywgaW5uZXJPcHRpb25zID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNsaWVudENvbnRleHQucXVlcnlGZWVkKFwiL29mZmVyc1wiLCBcIm9mZmVyc1wiLCBcIlwiLCByZXN1bHQgPT4gcmVzdWx0Lk9mZmVycywgcXVlcnksIGlubmVyT3B0aW9ucyk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWFkIGFsbCBvZmZlcnMuXG4gICAgICogQHBhcmFtIG9wdGlvbnNcbiAgICAgKiBAZXhhbXBsZSBSZWFkIGFsbCBvZmZlcnMgdG8gYXJyYXkuXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGNvbnN0IHtib2R5OiBvZmZlckxpc3R9ID0gYXdhaXQgY2xpZW50Lm9mZmVycy5yZWFkQWxsKCkudG9BcnJheSgpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHJlYWRBbGwob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5xdWVyeSh1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgIH1cbn1cbmV4cG9ydHMuT2ZmZXJzID0gT2ZmZXJzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T2ZmZXJzLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/client/Offer/Offers.js\n");

/***/ }),

/***/ "./lib/client/Offer/index.js":
/*!***********************************!*\
  !*** ./lib/client/Offer/index.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Offer_1 = __webpack_require__(/*! ./Offer */ \"./lib/client/Offer/Offer.js\");\nexports.Offer = Offer_1.Offer;\nvar Offers_1 = __webpack_require__(/*! ./Offers */ \"./lib/client/Offer/Offers.js\");\nexports.Offers = Offers_1.Offers;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L09mZmVyL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2NsaWVudC9PZmZlci9pbmRleC5qcz8xZjgwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIE9mZmVyXzEgPSByZXF1aXJlKFwiLi9PZmZlclwiKTtcbmV4cG9ydHMuT2ZmZXIgPSBPZmZlcl8xLk9mZmVyO1xudmFyIE9mZmVyc18xID0gcmVxdWlyZShcIi4vT2ZmZXJzXCIpO1xuZXhwb3J0cy5PZmZlcnMgPSBPZmZlcnNfMS5PZmZlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/client/Offer/index.js\n");

/***/ }),

/***/ "./lib/client/Permission/Permission.js":
/*!*********************************************!*\
  !*** ./lib/client/Permission/Permission.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\n/**\n * Use to read, replace, or delete a given {@link Permission} by id.\n *\n * @see {@link Permissions} to create, upsert, query, or read all Permissions.\n */\nclass Permission {\n    /**\n     * @hidden\n     * @param user The parent {@link User}.\n     * @param id The id of the given {@link Permission}.\n     */\n    constructor(user, id, clientContext) {\n        this.user = user;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return common_1.UriFactory.createPermissionUri(this.user.database.id, this.user.id, this.id);\n    }\n    /**\n     * Read the {@link PermissionDefinition} of the given {@link Permission}.\n     * @param options\n     */\n    read(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.read(path, \"permissions\", id, undefined, options);\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref: this,\n                permission: this\n            };\n        });\n    }\n    /**\n     * Replace the given {@link Permission} with the specified {@link PermissionDefinition}.\n     * @param body The specified {@link PermissionDefinition}.\n     * @param options\n     */\n    replace(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.replace(body, path, \"permissions\", id, undefined, options);\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref: this,\n                permission: this\n            };\n        });\n    }\n    /**\n     * Delete the given {@link Permission}.\n     * @param options\n     */\n    delete(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.delete(path, \"permissions\", id, undefined, options);\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref: this,\n                permission: this\n            };\n        });\n    }\n}\nexports.Permission = Permission;\n//# sourceMappingURL=Permission.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L1Blcm1pc3Npb24vUGVybWlzc2lvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9jbGllbnQvUGVybWlzc2lvbi9QZXJtaXNzaW9uLmpzPzAzOWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgY29tbW9uXzEgPSByZXF1aXJlKFwiLi4vLi4vY29tbW9uXCIpO1xuLyoqXG4gKiBVc2UgdG8gcmVhZCwgcmVwbGFjZSwgb3IgZGVsZXRlIGEgZ2l2ZW4ge0BsaW5rIFBlcm1pc3Npb259IGJ5IGlkLlxuICpcbiAqIEBzZWUge0BsaW5rIFBlcm1pc3Npb25zfSB0byBjcmVhdGUsIHVwc2VydCwgcXVlcnksIG9yIHJlYWQgYWxsIFBlcm1pc3Npb25zLlxuICovXG5jbGFzcyBQZXJtaXNzaW9uIHtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQHBhcmFtIHVzZXIgVGhlIHBhcmVudCB7QGxpbmsgVXNlcn0uXG4gICAgICogQHBhcmFtIGlkIFRoZSBpZCBvZiB0aGUgZ2l2ZW4ge0BsaW5rIFBlcm1pc3Npb259LlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHVzZXIsIGlkLCBjbGllbnRDb250ZXh0KSB7XG4gICAgICAgIHRoaXMudXNlciA9IHVzZXI7XG4gICAgICAgIHRoaXMuaWQgPSBpZDtcbiAgICAgICAgdGhpcy5jbGllbnRDb250ZXh0ID0gY2xpZW50Q29udGV4dDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHJlZmVyZW5jZSBVUkwgdG8gdGhlIHJlc291cmNlLiBVc2VkIGZvciBsaW5raW5nIGluIFBlcm1pc3Npb25zLlxuICAgICAqL1xuICAgIGdldCB1cmwoKSB7XG4gICAgICAgIHJldHVybiBjb21tb25fMS5VcmlGYWN0b3J5LmNyZWF0ZVBlcm1pc3Npb25VcmkodGhpcy51c2VyLmRhdGFiYXNlLmlkLCB0aGlzLnVzZXIuaWQsIHRoaXMuaWQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWFkIHRoZSB7QGxpbmsgUGVybWlzc2lvbkRlZmluaXRpb259IG9mIHRoZSBnaXZlbiB7QGxpbmsgUGVybWlzc2lvbn0uXG4gICAgICogQHBhcmFtIG9wdGlvbnNcbiAgICAgKi9cbiAgICByZWFkKG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgcGF0aCA9IGNvbW1vbl8xLkhlbHBlci5nZXRQYXRoRnJvbUxpbmsodGhpcy51cmwpO1xuICAgICAgICAgICAgY29uc3QgaWQgPSBjb21tb25fMS5IZWxwZXIuZ2V0SWRGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIHRoaXMuY2xpZW50Q29udGV4dC5yZWFkKHBhdGgsIFwicGVybWlzc2lvbnNcIiwgaWQsIHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGJvZHk6IHJlc3BvbnNlLnJlc3VsdCxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgICAgICAgIHJlZjogdGhpcyxcbiAgICAgICAgICAgICAgICBwZXJtaXNzaW9uOiB0aGlzXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVwbGFjZSB0aGUgZ2l2ZW4ge0BsaW5rIFBlcm1pc3Npb259IHdpdGggdGhlIHNwZWNpZmllZCB7QGxpbmsgUGVybWlzc2lvbkRlZmluaXRpb259LlxuICAgICAqIEBwYXJhbSBib2R5IFRoZSBzcGVjaWZpZWQge0BsaW5rIFBlcm1pc3Npb25EZWZpbml0aW9ufS5cbiAgICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgICAqL1xuICAgIHJlcGxhY2UoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBlcnIgPSB7fTtcbiAgICAgICAgICAgIGlmICghY29tbW9uXzEuSGVscGVyLmlzUmVzb3VyY2VWYWxpZChib2R5LCBlcnIpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcGF0aCA9IGNvbW1vbl8xLkhlbHBlci5nZXRQYXRoRnJvbUxpbmsodGhpcy51cmwpO1xuICAgICAgICAgICAgY29uc3QgaWQgPSBjb21tb25fMS5IZWxwZXIuZ2V0SWRGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIHRoaXMuY2xpZW50Q29udGV4dC5yZXBsYWNlKGJvZHksIHBhdGgsIFwicGVybWlzc2lvbnNcIiwgaWQsIHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGJvZHk6IHJlc3BvbnNlLnJlc3VsdCxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgICAgICAgIHJlZjogdGhpcyxcbiAgICAgICAgICAgICAgICBwZXJtaXNzaW9uOiB0aGlzXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlIHRoZSBnaXZlbiB7QGxpbmsgUGVybWlzc2lvbn0uXG4gICAgICogQHBhcmFtIG9wdGlvbnNcbiAgICAgKi9cbiAgICBkZWxldGUob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRJZEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LmRlbGV0ZShwYXRoLCBcInBlcm1pc3Npb25zXCIsIGlkLCB1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBib2R5OiByZXNwb25zZS5yZXN1bHQsXG4gICAgICAgICAgICAgICAgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVycyxcbiAgICAgICAgICAgICAgICByZWY6IHRoaXMsXG4gICAgICAgICAgICAgICAgcGVybWlzc2lvbjogdGhpc1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5QZXJtaXNzaW9uID0gUGVybWlzc2lvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBlcm1pc3Npb24uanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/client/Permission/Permission.js\n");

/***/ }),

/***/ "./lib/client/Permission/Permissions.js":
/*!**********************************************!*\
  !*** ./lib/client/Permission/Permissions.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\nconst queryIterator_1 = __webpack_require__(/*! ../../queryIterator */ \"./lib/queryIterator.js\");\nconst Permission_1 = __webpack_require__(/*! ./Permission */ \"./lib/client/Permission/Permission.js\");\n/**\n * Use to create, replace, query, and read all Permissions.\n *\n * @see {@link Permission} to read, replace, or delete a specific permission by id.\n */\nclass Permissions {\n    /**\n     * @hidden\n     * @param user The parent {@link User}.\n     */\n    constructor(user, clientContext) {\n        this.user = user;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = common_1.Helper.getPathFromLink(this.user.url, \"permissions\");\n        const id = common_1.Helper.getIdFromLink(this.user.url);\n        return new queryIterator_1.QueryIterator(this.clientContext, query, options, innerOptions => {\n            return this.clientContext.queryFeed(path, \"permissions\", id, result => result.Permissions, query, innerOptions);\n        });\n    }\n    /**\n     * Read all permissions.\n     * @param options\n     * @example Read all permissions to array.\n     * ```typescript\n     * const {body: permissionList} = await user.permissions.readAll().toArray();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n    /**\n     * Create a permission.\n     *\n     * A permission represents a per-User Permission to access a specific resource\n     * e.g. Item or Container.\n     * @param body Represents the body of the permission.\n     */\n    create(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.user.url, \"permissions\");\n            const id = common_1.Helper.getIdFromLink(this.user.url);\n            const response = yield this.clientContext.create(body, path, \"permissions\", id, undefined, options);\n            const ref = new Permission_1.Permission(this.user, response.result.id, this.clientContext);\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref,\n                permission: ref\n            };\n        });\n    }\n    /**\n     * Upsert a permission.\n     *\n     * A permission represents a per-User Permission to access a\n     * specific resource e.g. Item or Cotnainer.\n     */\n    upsert(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.user.url, \"permissions\");\n            const id = common_1.Helper.getIdFromLink(this.user.url);\n            const response = yield this.clientContext.upsert(body, path, \"permissions\", id, undefined, options);\n            const ref = new Permission_1.Permission(this.user, response.result.id, this.clientContext);\n            return {\n                body: response.result,\n                headers: response.headers,\n                ref,\n                permission: ref\n            };\n        });\n    }\n}\nexports.Permissions = Permissions;\n//# sourceMappingURL=Permissions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L1Blcm1pc3Npb24vUGVybWlzc2lvbnMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvY2xpZW50L1Blcm1pc3Npb24vUGVybWlzc2lvbnMuanM/NjE5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBjb21tb25fMSA9IHJlcXVpcmUoXCIuLi8uLi9jb21tb25cIik7XG5jb25zdCBxdWVyeUl0ZXJhdG9yXzEgPSByZXF1aXJlKFwiLi4vLi4vcXVlcnlJdGVyYXRvclwiKTtcbmNvbnN0IFBlcm1pc3Npb25fMSA9IHJlcXVpcmUoXCIuL1Blcm1pc3Npb25cIik7XG4vKipcbiAqIFVzZSB0byBjcmVhdGUsIHJlcGxhY2UsIHF1ZXJ5LCBhbmQgcmVhZCBhbGwgUGVybWlzc2lvbnMuXG4gKlxuICogQHNlZSB7QGxpbmsgUGVybWlzc2lvbn0gdG8gcmVhZCwgcmVwbGFjZSwgb3IgZGVsZXRlIGEgc3BlY2lmaWMgcGVybWlzc2lvbiBieSBpZC5cbiAqL1xuY2xhc3MgUGVybWlzc2lvbnMge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAcGFyYW0gdXNlciBUaGUgcGFyZW50IHtAbGluayBVc2VyfS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcih1c2VyLCBjbGllbnRDb250ZXh0KSB7XG4gICAgICAgIHRoaXMudXNlciA9IHVzZXI7XG4gICAgICAgIHRoaXMuY2xpZW50Q29udGV4dCA9IGNsaWVudENvbnRleHQ7XG4gICAgfVxuICAgIHF1ZXJ5KHF1ZXJ5LCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHBhdGggPSBjb21tb25fMS5IZWxwZXIuZ2V0UGF0aEZyb21MaW5rKHRoaXMudXNlci51cmwsIFwicGVybWlzc2lvbnNcIik7XG4gICAgICAgIGNvbnN0IGlkID0gY29tbW9uXzEuSGVscGVyLmdldElkRnJvbUxpbmsodGhpcy51c2VyLnVybCk7XG4gICAgICAgIHJldHVybiBuZXcgcXVlcnlJdGVyYXRvcl8xLlF1ZXJ5SXRlcmF0b3IodGhpcy5jbGllbnRDb250ZXh0LCBxdWVyeSwgb3B0aW9ucywgaW5uZXJPcHRpb25zID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNsaWVudENvbnRleHQucXVlcnlGZWVkKHBhdGgsIFwicGVybWlzc2lvbnNcIiwgaWQsIHJlc3VsdCA9PiByZXN1bHQuUGVybWlzc2lvbnMsIHF1ZXJ5LCBpbm5lck9wdGlvbnMpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZCBhbGwgcGVybWlzc2lvbnMuXG4gICAgICogQHBhcmFtIG9wdGlvbnNcbiAgICAgKiBAZXhhbXBsZSBSZWFkIGFsbCBwZXJtaXNzaW9ucyB0byBhcnJheS5cbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogY29uc3Qge2JvZHk6IHBlcm1pc3Npb25MaXN0fSA9IGF3YWl0IHVzZXIucGVybWlzc2lvbnMucmVhZEFsbCgpLnRvQXJyYXkoKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICByZWFkQWxsKG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucXVlcnkodW5kZWZpbmVkLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgcGVybWlzc2lvbi5cbiAgICAgKlxuICAgICAqIEEgcGVybWlzc2lvbiByZXByZXNlbnRzIGEgcGVyLVVzZXIgUGVybWlzc2lvbiB0byBhY2Nlc3MgYSBzcGVjaWZpYyByZXNvdXJjZVxuICAgICAqIGUuZy4gSXRlbSBvciBDb250YWluZXIuXG4gICAgICogQHBhcmFtIGJvZHkgUmVwcmVzZW50cyB0aGUgYm9keSBvZiB0aGUgcGVybWlzc2lvbi5cbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBlcnIgPSB7fTtcbiAgICAgICAgICAgIGlmICghY29tbW9uXzEuSGVscGVyLmlzUmVzb3VyY2VWYWxpZChib2R5LCBlcnIpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcGF0aCA9IGNvbW1vbl8xLkhlbHBlci5nZXRQYXRoRnJvbUxpbmsodGhpcy51c2VyLnVybCwgXCJwZXJtaXNzaW9uc1wiKTtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gY29tbW9uXzEuSGVscGVyLmdldElkRnJvbUxpbmsodGhpcy51c2VyLnVybCk7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIHRoaXMuY2xpZW50Q29udGV4dC5jcmVhdGUoYm9keSwgcGF0aCwgXCJwZXJtaXNzaW9uc1wiLCBpZCwgdW5kZWZpbmVkLCBvcHRpb25zKTtcbiAgICAgICAgICAgIGNvbnN0IHJlZiA9IG5ldyBQZXJtaXNzaW9uXzEuUGVybWlzc2lvbih0aGlzLnVzZXIsIHJlc3BvbnNlLnJlc3VsdC5pZCwgdGhpcy5jbGllbnRDb250ZXh0KTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgYm9keTogcmVzcG9uc2UucmVzdWx0LFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICAgICAgICAgICAgcmVmLFxuICAgICAgICAgICAgICAgIHBlcm1pc3Npb246IHJlZlxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVwc2VydCBhIHBlcm1pc3Npb24uXG4gICAgICpcbiAgICAgKiBBIHBlcm1pc3Npb24gcmVwcmVzZW50cyBhIHBlci1Vc2VyIFBlcm1pc3Npb24gdG8gYWNjZXNzIGFcbiAgICAgKiBzcGVjaWZpYyByZXNvdXJjZSBlLmcuIEl0ZW0gb3IgQ290bmFpbmVyLlxuICAgICAqL1xuICAgIHVwc2VydChib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGVyciA9IHt9O1xuICAgICAgICAgICAgaWYgKCFjb21tb25fMS5IZWxwZXIuaXNSZXNvdXJjZVZhbGlkKGJvZHksIGVycikpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLnVzZXIudXJsLCBcInBlcm1pc3Npb25zXCIpO1xuICAgICAgICAgICAgY29uc3QgaWQgPSBjb21tb25fMS5IZWxwZXIuZ2V0SWRGcm9tTGluayh0aGlzLnVzZXIudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LnVwc2VydChib2R5LCBwYXRoLCBcInBlcm1pc3Npb25zXCIsIGlkLCB1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgY29uc3QgcmVmID0gbmV3IFBlcm1pc3Npb25fMS5QZXJtaXNzaW9uKHRoaXMudXNlciwgcmVzcG9uc2UucmVzdWx0LmlkLCB0aGlzLmNsaWVudENvbnRleHQpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBib2R5OiByZXNwb25zZS5yZXN1bHQsXG4gICAgICAgICAgICAgICAgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVycyxcbiAgICAgICAgICAgICAgICByZWYsXG4gICAgICAgICAgICAgICAgcGVybWlzc2lvbjogcmVmXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLlBlcm1pc3Npb25zID0gUGVybWlzc2lvbnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1QZXJtaXNzaW9ucy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/client/Permission/Permissions.js\n");

/***/ }),

/***/ "./lib/client/Permission/index.js":
/*!****************************************!*\
  !*** ./lib/client/Permission/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Permission_1 = __webpack_require__(/*! ./Permission */ \"./lib/client/Permission/Permission.js\");\nexports.Permission = Permission_1.Permission;\nvar Permissions_1 = __webpack_require__(/*! ./Permissions */ \"./lib/client/Permission/Permissions.js\");\nexports.Permissions = Permissions_1.Permissions;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L1Blcm1pc3Npb24vaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvY2xpZW50L1Blcm1pc3Npb24vaW5kZXguanM/MTIwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBQZXJtaXNzaW9uXzEgPSByZXF1aXJlKFwiLi9QZXJtaXNzaW9uXCIpO1xuZXhwb3J0cy5QZXJtaXNzaW9uID0gUGVybWlzc2lvbl8xLlBlcm1pc3Npb247XG52YXIgUGVybWlzc2lvbnNfMSA9IHJlcXVpcmUoXCIuL1Blcm1pc3Npb25zXCIpO1xuZXhwb3J0cy5QZXJtaXNzaW9ucyA9IFBlcm1pc3Npb25zXzEuUGVybWlzc2lvbnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/client/Permission/index.js\n");

/***/ }),

/***/ "./lib/client/StoredProcedure/StoredProcedure.js":
/*!*******************************************************!*\
  !*** ./lib/client/StoredProcedure/StoredProcedure.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\n/**\n * Operations for reading, replacing, deleting, or executing a specific, existing stored procedure by id.\n *\n * For operations to create, upsert, read all, or query Stored Procedures,\n */\nclass StoredProcedure {\n    /**\n     * Creates a new isntance of {@link StoredProcedure} linked to the parent {@link Container}.\n     * @param container The parent {@link Container}.\n     * @param id The id of the given {@link StoredProcedure}.\n     * @hidden\n     */\n    constructor(container, id, clientContext) {\n        this.container = container;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return common_1.UriFactory.createStoredProcedureUri(this.container.database.id, this.container.id, this.id);\n    }\n    /**\n     * Read the {@link StoredProcedureDefinition} for the given {@link StoredProcedure}.\n     * @param options\n     */\n    read(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.read(path, \"sprocs\", id, undefined, options);\n            return { body: response.result, headers: response.headers, ref: this, storedProcedure: this, sproc: this };\n        });\n    }\n    /**\n     * Replace the given {@link StoredProcedure} with the specified {@link StoredProcedureDefinition}.\n     * @param body The specified {@link StoredProcedureDefinition} to replace the existing definition.\n     * @param options\n     */\n    replace(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.replace(body, path, \"sprocs\", id, undefined, options);\n            return { body: response.result, headers: response.headers, ref: this, storedProcedure: this, sproc: this };\n        });\n    }\n    /**\n     * Delete the given {@link StoredProcedure}.\n     * @param options\n     */\n    delete(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.delete(path, \"sprocs\", id, undefined, options);\n            return { body: response.result, headers: response.headers, ref: this, storedProcedure: this, sproc: this };\n        });\n    }\n    execute(params, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const response = yield this.clientContext.execute(this.url, params, options);\n            return { body: response.result, headers: response.headers, ref: this };\n        });\n    }\n}\nexports.StoredProcedure = StoredProcedure;\n//# sourceMappingURL=StoredProcedure.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L1N0b3JlZFByb2NlZHVyZS9TdG9yZWRQcm9jZWR1cmUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvY2xpZW50L1N0b3JlZFByb2NlZHVyZS9TdG9yZWRQcm9jZWR1cmUuanM/MDJkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBjb21tb25fMSA9IHJlcXVpcmUoXCIuLi8uLi9jb21tb25cIik7XG4vKipcbiAqIE9wZXJhdGlvbnMgZm9yIHJlYWRpbmcsIHJlcGxhY2luZywgZGVsZXRpbmcsIG9yIGV4ZWN1dGluZyBhIHNwZWNpZmljLCBleGlzdGluZyBzdG9yZWQgcHJvY2VkdXJlIGJ5IGlkLlxuICpcbiAqIEZvciBvcGVyYXRpb25zIHRvIGNyZWF0ZSwgdXBzZXJ0LCByZWFkIGFsbCwgb3IgcXVlcnkgU3RvcmVkIFByb2NlZHVyZXMsXG4gKi9cbmNsYXNzIFN0b3JlZFByb2NlZHVyZSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBpc250YW5jZSBvZiB7QGxpbmsgU3RvcmVkUHJvY2VkdXJlfSBsaW5rZWQgdG8gdGhlIHBhcmVudCB7QGxpbmsgQ29udGFpbmVyfS5cbiAgICAgKiBAcGFyYW0gY29udGFpbmVyIFRoZSBwYXJlbnQge0BsaW5rIENvbnRhaW5lcn0uXG4gICAgICogQHBhcmFtIGlkIFRoZSBpZCBvZiB0aGUgZ2l2ZW4ge0BsaW5rIFN0b3JlZFByb2NlZHVyZX0uXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvbnRhaW5lciwgaWQsIGNsaWVudENvbnRleHQpIHtcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XG4gICAgICAgIHRoaXMuaWQgPSBpZDtcbiAgICAgICAgdGhpcy5jbGllbnRDb250ZXh0ID0gY2xpZW50Q29udGV4dDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHJlZmVyZW5jZSBVUkwgdG8gdGhlIHJlc291cmNlLiBVc2VkIGZvciBsaW5raW5nIGluIFBlcm1pc3Npb25zLlxuICAgICAqL1xuICAgIGdldCB1cmwoKSB7XG4gICAgICAgIHJldHVybiBjb21tb25fMS5VcmlGYWN0b3J5LmNyZWF0ZVN0b3JlZFByb2NlZHVyZVVyaSh0aGlzLmNvbnRhaW5lci5kYXRhYmFzZS5pZCwgdGhpcy5jb250YWluZXIuaWQsIHRoaXMuaWQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWFkIHRoZSB7QGxpbmsgU3RvcmVkUHJvY2VkdXJlRGVmaW5pdGlvbn0gZm9yIHRoZSBnaXZlbiB7QGxpbmsgU3RvcmVkUHJvY2VkdXJlfS5cbiAgICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgICAqL1xuICAgIHJlYWQob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRJZEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LnJlYWQocGF0aCwgXCJzcHJvY3NcIiwgaWQsIHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4geyBib2R5OiByZXNwb25zZS5yZXN1bHQsIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsIHJlZjogdGhpcywgc3RvcmVkUHJvY2VkdXJlOiB0aGlzLCBzcHJvYzogdGhpcyB9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVwbGFjZSB0aGUgZ2l2ZW4ge0BsaW5rIFN0b3JlZFByb2NlZHVyZX0gd2l0aCB0aGUgc3BlY2lmaWVkIHtAbGluayBTdG9yZWRQcm9jZWR1cmVEZWZpbml0aW9ufS5cbiAgICAgKiBAcGFyYW0gYm9keSBUaGUgc3BlY2lmaWVkIHtAbGluayBTdG9yZWRQcm9jZWR1cmVEZWZpbml0aW9ufSB0byByZXBsYWNlIHRoZSBleGlzdGluZyBkZWZpbml0aW9uLlxuICAgICAqIEBwYXJhbSBvcHRpb25zXG4gICAgICovXG4gICAgcmVwbGFjZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmIChib2R5LmJvZHkpIHtcbiAgICAgICAgICAgICAgICBib2R5LmJvZHkgPSBib2R5LmJvZHkudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGVyciA9IHt9O1xuICAgICAgICAgICAgaWYgKCFjb21tb25fMS5IZWxwZXIuaXNSZXNvdXJjZVZhbGlkKGJvZHksIGVycikpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRJZEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LnJlcGxhY2UoYm9keSwgcGF0aCwgXCJzcHJvY3NcIiwgaWQsIHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4geyBib2R5OiByZXNwb25zZS5yZXN1bHQsIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsIHJlZjogdGhpcywgc3RvcmVkUHJvY2VkdXJlOiB0aGlzLCBzcHJvYzogdGhpcyB9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlIHRoZSBnaXZlbiB7QGxpbmsgU3RvcmVkUHJvY2VkdXJlfS5cbiAgICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgICAqL1xuICAgIGRlbGV0ZShvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBjb21tb25fMS5IZWxwZXIuZ2V0UGF0aEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gY29tbW9uXzEuSGVscGVyLmdldElkRnJvbUxpbmsodGhpcy51cmwpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCB0aGlzLmNsaWVudENvbnRleHQuZGVsZXRlKHBhdGgsIFwic3Byb2NzXCIsIGlkLCB1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgcmV0dXJuIHsgYm9keTogcmVzcG9uc2UucmVzdWx0LCBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLCByZWY6IHRoaXMsIHN0b3JlZFByb2NlZHVyZTogdGhpcywgc3Byb2M6IHRoaXMgfTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGV4ZWN1dGUocGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LmV4ZWN1dGUodGhpcy51cmwsIHBhcmFtcywgb3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4geyBib2R5OiByZXNwb25zZS5yZXN1bHQsIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsIHJlZjogdGhpcyB9O1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLlN0b3JlZFByb2NlZHVyZSA9IFN0b3JlZFByb2NlZHVyZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN0b3JlZFByb2NlZHVyZS5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/client/StoredProcedure/StoredProcedure.js\n");

/***/ }),

/***/ "./lib/client/StoredProcedure/StoredProcedures.js":
/*!********************************************************!*\
  !*** ./lib/client/StoredProcedure/StoredProcedures.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\nconst queryIterator_1 = __webpack_require__(/*! ../../queryIterator */ \"./lib/queryIterator.js\");\nconst StoredProcedure_1 = __webpack_require__(/*! ./StoredProcedure */ \"./lib/client/StoredProcedure/StoredProcedure.js\");\n/**\n * Operations for creating, upserting, or reading/querying all Stored Procedures.\n *\n * For operations to read, replace, delete, or execute a specific, existing stored procedure by id, see `container.storedProcedure()`.\n */\nclass StoredProcedures {\n    /**\n     * @param container The parent {@link Container}.\n     * @hidden\n     */\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = common_1.Helper.getPathFromLink(this.container.url, \"sprocs\");\n        const id = common_1.Helper.getIdFromLink(this.container.url);\n        return new queryIterator_1.QueryIterator(this.clientContext, query, options, innerOptions => {\n            return this.clientContext.queryFeed(path, \"sprocs\", id, result => result.StoredProcedures, query, innerOptions);\n        });\n    }\n    /**\n     * Read all stored procedures.\n     * @param options\n     * @example Read all stored procedures to array.\n     * ```typescript\n     * const {body: sprocList} = await containers.storedProcedures.readAll().toArray();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n    /**\n     * Create a StoredProcedure.\n     *\n     * Azure Cosmos DB allows stored procedures to be executed in the storage tier,\n     * directly against an item container. The script\n     * gets executed under ACID transactions on the primary storage partition of the\n     * specified container. For additional details,\n     * refer to the server-side JavaScript API documentation.\n     */\n    create(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.container.url, \"sprocs\");\n            const id = common_1.Helper.getIdFromLink(this.container.url);\n            const response = yield this.clientContext.create(body, path, \"sprocs\", id, undefined, options);\n            const ref = new StoredProcedure_1.StoredProcedure(this.container, response.result.id, this.clientContext);\n            return { body: response.result, headers: response.headers, ref, storedProcedure: ref, sproc: ref };\n        });\n    }\n    /**\n     * Upsert a StoredProcedure.\n     *\n     * Azure Cosmos DB allows stored procedures to be executed in the storage tier,\n     * directly against a document container. The script\n     * gets executed under ACID transactions on the primary storage partition of the\n     *  specified container. For additional details,\n     * refer to the server-side JavaScript API documentation.\n     *\n     */\n    upsert(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.container.url, \"sprocs\");\n            const id = common_1.Helper.getIdFromLink(this.container.url);\n            const response = yield this.clientContext.upsert(body, path, \"sprocs\", id, undefined, options);\n            const ref = new StoredProcedure_1.StoredProcedure(this.container, response.result.id, this.clientContext);\n            return { body: response.result, headers: response.headers, ref, storedProcedure: ref, sproc: ref };\n        });\n    }\n}\nexports.StoredProcedures = StoredProcedures;\n//# sourceMappingURL=StoredProcedures.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L1N0b3JlZFByb2NlZHVyZS9TdG9yZWRQcm9jZWR1cmVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2NsaWVudC9TdG9yZWRQcm9jZWR1cmUvU3RvcmVkUHJvY2VkdXJlcy5qcz8xYzNhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGNvbW1vbl8xID0gcmVxdWlyZShcIi4uLy4uL2NvbW1vblwiKTtcbmNvbnN0IHF1ZXJ5SXRlcmF0b3JfMSA9IHJlcXVpcmUoXCIuLi8uLi9xdWVyeUl0ZXJhdG9yXCIpO1xuY29uc3QgU3RvcmVkUHJvY2VkdXJlXzEgPSByZXF1aXJlKFwiLi9TdG9yZWRQcm9jZWR1cmVcIik7XG4vKipcbiAqIE9wZXJhdGlvbnMgZm9yIGNyZWF0aW5nLCB1cHNlcnRpbmcsIG9yIHJlYWRpbmcvcXVlcnlpbmcgYWxsIFN0b3JlZCBQcm9jZWR1cmVzLlxuICpcbiAqIEZvciBvcGVyYXRpb25zIHRvIHJlYWQsIHJlcGxhY2UsIGRlbGV0ZSwgb3IgZXhlY3V0ZSBhIHNwZWNpZmljLCBleGlzdGluZyBzdG9yZWQgcHJvY2VkdXJlIGJ5IGlkLCBzZWUgYGNvbnRhaW5lci5zdG9yZWRQcm9jZWR1cmUoKWAuXG4gKi9cbmNsYXNzIFN0b3JlZFByb2NlZHVyZXMge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBjb250YWluZXIgVGhlIHBhcmVudCB7QGxpbmsgQ29udGFpbmVyfS5cbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29udGFpbmVyLCBjbGllbnRDb250ZXh0KSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgICAgICB0aGlzLmNsaWVudENvbnRleHQgPSBjbGllbnRDb250ZXh0O1xuICAgIH1cbiAgICBxdWVyeShxdWVyeSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwsIFwic3Byb2NzXCIpO1xuICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRJZEZyb21MaW5rKHRoaXMuY29udGFpbmVyLnVybCk7XG4gICAgICAgIHJldHVybiBuZXcgcXVlcnlJdGVyYXRvcl8xLlF1ZXJ5SXRlcmF0b3IodGhpcy5jbGllbnRDb250ZXh0LCBxdWVyeSwgb3B0aW9ucywgaW5uZXJPcHRpb25zID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNsaWVudENvbnRleHQucXVlcnlGZWVkKHBhdGgsIFwic3Byb2NzXCIsIGlkLCByZXN1bHQgPT4gcmVzdWx0LlN0b3JlZFByb2NlZHVyZXMsIHF1ZXJ5LCBpbm5lck9wdGlvbnMpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZCBhbGwgc3RvcmVkIHByb2NlZHVyZXMuXG4gICAgICogQHBhcmFtIG9wdGlvbnNcbiAgICAgKiBAZXhhbXBsZSBSZWFkIGFsbCBzdG9yZWQgcHJvY2VkdXJlcyB0byBhcnJheS5cbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogY29uc3Qge2JvZHk6IHNwcm9jTGlzdH0gPSBhd2FpdCBjb250YWluZXJzLnN0b3JlZFByb2NlZHVyZXMucmVhZEFsbCgpLnRvQXJyYXkoKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICByZWFkQWxsKG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucXVlcnkodW5kZWZpbmVkLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgU3RvcmVkUHJvY2VkdXJlLlxuICAgICAqXG4gICAgICogQXp1cmUgQ29zbW9zIERCIGFsbG93cyBzdG9yZWQgcHJvY2VkdXJlcyB0byBiZSBleGVjdXRlZCBpbiB0aGUgc3RvcmFnZSB0aWVyLFxuICAgICAqIGRpcmVjdGx5IGFnYWluc3QgYW4gaXRlbSBjb250YWluZXIuIFRoZSBzY3JpcHRcbiAgICAgKiBnZXRzIGV4ZWN1dGVkIHVuZGVyIEFDSUQgdHJhbnNhY3Rpb25zIG9uIHRoZSBwcmltYXJ5IHN0b3JhZ2UgcGFydGl0aW9uIG9mIHRoZVxuICAgICAqIHNwZWNpZmllZCBjb250YWluZXIuIEZvciBhZGRpdGlvbmFsIGRldGFpbHMsXG4gICAgICogcmVmZXIgdG8gdGhlIHNlcnZlci1zaWRlIEphdmFTY3JpcHQgQVBJIGRvY3VtZW50YXRpb24uXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKGJvZHkuYm9keSkge1xuICAgICAgICAgICAgICAgIGJvZHkuYm9keSA9IGJvZHkuYm9keS50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZXJyID0ge307XG4gICAgICAgICAgICBpZiAoIWNvbW1vbl8xLkhlbHBlci5pc1Jlc291cmNlVmFsaWQoYm9keSwgZXJyKSkge1xuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBjb21tb25fMS5IZWxwZXIuZ2V0UGF0aEZyb21MaW5rKHRoaXMuY29udGFpbmVyLnVybCwgXCJzcHJvY3NcIik7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRJZEZyb21MaW5rKHRoaXMuY29udGFpbmVyLnVybCk7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIHRoaXMuY2xpZW50Q29udGV4dC5jcmVhdGUoYm9keSwgcGF0aCwgXCJzcHJvY3NcIiwgaWQsIHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgICAgICAgICBjb25zdCByZWYgPSBuZXcgU3RvcmVkUHJvY2VkdXJlXzEuU3RvcmVkUHJvY2VkdXJlKHRoaXMuY29udGFpbmVyLCByZXNwb25zZS5yZXN1bHQuaWQsIHRoaXMuY2xpZW50Q29udGV4dCk7XG4gICAgICAgICAgICByZXR1cm4geyBib2R5OiByZXNwb25zZS5yZXN1bHQsIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsIHJlZiwgc3RvcmVkUHJvY2VkdXJlOiByZWYsIHNwcm9jOiByZWYgfTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVwc2VydCBhIFN0b3JlZFByb2NlZHVyZS5cbiAgICAgKlxuICAgICAqIEF6dXJlIENvc21vcyBEQiBhbGxvd3Mgc3RvcmVkIHByb2NlZHVyZXMgdG8gYmUgZXhlY3V0ZWQgaW4gdGhlIHN0b3JhZ2UgdGllcixcbiAgICAgKiBkaXJlY3RseSBhZ2FpbnN0IGEgZG9jdW1lbnQgY29udGFpbmVyLiBUaGUgc2NyaXB0XG4gICAgICogZ2V0cyBleGVjdXRlZCB1bmRlciBBQ0lEIHRyYW5zYWN0aW9ucyBvbiB0aGUgcHJpbWFyeSBzdG9yYWdlIHBhcnRpdGlvbiBvZiB0aGVcbiAgICAgKiAgc3BlY2lmaWVkIGNvbnRhaW5lci4gRm9yIGFkZGl0aW9uYWwgZGV0YWlscyxcbiAgICAgKiByZWZlciB0byB0aGUgc2VydmVyLXNpZGUgSmF2YVNjcmlwdCBBUEkgZG9jdW1lbnRhdGlvbi5cbiAgICAgKlxuICAgICAqL1xuICAgIHVwc2VydChib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmIChib2R5LmJvZHkpIHtcbiAgICAgICAgICAgICAgICBib2R5LmJvZHkgPSBib2R5LmJvZHkudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGVyciA9IHt9O1xuICAgICAgICAgICAgaWYgKCFjb21tb25fMS5IZWxwZXIuaXNSZXNvdXJjZVZhbGlkKGJvZHksIGVycikpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwsIFwic3Byb2NzXCIpO1xuICAgICAgICAgICAgY29uc3QgaWQgPSBjb21tb25fMS5IZWxwZXIuZ2V0SWRGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCB0aGlzLmNsaWVudENvbnRleHQudXBzZXJ0KGJvZHksIHBhdGgsIFwic3Byb2NzXCIsIGlkLCB1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgY29uc3QgcmVmID0gbmV3IFN0b3JlZFByb2NlZHVyZV8xLlN0b3JlZFByb2NlZHVyZSh0aGlzLmNvbnRhaW5lciwgcmVzcG9uc2UucmVzdWx0LmlkLCB0aGlzLmNsaWVudENvbnRleHQpO1xuICAgICAgICAgICAgcmV0dXJuIHsgYm9keTogcmVzcG9uc2UucmVzdWx0LCBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLCByZWYsIHN0b3JlZFByb2NlZHVyZTogcmVmLCBzcHJvYzogcmVmIH07XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuU3RvcmVkUHJvY2VkdXJlcyA9IFN0b3JlZFByb2NlZHVyZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdG9yZWRQcm9jZWR1cmVzLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/client/StoredProcedure/StoredProcedures.js\n");

/***/ }),

/***/ "./lib/client/StoredProcedure/index.js":
/*!*********************************************!*\
  !*** ./lib/client/StoredProcedure/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar StoredProcedure_1 = __webpack_require__(/*! ./StoredProcedure */ \"./lib/client/StoredProcedure/StoredProcedure.js\");\nexports.StoredProcedure = StoredProcedure_1.StoredProcedure;\nvar StoredProcedures_1 = __webpack_require__(/*! ./StoredProcedures */ \"./lib/client/StoredProcedure/StoredProcedures.js\");\nexports.StoredProcedures = StoredProcedures_1.StoredProcedures;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L1N0b3JlZFByb2NlZHVyZS9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9jbGllbnQvU3RvcmVkUHJvY2VkdXJlL2luZGV4LmpzPzk2MGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgU3RvcmVkUHJvY2VkdXJlXzEgPSByZXF1aXJlKFwiLi9TdG9yZWRQcm9jZWR1cmVcIik7XG5leHBvcnRzLlN0b3JlZFByb2NlZHVyZSA9IFN0b3JlZFByb2NlZHVyZV8xLlN0b3JlZFByb2NlZHVyZTtcbnZhciBTdG9yZWRQcm9jZWR1cmVzXzEgPSByZXF1aXJlKFwiLi9TdG9yZWRQcm9jZWR1cmVzXCIpO1xuZXhwb3J0cy5TdG9yZWRQcm9jZWR1cmVzID0gU3RvcmVkUHJvY2VkdXJlc18xLlN0b3JlZFByb2NlZHVyZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/client/StoredProcedure/index.js\n");

/***/ }),

/***/ "./lib/client/Trigger/Trigger.js":
/*!***************************************!*\
  !*** ./lib/client/Trigger/Trigger.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\n/**\n * Operations to read, replace, or delete a {@link Trigger}.\n *\n * Use `container.triggers` to create, upsert, query, or read all.\n */\nclass Trigger {\n    /**\n     * @hidden\n     * @param container The parent {@link Container}.\n     * @param id The id of the given {@link Trigger}.\n     */\n    constructor(container, id, clientContext) {\n        this.container = container;\n        this.id = id;\n        this.clientContext = clientContext;\n        this.client = this.container.database.client;\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return common_1.UriFactory.createTriggerUri(this.container.database.id, this.container.id, this.id);\n    }\n    /**\n     * Read the {@link TriggerDefinition} for the given {@link Trigger}.\n     * @param options\n     */\n    read(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.read(path, \"triggers\", id, undefined, options);\n            return { body: response.result, headers: response.headers, ref: this, trigger: this };\n        });\n    }\n    /**\n     * Replace the given {@link Trigger} with the specified {@link TriggerDefinition}.\n     * @param body The specified {@link TriggerDefinition} to replace the existing definition with.\n     * @param options\n     */\n    replace(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.replace(body, path, \"triggers\", id, undefined, options);\n            return { body: response.result, headers: response.headers, ref: this, trigger: this };\n        });\n    }\n    /**\n     * Delete the given {@link Trigger}.\n     * @param options\n     */\n    delete(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.delete(path, \"triggers\", id, undefined, options);\n            return { body: response.result, headers: response.headers, ref: this, trigger: this };\n        });\n    }\n}\nexports.Trigger = Trigger;\n//# sourceMappingURL=Trigger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L1RyaWdnZXIvVHJpZ2dlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9jbGllbnQvVHJpZ2dlci9UcmlnZ2VyLmpzP2ZhOTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgY29tbW9uXzEgPSByZXF1aXJlKFwiLi4vLi4vY29tbW9uXCIpO1xuLyoqXG4gKiBPcGVyYXRpb25zIHRvIHJlYWQsIHJlcGxhY2UsIG9yIGRlbGV0ZSBhIHtAbGluayBUcmlnZ2VyfS5cbiAqXG4gKiBVc2UgYGNvbnRhaW5lci50cmlnZ2Vyc2AgdG8gY3JlYXRlLCB1cHNlcnQsIHF1ZXJ5LCBvciByZWFkIGFsbC5cbiAqL1xuY2xhc3MgVHJpZ2dlciB7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIEBwYXJhbSBjb250YWluZXIgVGhlIHBhcmVudCB7QGxpbmsgQ29udGFpbmVyfS5cbiAgICAgKiBAcGFyYW0gaWQgVGhlIGlkIG9mIHRoZSBnaXZlbiB7QGxpbmsgVHJpZ2dlcn0uXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29udGFpbmVyLCBpZCwgY2xpZW50Q29udGV4dCkge1xuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICB0aGlzLmNsaWVudENvbnRleHQgPSBjbGllbnRDb250ZXh0O1xuICAgICAgICB0aGlzLmNsaWVudCA9IHRoaXMuY29udGFpbmVyLmRhdGFiYXNlLmNsaWVudDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHJlZmVyZW5jZSBVUkwgdG8gdGhlIHJlc291cmNlLiBVc2VkIGZvciBsaW5raW5nIGluIFBlcm1pc3Npb25zLlxuICAgICAqL1xuICAgIGdldCB1cmwoKSB7XG4gICAgICAgIHJldHVybiBjb21tb25fMS5VcmlGYWN0b3J5LmNyZWF0ZVRyaWdnZXJVcmkodGhpcy5jb250YWluZXIuZGF0YWJhc2UuaWQsIHRoaXMuY29udGFpbmVyLmlkLCB0aGlzLmlkKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZCB0aGUge0BsaW5rIFRyaWdnZXJEZWZpbml0aW9ufSBmb3IgdGhlIGdpdmVuIHtAbGluayBUcmlnZ2VyfS5cbiAgICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgICAqL1xuICAgIHJlYWQob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRJZEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LnJlYWQocGF0aCwgXCJ0cmlnZ2Vyc1wiLCBpZCwgdW5kZWZpbmVkLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHJldHVybiB7IGJvZHk6IHJlc3BvbnNlLnJlc3VsdCwgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVycywgcmVmOiB0aGlzLCB0cmlnZ2VyOiB0aGlzIH07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXBsYWNlIHRoZSBnaXZlbiB7QGxpbmsgVHJpZ2dlcn0gd2l0aCB0aGUgc3BlY2lmaWVkIHtAbGluayBUcmlnZ2VyRGVmaW5pdGlvbn0uXG4gICAgICogQHBhcmFtIGJvZHkgVGhlIHNwZWNpZmllZCB7QGxpbmsgVHJpZ2dlckRlZmluaXRpb259IHRvIHJlcGxhY2UgdGhlIGV4aXN0aW5nIGRlZmluaXRpb24gd2l0aC5cbiAgICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgICAqL1xuICAgIHJlcGxhY2UoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBpZiAoYm9keS5ib2R5KSB7XG4gICAgICAgICAgICAgICAgYm9keS5ib2R5ID0gYm9keS5ib2R5LnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBlcnIgPSB7fTtcbiAgICAgICAgICAgIGlmICghY29tbW9uXzEuSGVscGVyLmlzUmVzb3VyY2VWYWxpZChib2R5LCBlcnIpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcGF0aCA9IGNvbW1vbl8xLkhlbHBlci5nZXRQYXRoRnJvbUxpbmsodGhpcy51cmwpO1xuICAgICAgICAgICAgY29uc3QgaWQgPSBjb21tb25fMS5IZWxwZXIuZ2V0SWRGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIHRoaXMuY2xpZW50Q29udGV4dC5yZXBsYWNlKGJvZHksIHBhdGgsIFwidHJpZ2dlcnNcIiwgaWQsIHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4geyBib2R5OiByZXNwb25zZS5yZXN1bHQsIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsIHJlZjogdGhpcywgdHJpZ2dlcjogdGhpcyB9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlIHRoZSBnaXZlbiB7QGxpbmsgVHJpZ2dlcn0uXG4gICAgICogQHBhcmFtIG9wdGlvbnNcbiAgICAgKi9cbiAgICBkZWxldGUob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRJZEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LmRlbGV0ZShwYXRoLCBcInRyaWdnZXJzXCIsIGlkLCB1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgcmV0dXJuIHsgYm9keTogcmVzcG9uc2UucmVzdWx0LCBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLCByZWY6IHRoaXMsIHRyaWdnZXI6IHRoaXMgfTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5UcmlnZ2VyID0gVHJpZ2dlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRyaWdnZXIuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/client/Trigger/Trigger.js\n");

/***/ }),

/***/ "./lib/client/Trigger/Triggers.js":
/*!****************************************!*\
  !*** ./lib/client/Trigger/Triggers.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\nconst queryIterator_1 = __webpack_require__(/*! ../../queryIterator */ \"./lib/queryIterator.js\");\nconst Trigger_1 = __webpack_require__(/*! ./Trigger */ \"./lib/client/Trigger/Trigger.js\");\n/**\n * Operations to create, upsert, query, and read all triggers.\n *\n * Use `container.triggers` to read, replace, or delete a {@link Trigger}.\n */\nclass Triggers {\n    /**\n     * @hidden\n     * @param container The parent {@link Container}.\n     */\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = common_1.Helper.getPathFromLink(this.container.url, \"triggers\");\n        const id = common_1.Helper.getIdFromLink(this.container.url);\n        return new queryIterator_1.QueryIterator(this.clientContext, query, options, innerOptions => {\n            return this.clientContext.queryFeed(path, \"triggers\", id, result => result.Triggers, query, innerOptions);\n        });\n    }\n    /**\n     * Read all Triggers.\n     * @param options\n     * @example Read all trigger to array.\n     * ```typescript\n     * const {body: triggerList} = await container.triggers.readAll().toArray();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n    /**\n     * Create a trigger.\n     *\n     * Azure Cosmos DB supports pre and post triggers defined in JavaScript to be executed\n     * on creates, updates and deletes.\n     *\n     * For additional details, refer to the server-side JavaScript API documentation.\n     * @param body\n     * @param options\n     */\n    create(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.container.url, \"triggers\");\n            const id = common_1.Helper.getIdFromLink(this.container.url);\n            const response = yield this.clientContext.create(body, path, \"triggers\", id, undefined, options);\n            const ref = new Trigger_1.Trigger(this.container, response.result.id, this.clientContext);\n            return { body: response.result, headers: response.headers, ref, trigger: ref };\n        });\n    }\n    /**\n     * Upsert a trigger.\n     *\n     * Azure Cosmos DB supports pre and post triggers defined in JavaScript to be\n     * executed on creates, updates and deletes.\n     *\n     * For additional details, refer to the server-side JavaScript API documentation.\n     * @param body\n     * @param options\n     */\n    upsert(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.container.url, \"triggers\");\n            const id = common_1.Helper.getIdFromLink(this.container.url);\n            const response = yield this.clientContext.upsert(body, path, \"triggers\", id, undefined, options);\n            const ref = new Trigger_1.Trigger(this.container, response.result.id, this.clientContext);\n            return { body: response.result, headers: response.headers, ref, trigger: ref };\n        });\n    }\n}\nexports.Triggers = Triggers;\n//# sourceMappingURL=Triggers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L1RyaWdnZXIvVHJpZ2dlcnMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvY2xpZW50L1RyaWdnZXIvVHJpZ2dlcnMuanM/YzQzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBjb21tb25fMSA9IHJlcXVpcmUoXCIuLi8uLi9jb21tb25cIik7XG5jb25zdCBxdWVyeUl0ZXJhdG9yXzEgPSByZXF1aXJlKFwiLi4vLi4vcXVlcnlJdGVyYXRvclwiKTtcbmNvbnN0IFRyaWdnZXJfMSA9IHJlcXVpcmUoXCIuL1RyaWdnZXJcIik7XG4vKipcbiAqIE9wZXJhdGlvbnMgdG8gY3JlYXRlLCB1cHNlcnQsIHF1ZXJ5LCBhbmQgcmVhZCBhbGwgdHJpZ2dlcnMuXG4gKlxuICogVXNlIGBjb250YWluZXIudHJpZ2dlcnNgIHRvIHJlYWQsIHJlcGxhY2UsIG9yIGRlbGV0ZSBhIHtAbGluayBUcmlnZ2VyfS5cbiAqL1xuY2xhc3MgVHJpZ2dlcnMge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAcGFyYW0gY29udGFpbmVyIFRoZSBwYXJlbnQge0BsaW5rIENvbnRhaW5lcn0uXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29udGFpbmVyLCBjbGllbnRDb250ZXh0KSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgICAgICB0aGlzLmNsaWVudENvbnRleHQgPSBjbGllbnRDb250ZXh0O1xuICAgIH1cbiAgICBxdWVyeShxdWVyeSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwsIFwidHJpZ2dlcnNcIik7XG4gICAgICAgIGNvbnN0IGlkID0gY29tbW9uXzEuSGVscGVyLmdldElkRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsKTtcbiAgICAgICAgcmV0dXJuIG5ldyBxdWVyeUl0ZXJhdG9yXzEuUXVlcnlJdGVyYXRvcih0aGlzLmNsaWVudENvbnRleHQsIHF1ZXJ5LCBvcHRpb25zLCBpbm5lck9wdGlvbnMgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2xpZW50Q29udGV4dC5xdWVyeUZlZWQocGF0aCwgXCJ0cmlnZ2Vyc1wiLCBpZCwgcmVzdWx0ID0+IHJlc3VsdC5UcmlnZ2VycywgcXVlcnksIGlubmVyT3B0aW9ucyk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWFkIGFsbCBUcmlnZ2Vycy5cbiAgICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgICAqIEBleGFtcGxlIFJlYWQgYWxsIHRyaWdnZXIgdG8gYXJyYXkuXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGNvbnN0IHtib2R5OiB0cmlnZ2VyTGlzdH0gPSBhd2FpdCBjb250YWluZXIudHJpZ2dlcnMucmVhZEFsbCgpLnRvQXJyYXkoKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICByZWFkQWxsKG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucXVlcnkodW5kZWZpbmVkLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgdHJpZ2dlci5cbiAgICAgKlxuICAgICAqIEF6dXJlIENvc21vcyBEQiBzdXBwb3J0cyBwcmUgYW5kIHBvc3QgdHJpZ2dlcnMgZGVmaW5lZCBpbiBKYXZhU2NyaXB0IHRvIGJlIGV4ZWN1dGVkXG4gICAgICogb24gY3JlYXRlcywgdXBkYXRlcyBhbmQgZGVsZXRlcy5cbiAgICAgKlxuICAgICAqIEZvciBhZGRpdGlvbmFsIGRldGFpbHMsIHJlZmVyIHRvIHRoZSBzZXJ2ZXItc2lkZSBKYXZhU2NyaXB0IEFQSSBkb2N1bWVudGF0aW9uLlxuICAgICAqIEBwYXJhbSBib2R5XG4gICAgICogQHBhcmFtIG9wdGlvbnNcbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBpZiAoYm9keS5ib2R5KSB7XG4gICAgICAgICAgICAgICAgYm9keS5ib2R5ID0gYm9keS5ib2R5LnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBlcnIgPSB7fTtcbiAgICAgICAgICAgIGlmICghY29tbW9uXzEuSGVscGVyLmlzUmVzb3VyY2VWYWxpZChib2R5LCBlcnIpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcGF0aCA9IGNvbW1vbl8xLkhlbHBlci5nZXRQYXRoRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsLCBcInRyaWdnZXJzXCIpO1xuICAgICAgICAgICAgY29uc3QgaWQgPSBjb21tb25fMS5IZWxwZXIuZ2V0SWRGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCB0aGlzLmNsaWVudENvbnRleHQuY3JlYXRlKGJvZHksIHBhdGgsIFwidHJpZ2dlcnNcIiwgaWQsIHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgICAgICAgICBjb25zdCByZWYgPSBuZXcgVHJpZ2dlcl8xLlRyaWdnZXIodGhpcy5jb250YWluZXIsIHJlc3BvbnNlLnJlc3VsdC5pZCwgdGhpcy5jbGllbnRDb250ZXh0KTtcbiAgICAgICAgICAgIHJldHVybiB7IGJvZHk6IHJlc3BvbnNlLnJlc3VsdCwgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVycywgcmVmLCB0cmlnZ2VyOiByZWYgfTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVwc2VydCBhIHRyaWdnZXIuXG4gICAgICpcbiAgICAgKiBBenVyZSBDb3Ntb3MgREIgc3VwcG9ydHMgcHJlIGFuZCBwb3N0IHRyaWdnZXJzIGRlZmluZWQgaW4gSmF2YVNjcmlwdCB0byBiZVxuICAgICAqIGV4ZWN1dGVkIG9uIGNyZWF0ZXMsIHVwZGF0ZXMgYW5kIGRlbGV0ZXMuXG4gICAgICpcbiAgICAgKiBGb3IgYWRkaXRpb25hbCBkZXRhaWxzLCByZWZlciB0byB0aGUgc2VydmVyLXNpZGUgSmF2YVNjcmlwdCBBUEkgZG9jdW1lbnRhdGlvbi5cbiAgICAgKiBAcGFyYW0gYm9keVxuICAgICAqIEBwYXJhbSBvcHRpb25zXG4gICAgICovXG4gICAgdXBzZXJ0KGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKGJvZHkuYm9keSkge1xuICAgICAgICAgICAgICAgIGJvZHkuYm9keSA9IGJvZHkuYm9keS50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZXJyID0ge307XG4gICAgICAgICAgICBpZiAoIWNvbW1vbl8xLkhlbHBlci5pc1Jlc291cmNlVmFsaWQoYm9keSwgZXJyKSkge1xuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBjb21tb25fMS5IZWxwZXIuZ2V0UGF0aEZyb21MaW5rKHRoaXMuY29udGFpbmVyLnVybCwgXCJ0cmlnZ2Vyc1wiKTtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gY29tbW9uXzEuSGVscGVyLmdldElkRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LnVwc2VydChib2R5LCBwYXRoLCBcInRyaWdnZXJzXCIsIGlkLCB1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgY29uc3QgcmVmID0gbmV3IFRyaWdnZXJfMS5UcmlnZ2VyKHRoaXMuY29udGFpbmVyLCByZXNwb25zZS5yZXN1bHQuaWQsIHRoaXMuY2xpZW50Q29udGV4dCk7XG4gICAgICAgICAgICByZXR1cm4geyBib2R5OiByZXNwb25zZS5yZXN1bHQsIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsIHJlZiwgdHJpZ2dlcjogcmVmIH07XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuVHJpZ2dlcnMgPSBUcmlnZ2Vycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRyaWdnZXJzLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/client/Trigger/Triggers.js\n");

/***/ }),

/***/ "./lib/client/Trigger/index.js":
/*!*************************************!*\
  !*** ./lib/client/Trigger/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Trigger_1 = __webpack_require__(/*! ./Trigger */ \"./lib/client/Trigger/Trigger.js\");\nexports.Trigger = Trigger_1.Trigger;\nvar Triggers_1 = __webpack_require__(/*! ./Triggers */ \"./lib/client/Trigger/Triggers.js\");\nexports.Triggers = Triggers_1.Triggers;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L1RyaWdnZXIvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvY2xpZW50L1RyaWdnZXIvaW5kZXguanM/N2IzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBUcmlnZ2VyXzEgPSByZXF1aXJlKFwiLi9UcmlnZ2VyXCIpO1xuZXhwb3J0cy5UcmlnZ2VyID0gVHJpZ2dlcl8xLlRyaWdnZXI7XG52YXIgVHJpZ2dlcnNfMSA9IHJlcXVpcmUoXCIuL1RyaWdnZXJzXCIpO1xuZXhwb3J0cy5UcmlnZ2VycyA9IFRyaWdnZXJzXzEuVHJpZ2dlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/client/Trigger/index.js\n");

/***/ }),

/***/ "./lib/client/User/User.js":
/*!*********************************!*\
  !*** ./lib/client/User/User.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\nconst Permission_1 = __webpack_require__(/*! ../Permission */ \"./lib/client/Permission/index.js\");\n/**\n * Used to read, replace, and delete Users.\n *\n * Additionally, you can access the permissions for a given user via `user.permission` and `user.permissions`.\n *\n * @see {@link Users} to create, upsert, query, or read all.\n */\nclass User {\n    /**\n     * @hidden\n     * @param database The parent {@link Database}.\n     * @param id\n     */\n    constructor(database, id, clientContext) {\n        this.database = database;\n        this.id = id;\n        this.clientContext = clientContext;\n        this.permissions = new Permission_1.Permissions(this, this.clientContext);\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return common_1.UriFactory.createUserUri(this.database.id, this.id);\n    }\n    /**\n     * Operations to read, replace, or delete a specific Permission by id.\n     *\n     * See `client.permissions` for creating, upserting, querying, or reading all operations.\n     * @param id\n     */\n    permission(id) {\n        return new Permission_1.Permission(this, id, this.clientContext);\n    }\n    /**\n     * Read the {@link UserDefinition} for the given {@link User}.\n     * @param options\n     */\n    read(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.read(path, \"users\", id, undefined, options);\n            return { body: response.result, headers: response.headers, ref: this, user: this };\n        });\n    }\n    /**\n     * Replace the given {@link User}'s definition with the specified {@link UserDefinition}.\n     * @param body The specified {@link UserDefinition} to replace the definition.\n     * @param options\n     */\n    replace(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.replace(body, path, \"users\", id, undefined, options);\n            return { body: response.result, headers: response.headers, ref: this, user: this };\n        });\n    }\n    /**\n     * Delete the given {@link User}.\n     * @param options\n     */\n    delete(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.delete(path, \"users\", id, undefined, options);\n            return { body: response.result, headers: response.headers, ref: this, user: this };\n        });\n    }\n}\nexports.User = User;\n//# sourceMappingURL=User.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L1VzZXIvVXNlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9jbGllbnQvVXNlci9Vc2VyLmpzP2ZkNmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgY29tbW9uXzEgPSByZXF1aXJlKFwiLi4vLi4vY29tbW9uXCIpO1xuY29uc3QgUGVybWlzc2lvbl8xID0gcmVxdWlyZShcIi4uL1Blcm1pc3Npb25cIik7XG4vKipcbiAqIFVzZWQgdG8gcmVhZCwgcmVwbGFjZSwgYW5kIGRlbGV0ZSBVc2Vycy5cbiAqXG4gKiBBZGRpdGlvbmFsbHksIHlvdSBjYW4gYWNjZXNzIHRoZSBwZXJtaXNzaW9ucyBmb3IgYSBnaXZlbiB1c2VyIHZpYSBgdXNlci5wZXJtaXNzaW9uYCBhbmQgYHVzZXIucGVybWlzc2lvbnNgLlxuICpcbiAqIEBzZWUge0BsaW5rIFVzZXJzfSB0byBjcmVhdGUsIHVwc2VydCwgcXVlcnksIG9yIHJlYWQgYWxsLlxuICovXG5jbGFzcyBVc2VyIHtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQHBhcmFtIGRhdGFiYXNlIFRoZSBwYXJlbnQge0BsaW5rIERhdGFiYXNlfS5cbiAgICAgKiBAcGFyYW0gaWRcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihkYXRhYmFzZSwgaWQsIGNsaWVudENvbnRleHQpIHtcbiAgICAgICAgdGhpcy5kYXRhYmFzZSA9IGRhdGFiYXNlO1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMuY2xpZW50Q29udGV4dCA9IGNsaWVudENvbnRleHQ7XG4gICAgICAgIHRoaXMucGVybWlzc2lvbnMgPSBuZXcgUGVybWlzc2lvbl8xLlBlcm1pc3Npb25zKHRoaXMsIHRoaXMuY2xpZW50Q29udGV4dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSByZWZlcmVuY2UgVVJMIHRvIHRoZSByZXNvdXJjZS4gVXNlZCBmb3IgbGlua2luZyBpbiBQZXJtaXNzaW9ucy5cbiAgICAgKi9cbiAgICBnZXQgdXJsKCkge1xuICAgICAgICByZXR1cm4gY29tbW9uXzEuVXJpRmFjdG9yeS5jcmVhdGVVc2VyVXJpKHRoaXMuZGF0YWJhc2UuaWQsIHRoaXMuaWQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBPcGVyYXRpb25zIHRvIHJlYWQsIHJlcGxhY2UsIG9yIGRlbGV0ZSBhIHNwZWNpZmljIFBlcm1pc3Npb24gYnkgaWQuXG4gICAgICpcbiAgICAgKiBTZWUgYGNsaWVudC5wZXJtaXNzaW9uc2AgZm9yIGNyZWF0aW5nLCB1cHNlcnRpbmcsIHF1ZXJ5aW5nLCBvciByZWFkaW5nIGFsbCBvcGVyYXRpb25zLlxuICAgICAqIEBwYXJhbSBpZFxuICAgICAqL1xuICAgIHBlcm1pc3Npb24oaWQpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQZXJtaXNzaW9uXzEuUGVybWlzc2lvbih0aGlzLCBpZCwgdGhpcy5jbGllbnRDb250ZXh0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZCB0aGUge0BsaW5rIFVzZXJEZWZpbml0aW9ufSBmb3IgdGhlIGdpdmVuIHtAbGluayBVc2VyfS5cbiAgICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgICAqL1xuICAgIHJlYWQob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRJZEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LnJlYWQocGF0aCwgXCJ1c2Vyc1wiLCBpZCwgdW5kZWZpbmVkLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHJldHVybiB7IGJvZHk6IHJlc3BvbnNlLnJlc3VsdCwgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVycywgcmVmOiB0aGlzLCB1c2VyOiB0aGlzIH07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXBsYWNlIHRoZSBnaXZlbiB7QGxpbmsgVXNlcn0ncyBkZWZpbml0aW9uIHdpdGggdGhlIHNwZWNpZmllZCB7QGxpbmsgVXNlckRlZmluaXRpb259LlxuICAgICAqIEBwYXJhbSBib2R5IFRoZSBzcGVjaWZpZWQge0BsaW5rIFVzZXJEZWZpbml0aW9ufSB0byByZXBsYWNlIHRoZSBkZWZpbml0aW9uLlxuICAgICAqIEBwYXJhbSBvcHRpb25zXG4gICAgICovXG4gICAgcmVwbGFjZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGVyciA9IHt9O1xuICAgICAgICAgICAgaWYgKCFjb21tb25fMS5IZWxwZXIuaXNSZXNvdXJjZVZhbGlkKGJvZHksIGVycikpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRJZEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LnJlcGxhY2UoYm9keSwgcGF0aCwgXCJ1c2Vyc1wiLCBpZCwgdW5kZWZpbmVkLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHJldHVybiB7IGJvZHk6IHJlc3BvbnNlLnJlc3VsdCwgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVycywgcmVmOiB0aGlzLCB1c2VyOiB0aGlzIH07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWxldGUgdGhlIGdpdmVuIHtAbGluayBVc2VyfS5cbiAgICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgICAqL1xuICAgIGRlbGV0ZShvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBjb21tb25fMS5IZWxwZXIuZ2V0UGF0aEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gY29tbW9uXzEuSGVscGVyLmdldElkRnJvbUxpbmsodGhpcy51cmwpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCB0aGlzLmNsaWVudENvbnRleHQuZGVsZXRlKHBhdGgsIFwidXNlcnNcIiwgaWQsIHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4geyBib2R5OiByZXNwb25zZS5yZXN1bHQsIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsIHJlZjogdGhpcywgdXNlcjogdGhpcyB9O1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLlVzZXIgPSBVc2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VXNlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/client/User/User.js\n");

/***/ }),

/***/ "./lib/client/User/Users.js":
/*!**********************************!*\
  !*** ./lib/client/User/Users.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\nconst queryIterator_1 = __webpack_require__(/*! ../../queryIterator */ \"./lib/queryIterator.js\");\nconst User_1 = __webpack_require__(/*! ./User */ \"./lib/client/User/User.js\");\n/**\n * Used to create, upsert, query, and read all users.\n *\n * @see {@link User} to read, replace, or delete a specific User by id.\n */\nclass Users {\n    /**\n     * @hidden\n     * @param database The parent {@link Database}.\n     */\n    constructor(database, clientContext) {\n        this.database = database;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = common_1.Helper.getPathFromLink(this.database.url, \"users\");\n        const id = common_1.Helper.getIdFromLink(this.database.url);\n        return new queryIterator_1.QueryIterator(this.clientContext, query, options, innerOptions => {\n            return this.clientContext.queryFeed(path, \"users\", id, result => result.Users, query, innerOptions);\n        });\n    }\n    /**\n     * Read all users.\n     * @param options\n     * @example Read all users to array.\n     * ```typescript\n     * const {body: usersList} = await database.users.readAll().toArray();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n    /**\n     * Create a database user with the specified {@link UserDefinition}.\n     * @param body The specified {@link UserDefinition}.\n     * @param options\n     */\n    create(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.database.url, \"users\");\n            const id = common_1.Helper.getIdFromLink(this.database.url);\n            const response = yield this.clientContext.create(body, path, \"users\", id, undefined, options);\n            const ref = new User_1.User(this.database, response.result.id, this.clientContext);\n            return { body: response.result, headers: response.headers, ref, user: ref };\n        });\n    }\n    /**\n     * Upsert a database user with a specified {@link UserDefinition}.\n     * @param body The specified {@link UserDefinition}.\n     * @param options\n     */\n    upsert(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.database.url, \"users\");\n            const id = common_1.Helper.getIdFromLink(this.database.url);\n            const response = yield this.clientContext.upsert(body, path, \"users\", id, undefined, options);\n            const ref = new User_1.User(this.database, response.result.id, this.clientContext);\n            return { body: response.result, headers: response.headers, ref, user: ref };\n        });\n    }\n}\nexports.Users = Users;\n//# sourceMappingURL=Users.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L1VzZXIvVXNlcnMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvY2xpZW50L1VzZXIvVXNlcnMuanM/NzUzNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBjb21tb25fMSA9IHJlcXVpcmUoXCIuLi8uLi9jb21tb25cIik7XG5jb25zdCBxdWVyeUl0ZXJhdG9yXzEgPSByZXF1aXJlKFwiLi4vLi4vcXVlcnlJdGVyYXRvclwiKTtcbmNvbnN0IFVzZXJfMSA9IHJlcXVpcmUoXCIuL1VzZXJcIik7XG4vKipcbiAqIFVzZWQgdG8gY3JlYXRlLCB1cHNlcnQsIHF1ZXJ5LCBhbmQgcmVhZCBhbGwgdXNlcnMuXG4gKlxuICogQHNlZSB7QGxpbmsgVXNlcn0gdG8gcmVhZCwgcmVwbGFjZSwgb3IgZGVsZXRlIGEgc3BlY2lmaWMgVXNlciBieSBpZC5cbiAqL1xuY2xhc3MgVXNlcnMge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAcGFyYW0gZGF0YWJhc2UgVGhlIHBhcmVudCB7QGxpbmsgRGF0YWJhc2V9LlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGRhdGFiYXNlLCBjbGllbnRDb250ZXh0KSB7XG4gICAgICAgIHRoaXMuZGF0YWJhc2UgPSBkYXRhYmFzZTtcbiAgICAgICAgdGhpcy5jbGllbnRDb250ZXh0ID0gY2xpZW50Q29udGV4dDtcbiAgICB9XG4gICAgcXVlcnkocXVlcnksIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgcGF0aCA9IGNvbW1vbl8xLkhlbHBlci5nZXRQYXRoRnJvbUxpbmsodGhpcy5kYXRhYmFzZS51cmwsIFwidXNlcnNcIik7XG4gICAgICAgIGNvbnN0IGlkID0gY29tbW9uXzEuSGVscGVyLmdldElkRnJvbUxpbmsodGhpcy5kYXRhYmFzZS51cmwpO1xuICAgICAgICByZXR1cm4gbmV3IHF1ZXJ5SXRlcmF0b3JfMS5RdWVyeUl0ZXJhdG9yKHRoaXMuY2xpZW50Q29udGV4dCwgcXVlcnksIG9wdGlvbnMsIGlubmVyT3B0aW9ucyA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jbGllbnRDb250ZXh0LnF1ZXJ5RmVlZChwYXRoLCBcInVzZXJzXCIsIGlkLCByZXN1bHQgPT4gcmVzdWx0LlVzZXJzLCBxdWVyeSwgaW5uZXJPcHRpb25zKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlYWQgYWxsIHVzZXJzLlxuICAgICAqIEBwYXJhbSBvcHRpb25zXG4gICAgICogQGV4YW1wbGUgUmVhZCBhbGwgdXNlcnMgdG8gYXJyYXkuXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGNvbnN0IHtib2R5OiB1c2Vyc0xpc3R9ID0gYXdhaXQgZGF0YWJhc2UudXNlcnMucmVhZEFsbCgpLnRvQXJyYXkoKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICByZWFkQWxsKG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucXVlcnkodW5kZWZpbmVkLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgZGF0YWJhc2UgdXNlciB3aXRoIHRoZSBzcGVjaWZpZWQge0BsaW5rIFVzZXJEZWZpbml0aW9ufS5cbiAgICAgKiBAcGFyYW0gYm9keSBUaGUgc3BlY2lmaWVkIHtAbGluayBVc2VyRGVmaW5pdGlvbn0uXG4gICAgICogQHBhcmFtIG9wdGlvbnNcbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBlcnIgPSB7fTtcbiAgICAgICAgICAgIGlmICghY29tbW9uXzEuSGVscGVyLmlzUmVzb3VyY2VWYWxpZChib2R5LCBlcnIpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcGF0aCA9IGNvbW1vbl8xLkhlbHBlci5nZXRQYXRoRnJvbUxpbmsodGhpcy5kYXRhYmFzZS51cmwsIFwidXNlcnNcIik7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRJZEZyb21MaW5rKHRoaXMuZGF0YWJhc2UudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LmNyZWF0ZShib2R5LCBwYXRoLCBcInVzZXJzXCIsIGlkLCB1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgY29uc3QgcmVmID0gbmV3IFVzZXJfMS5Vc2VyKHRoaXMuZGF0YWJhc2UsIHJlc3BvbnNlLnJlc3VsdC5pZCwgdGhpcy5jbGllbnRDb250ZXh0KTtcbiAgICAgICAgICAgIHJldHVybiB7IGJvZHk6IHJlc3BvbnNlLnJlc3VsdCwgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVycywgcmVmLCB1c2VyOiByZWYgfTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVwc2VydCBhIGRhdGFiYXNlIHVzZXIgd2l0aCBhIHNwZWNpZmllZCB7QGxpbmsgVXNlckRlZmluaXRpb259LlxuICAgICAqIEBwYXJhbSBib2R5IFRoZSBzcGVjaWZpZWQge0BsaW5rIFVzZXJEZWZpbml0aW9ufS5cbiAgICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgICAqL1xuICAgIHVwc2VydChib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGVyciA9IHt9O1xuICAgICAgICAgICAgaWYgKCFjb21tb25fMS5IZWxwZXIuaXNSZXNvdXJjZVZhbGlkKGJvZHksIGVycikpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLmRhdGFiYXNlLnVybCwgXCJ1c2Vyc1wiKTtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gY29tbW9uXzEuSGVscGVyLmdldElkRnJvbUxpbmsodGhpcy5kYXRhYmFzZS51cmwpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCB0aGlzLmNsaWVudENvbnRleHQudXBzZXJ0KGJvZHksIHBhdGgsIFwidXNlcnNcIiwgaWQsIHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgICAgICAgICBjb25zdCByZWYgPSBuZXcgVXNlcl8xLlVzZXIodGhpcy5kYXRhYmFzZSwgcmVzcG9uc2UucmVzdWx0LmlkLCB0aGlzLmNsaWVudENvbnRleHQpO1xuICAgICAgICAgICAgcmV0dXJuIHsgYm9keTogcmVzcG9uc2UucmVzdWx0LCBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLCByZWYsIHVzZXI6IHJlZiB9O1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLlVzZXJzID0gVXNlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Vc2Vycy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/client/User/Users.js\n");

/***/ }),

/***/ "./lib/client/User/index.js":
/*!**********************************!*\
  !*** ./lib/client/User/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar User_1 = __webpack_require__(/*! ./User */ \"./lib/client/User/User.js\");\nexports.User = User_1.User;\nvar Users_1 = __webpack_require__(/*! ./Users */ \"./lib/client/User/Users.js\");\nexports.Users = Users_1.Users;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L1VzZXIvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvY2xpZW50L1VzZXIvaW5kZXguanM/YjE3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBVc2VyXzEgPSByZXF1aXJlKFwiLi9Vc2VyXCIpO1xuZXhwb3J0cy5Vc2VyID0gVXNlcl8xLlVzZXI7XG52YXIgVXNlcnNfMSA9IHJlcXVpcmUoXCIuL1VzZXJzXCIpO1xuZXhwb3J0cy5Vc2VycyA9IFVzZXJzXzEuVXNlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/client/User/index.js\n");

/***/ }),

/***/ "./lib/client/UserDefinedFunction/UserDefinedFunction.js":
/*!***************************************************************!*\
  !*** ./lib/client/UserDefinedFunction/UserDefinedFunction.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\n/**\n * Used to read, replace, or delete a specified User Definied Function by id.\n *\n * @see {@link UserDefinedFunction} to create, upsert, query, read all User Defined Functions.\n */\nclass UserDefinedFunction {\n    /**\n     * @hidden\n     * @param container The parent {@link Container}.\n     * @param id The id of the given {@link UserDefinedFunction}.\n     */\n    constructor(container, id, clientContext) {\n        this.container = container;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return common_1.UriFactory.createUserDefinedFunctionUri(this.container.database.id, this.container.id, this.id);\n    }\n    /**\n     * Read the {@link UserDefinedFunctionDefinition} for the given {@link UserDefinedFunction}.\n     * @param options\n     */\n    read(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.read(path, \"udfs\", id, undefined, options);\n            return { body: response.result, headers: response.headers, ref: this, userDefinedFunction: this, udf: this };\n        });\n    }\n    /**\n     * Replace the given {@link UserDefinedFunction} with the specified {@link UserDefinedFunctionDefinition}.\n     * @param body The specified {@link UserDefinedFunctionDefinition}.\n     * @param options\n     */\n    replace(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.replace(body, path, \"udfs\", id, undefined, options);\n            return { body: response.result, headers: response.headers, ref: this, userDefinedFunction: this, udf: this };\n        });\n    }\n    /**\n     * Delete the given {@link UserDefined}.\n     * @param options\n     */\n    delete(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.url);\n            const id = common_1.Helper.getIdFromLink(this.url);\n            const response = yield this.clientContext.delete(path, \"udfs\", id, undefined, options);\n            return { body: response.result, headers: response.headers, ref: this, userDefinedFunction: this, udf: this };\n        });\n    }\n}\nexports.UserDefinedFunction = UserDefinedFunction;\n//# sourceMappingURL=UserDefinedFunction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L1VzZXJEZWZpbmVkRnVuY3Rpb24vVXNlckRlZmluZWRGdW5jdGlvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9jbGllbnQvVXNlckRlZmluZWRGdW5jdGlvbi9Vc2VyRGVmaW5lZEZ1bmN0aW9uLmpzPzRjYjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgY29tbW9uXzEgPSByZXF1aXJlKFwiLi4vLi4vY29tbW9uXCIpO1xuLyoqXG4gKiBVc2VkIHRvIHJlYWQsIHJlcGxhY2UsIG9yIGRlbGV0ZSBhIHNwZWNpZmllZCBVc2VyIERlZmluaWVkIEZ1bmN0aW9uIGJ5IGlkLlxuICpcbiAqIEBzZWUge0BsaW5rIFVzZXJEZWZpbmVkRnVuY3Rpb259IHRvIGNyZWF0ZSwgdXBzZXJ0LCBxdWVyeSwgcmVhZCBhbGwgVXNlciBEZWZpbmVkIEZ1bmN0aW9ucy5cbiAqL1xuY2xhc3MgVXNlckRlZmluZWRGdW5jdGlvbiB7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIEBwYXJhbSBjb250YWluZXIgVGhlIHBhcmVudCB7QGxpbmsgQ29udGFpbmVyfS5cbiAgICAgKiBAcGFyYW0gaWQgVGhlIGlkIG9mIHRoZSBnaXZlbiB7QGxpbmsgVXNlckRlZmluZWRGdW5jdGlvbn0uXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29udGFpbmVyLCBpZCwgY2xpZW50Q29udGV4dCkge1xuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICB0aGlzLmNsaWVudENvbnRleHQgPSBjbGllbnRDb250ZXh0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgcmVmZXJlbmNlIFVSTCB0byB0aGUgcmVzb3VyY2UuIFVzZWQgZm9yIGxpbmtpbmcgaW4gUGVybWlzc2lvbnMuXG4gICAgICovXG4gICAgZ2V0IHVybCgpIHtcbiAgICAgICAgcmV0dXJuIGNvbW1vbl8xLlVyaUZhY3RvcnkuY3JlYXRlVXNlckRlZmluZWRGdW5jdGlvblVyaSh0aGlzLmNvbnRhaW5lci5kYXRhYmFzZS5pZCwgdGhpcy5jb250YWluZXIuaWQsIHRoaXMuaWQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWFkIHRoZSB7QGxpbmsgVXNlckRlZmluZWRGdW5jdGlvbkRlZmluaXRpb259IGZvciB0aGUgZ2l2ZW4ge0BsaW5rIFVzZXJEZWZpbmVkRnVuY3Rpb259LlxuICAgICAqIEBwYXJhbSBvcHRpb25zXG4gICAgICovXG4gICAgcmVhZChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBjb21tb25fMS5IZWxwZXIuZ2V0UGF0aEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gY29tbW9uXzEuSGVscGVyLmdldElkRnJvbUxpbmsodGhpcy51cmwpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCB0aGlzLmNsaWVudENvbnRleHQucmVhZChwYXRoLCBcInVkZnNcIiwgaWQsIHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4geyBib2R5OiByZXNwb25zZS5yZXN1bHQsIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsIHJlZjogdGhpcywgdXNlckRlZmluZWRGdW5jdGlvbjogdGhpcywgdWRmOiB0aGlzIH07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXBsYWNlIHRoZSBnaXZlbiB7QGxpbmsgVXNlckRlZmluZWRGdW5jdGlvbn0gd2l0aCB0aGUgc3BlY2lmaWVkIHtAbGluayBVc2VyRGVmaW5lZEZ1bmN0aW9uRGVmaW5pdGlvbn0uXG4gICAgICogQHBhcmFtIGJvZHkgVGhlIHNwZWNpZmllZCB7QGxpbmsgVXNlckRlZmluZWRGdW5jdGlvbkRlZmluaXRpb259LlxuICAgICAqIEBwYXJhbSBvcHRpb25zXG4gICAgICovXG4gICAgcmVwbGFjZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmIChib2R5LmJvZHkpIHtcbiAgICAgICAgICAgICAgICBib2R5LmJvZHkgPSBib2R5LmJvZHkudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGVyciA9IHt9O1xuICAgICAgICAgICAgaWYgKCFjb21tb25fMS5IZWxwZXIuaXNSZXNvdXJjZVZhbGlkKGJvZHksIGVycikpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRJZEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5jbGllbnRDb250ZXh0LnJlcGxhY2UoYm9keSwgcGF0aCwgXCJ1ZGZzXCIsIGlkLCB1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgcmV0dXJuIHsgYm9keTogcmVzcG9uc2UucmVzdWx0LCBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLCByZWY6IHRoaXMsIHVzZXJEZWZpbmVkRnVuY3Rpb246IHRoaXMsIHVkZjogdGhpcyB9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlIHRoZSBnaXZlbiB7QGxpbmsgVXNlckRlZmluZWR9LlxuICAgICAqIEBwYXJhbSBvcHRpb25zXG4gICAgICovXG4gICAgZGVsZXRlKG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgcGF0aCA9IGNvbW1vbl8xLkhlbHBlci5nZXRQYXRoRnJvbUxpbmsodGhpcy51cmwpO1xuICAgICAgICAgICAgY29uc3QgaWQgPSBjb21tb25fMS5IZWxwZXIuZ2V0SWRGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIHRoaXMuY2xpZW50Q29udGV4dC5kZWxldGUocGF0aCwgXCJ1ZGZzXCIsIGlkLCB1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgcmV0dXJuIHsgYm9keTogcmVzcG9uc2UucmVzdWx0LCBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLCByZWY6IHRoaXMsIHVzZXJEZWZpbmVkRnVuY3Rpb246IHRoaXMsIHVkZjogdGhpcyB9O1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLlVzZXJEZWZpbmVkRnVuY3Rpb24gPSBVc2VyRGVmaW5lZEZ1bmN0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VXNlckRlZmluZWRGdW5jdGlvbi5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/client/UserDefinedFunction/UserDefinedFunction.js\n");

/***/ }),

/***/ "./lib/client/UserDefinedFunction/UserDefinedFunctions.js":
/*!****************************************************************!*\
  !*** ./lib/client/UserDefinedFunction/UserDefinedFunctions.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../../common */ \"./lib/common/index.js\");\nconst queryIterator_1 = __webpack_require__(/*! ../../queryIterator */ \"./lib/queryIterator.js\");\nconst UserDefinedFunction_1 = __webpack_require__(/*! ./UserDefinedFunction */ \"./lib/client/UserDefinedFunction/UserDefinedFunction.js\");\n/**\n * Used to create, upsert, query, or read all User Defined Functions.\n *\n * @see {@link UserDefinedFunction} to read, replace, or delete a given User Defined Function by id.\n */\nclass UserDefinedFunctions {\n    /**\n     * @hidden\n     * @param container The parent {@link Container}.\n     */\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = common_1.Helper.getPathFromLink(this.container.url, \"udfs\");\n        const id = common_1.Helper.getIdFromLink(this.container.url);\n        return new queryIterator_1.QueryIterator(this.clientContext, query, options, innerOptions => {\n            return this.clientContext.queryFeed(path, \"udfs\", id, result => result.UserDefinedFunctions, query, innerOptions);\n        });\n    }\n    /**\n     * Read all User Defined Functions.\n     * @param options\n     * @example Read all User Defined Functions to array.\n     * ```typescript\n     * const {body: udfList} = await container.userDefinedFunctions.readAll().toArray();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n    /**\n     * Create a UserDefinedFunction.\n     *\n     * Azure Cosmos DB supports JavaScript UDFs which can be used inside queries, stored procedures and triggers.\n     *\n     * For additional details, refer to the server-side JavaScript API documentation.\n     *\n     */\n    create(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.container.url, \"udfs\");\n            const id = common_1.Helper.getIdFromLink(this.container.url);\n            const response = yield this.clientContext.create(body, path, \"udfs\", id, undefined, options);\n            const ref = new UserDefinedFunction_1.UserDefinedFunction(this.container, response.result.id, this.clientContext);\n            return { body: response.result, headers: response.headers, ref, userDefinedFunction: ref, udf: ref };\n        });\n    }\n    /**\n     * Upsert a UserDefinedFunction.\n     *\n     * Azure Cosmos DB supports JavaScript UDFs which can be used inside queries, stored procedures and triggers.\n     *\n     * For additional details, refer to the server-side JavaScript API documentation.\n     *\n     */\n    upsert(body, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!common_1.Helper.isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = common_1.Helper.getPathFromLink(this.container.url, \"udfs\");\n            const id = common_1.Helper.getIdFromLink(this.container.url);\n            const response = yield this.clientContext.upsert(body, path, \"udfs\", id, undefined, options);\n            const ref = new UserDefinedFunction_1.UserDefinedFunction(this.container, response.result.id, this.clientContext);\n            return { body: response.result, headers: response.headers, ref, userDefinedFunction: ref, udf: ref };\n        });\n    }\n}\nexports.UserDefinedFunctions = UserDefinedFunctions;\n//# sourceMappingURL=UserDefinedFunctions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L1VzZXJEZWZpbmVkRnVuY3Rpb24vVXNlckRlZmluZWRGdW5jdGlvbnMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvY2xpZW50L1VzZXJEZWZpbmVkRnVuY3Rpb24vVXNlckRlZmluZWRGdW5jdGlvbnMuanM/ZGMwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBjb21tb25fMSA9IHJlcXVpcmUoXCIuLi8uLi9jb21tb25cIik7XG5jb25zdCBxdWVyeUl0ZXJhdG9yXzEgPSByZXF1aXJlKFwiLi4vLi4vcXVlcnlJdGVyYXRvclwiKTtcbmNvbnN0IFVzZXJEZWZpbmVkRnVuY3Rpb25fMSA9IHJlcXVpcmUoXCIuL1VzZXJEZWZpbmVkRnVuY3Rpb25cIik7XG4vKipcbiAqIFVzZWQgdG8gY3JlYXRlLCB1cHNlcnQsIHF1ZXJ5LCBvciByZWFkIGFsbCBVc2VyIERlZmluZWQgRnVuY3Rpb25zLlxuICpcbiAqIEBzZWUge0BsaW5rIFVzZXJEZWZpbmVkRnVuY3Rpb259IHRvIHJlYWQsIHJlcGxhY2UsIG9yIGRlbGV0ZSBhIGdpdmVuIFVzZXIgRGVmaW5lZCBGdW5jdGlvbiBieSBpZC5cbiAqL1xuY2xhc3MgVXNlckRlZmluZWRGdW5jdGlvbnMge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAcGFyYW0gY29udGFpbmVyIFRoZSBwYXJlbnQge0BsaW5rIENvbnRhaW5lcn0uXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29udGFpbmVyLCBjbGllbnRDb250ZXh0KSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgICAgICB0aGlzLmNsaWVudENvbnRleHQgPSBjbGllbnRDb250ZXh0O1xuICAgIH1cbiAgICBxdWVyeShxdWVyeSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBwYXRoID0gY29tbW9uXzEuSGVscGVyLmdldFBhdGhGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwsIFwidWRmc1wiKTtcbiAgICAgICAgY29uc3QgaWQgPSBjb21tb25fMS5IZWxwZXIuZ2V0SWRGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwpO1xuICAgICAgICByZXR1cm4gbmV3IHF1ZXJ5SXRlcmF0b3JfMS5RdWVyeUl0ZXJhdG9yKHRoaXMuY2xpZW50Q29udGV4dCwgcXVlcnksIG9wdGlvbnMsIGlubmVyT3B0aW9ucyA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jbGllbnRDb250ZXh0LnF1ZXJ5RmVlZChwYXRoLCBcInVkZnNcIiwgaWQsIHJlc3VsdCA9PiByZXN1bHQuVXNlckRlZmluZWRGdW5jdGlvbnMsIHF1ZXJ5LCBpbm5lck9wdGlvbnMpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZCBhbGwgVXNlciBEZWZpbmVkIEZ1bmN0aW9ucy5cbiAgICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgICAqIEBleGFtcGxlIFJlYWQgYWxsIFVzZXIgRGVmaW5lZCBGdW5jdGlvbnMgdG8gYXJyYXkuXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGNvbnN0IHtib2R5OiB1ZGZMaXN0fSA9IGF3YWl0IGNvbnRhaW5lci51c2VyRGVmaW5lZEZ1bmN0aW9ucy5yZWFkQWxsKCkudG9BcnJheSgpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHJlYWRBbGwob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5xdWVyeSh1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBVc2VyRGVmaW5lZEZ1bmN0aW9uLlxuICAgICAqXG4gICAgICogQXp1cmUgQ29zbW9zIERCIHN1cHBvcnRzIEphdmFTY3JpcHQgVURGcyB3aGljaCBjYW4gYmUgdXNlZCBpbnNpZGUgcXVlcmllcywgc3RvcmVkIHByb2NlZHVyZXMgYW5kIHRyaWdnZXJzLlxuICAgICAqXG4gICAgICogRm9yIGFkZGl0aW9uYWwgZGV0YWlscywgcmVmZXIgdG8gdGhlIHNlcnZlci1zaWRlIEphdmFTY3JpcHQgQVBJIGRvY3VtZW50YXRpb24uXG4gICAgICpcbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBpZiAoYm9keS5ib2R5KSB7XG4gICAgICAgICAgICAgICAgYm9keS5ib2R5ID0gYm9keS5ib2R5LnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBlcnIgPSB7fTtcbiAgICAgICAgICAgIGlmICghY29tbW9uXzEuSGVscGVyLmlzUmVzb3VyY2VWYWxpZChib2R5LCBlcnIpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcGF0aCA9IGNvbW1vbl8xLkhlbHBlci5nZXRQYXRoRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsLCBcInVkZnNcIik7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGNvbW1vbl8xLkhlbHBlci5nZXRJZEZyb21MaW5rKHRoaXMuY29udGFpbmVyLnVybCk7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIHRoaXMuY2xpZW50Q29udGV4dC5jcmVhdGUoYm9keSwgcGF0aCwgXCJ1ZGZzXCIsIGlkLCB1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgY29uc3QgcmVmID0gbmV3IFVzZXJEZWZpbmVkRnVuY3Rpb25fMS5Vc2VyRGVmaW5lZEZ1bmN0aW9uKHRoaXMuY29udGFpbmVyLCByZXNwb25zZS5yZXN1bHQuaWQsIHRoaXMuY2xpZW50Q29udGV4dCk7XG4gICAgICAgICAgICByZXR1cm4geyBib2R5OiByZXNwb25zZS5yZXN1bHQsIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsIHJlZiwgdXNlckRlZmluZWRGdW5jdGlvbjogcmVmLCB1ZGY6IHJlZiB9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXBzZXJ0IGEgVXNlckRlZmluZWRGdW5jdGlvbi5cbiAgICAgKlxuICAgICAqIEF6dXJlIENvc21vcyBEQiBzdXBwb3J0cyBKYXZhU2NyaXB0IFVERnMgd2hpY2ggY2FuIGJlIHVzZWQgaW5zaWRlIHF1ZXJpZXMsIHN0b3JlZCBwcm9jZWR1cmVzIGFuZCB0cmlnZ2Vycy5cbiAgICAgKlxuICAgICAqIEZvciBhZGRpdGlvbmFsIGRldGFpbHMsIHJlZmVyIHRvIHRoZSBzZXJ2ZXItc2lkZSBKYXZhU2NyaXB0IEFQSSBkb2N1bWVudGF0aW9uLlxuICAgICAqXG4gICAgICovXG4gICAgdXBzZXJ0KGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKGJvZHkuYm9keSkge1xuICAgICAgICAgICAgICAgIGJvZHkuYm9keSA9IGJvZHkuYm9keS50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZXJyID0ge307XG4gICAgICAgICAgICBpZiAoIWNvbW1vbl8xLkhlbHBlci5pc1Jlc291cmNlVmFsaWQoYm9keSwgZXJyKSkge1xuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBjb21tb25fMS5IZWxwZXIuZ2V0UGF0aEZyb21MaW5rKHRoaXMuY29udGFpbmVyLnVybCwgXCJ1ZGZzXCIpO1xuICAgICAgICAgICAgY29uc3QgaWQgPSBjb21tb25fMS5IZWxwZXIuZ2V0SWRGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCB0aGlzLmNsaWVudENvbnRleHQudXBzZXJ0KGJvZHksIHBhdGgsIFwidWRmc1wiLCBpZCwgdW5kZWZpbmVkLCBvcHRpb25zKTtcbiAgICAgICAgICAgIGNvbnN0IHJlZiA9IG5ldyBVc2VyRGVmaW5lZEZ1bmN0aW9uXzEuVXNlckRlZmluZWRGdW5jdGlvbih0aGlzLmNvbnRhaW5lciwgcmVzcG9uc2UucmVzdWx0LmlkLCB0aGlzLmNsaWVudENvbnRleHQpO1xuICAgICAgICAgICAgcmV0dXJuIHsgYm9keTogcmVzcG9uc2UucmVzdWx0LCBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLCByZWYsIHVzZXJEZWZpbmVkRnVuY3Rpb246IHJlZiwgdWRmOiByZWYgfTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Vc2VyRGVmaW5lZEZ1bmN0aW9ucyA9IFVzZXJEZWZpbmVkRnVuY3Rpb25zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VXNlckRlZmluZWRGdW5jdGlvbnMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/client/UserDefinedFunction/UserDefinedFunctions.js\n");

/***/ }),

/***/ "./lib/client/UserDefinedFunction/index.js":
/*!*************************************************!*\
  !*** ./lib/client/UserDefinedFunction/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UserDefinedFunction_1 = __webpack_require__(/*! ./UserDefinedFunction */ \"./lib/client/UserDefinedFunction/UserDefinedFunction.js\");\nexports.UserDefinedFunction = UserDefinedFunction_1.UserDefinedFunction;\nvar UserDefinedFunctions_1 = __webpack_require__(/*! ./UserDefinedFunctions */ \"./lib/client/UserDefinedFunction/UserDefinedFunctions.js\");\nexports.UserDefinedFunctions = UserDefinedFunctions_1.UserDefinedFunctions;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L1VzZXJEZWZpbmVkRnVuY3Rpb24vaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvY2xpZW50L1VzZXJEZWZpbmVkRnVuY3Rpb24vaW5kZXguanM/MWYzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBVc2VyRGVmaW5lZEZ1bmN0aW9uXzEgPSByZXF1aXJlKFwiLi9Vc2VyRGVmaW5lZEZ1bmN0aW9uXCIpO1xuZXhwb3J0cy5Vc2VyRGVmaW5lZEZ1bmN0aW9uID0gVXNlckRlZmluZWRGdW5jdGlvbl8xLlVzZXJEZWZpbmVkRnVuY3Rpb247XG52YXIgVXNlckRlZmluZWRGdW5jdGlvbnNfMSA9IHJlcXVpcmUoXCIuL1VzZXJEZWZpbmVkRnVuY3Rpb25zXCIpO1xuZXhwb3J0cy5Vc2VyRGVmaW5lZEZ1bmN0aW9ucyA9IFVzZXJEZWZpbmVkRnVuY3Rpb25zXzEuVXNlckRlZmluZWRGdW5jdGlvbnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/client/UserDefinedFunction/index.js\n");

/***/ }),

/***/ "./lib/client/index.js":
/*!*****************************!*\
  !*** ./lib/client/index.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./Conflict */ \"./lib/client/Conflict/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./Container */ \"./lib/client/Container/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./Database */ \"./lib/client/Database/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./Item */ \"./lib/client/Item/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./Offer */ \"./lib/client/Offer/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./Permission */ \"./lib/client/Permission/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./StoredProcedure */ \"./lib/client/StoredProcedure/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./Trigger */ \"./lib/client/Trigger/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./User */ \"./lib/client/User/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./UserDefinedFunction */ \"./lib/client/UserDefinedFunction/index.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50L2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2NsaWVudC9pbmRleC5qcz8zZWNiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0NvbmZsaWN0XCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0NvbnRhaW5lclwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9EYXRhYmFzZVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9JdGVtXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL09mZmVyXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1Blcm1pc3Npb25cIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vU3RvcmVkUHJvY2VkdXJlXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1RyaWdnZXJcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vVXNlclwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Vc2VyRGVmaW5lZEZ1bmN0aW9uXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/client/index.js\n");

/***/ }),

/***/ "./lib/common/constants.js":
/*!*********************************!*\
  !*** ./lib/common/constants.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Constants = {\n    MediaTypes: {\n        Any: \"*/*\",\n        ImageJpeg: \"image/jpeg\",\n        ImagePng: \"image/png\",\n        Javascript: \"application/x-javascript\",\n        Json: \"application/json\",\n        OctetStream: \"application/octet-stream\",\n        QueryJson: \"application/query+json\",\n        SQL: \"application/sql\",\n        TextHtml: \"text/html\",\n        TextPlain: \"text/plain\",\n        Xml: \"application/xml\"\n    },\n    HttpMethods: {\n        Get: \"GET\",\n        Post: \"POST\",\n        Put: \"PUT\",\n        Delete: \"DELETE\",\n        Head: \"HEAD\",\n        Options: \"OPTIONS\"\n    },\n    HttpHeaders: {\n        Authorization: \"authorization\",\n        ETag: \"etag\",\n        MethodOverride: \"X-HTTP-Method\",\n        Slug: \"Slug\",\n        ContentType: \"Content-Type\",\n        LastModified: \"Last-Modified\",\n        ContentEncoding: \"Content-Encoding\",\n        CharacterSet: \"CharacterSet\",\n        UserAgent: \"User-Agent\",\n        IfModifiedSince: \"If-Modified-Since\",\n        IfMatch: \"If-Match\",\n        IfNoneMatch: \"If-None-Match\",\n        ContentLength: \"Content-Length\",\n        AcceptEncoding: \"Accept-Encoding\",\n        KeepAlive: \"Keep-Alive\",\n        CacheControl: \"Cache-Control\",\n        TransferEncoding: \"Transfer-Encoding\",\n        ContentLanguage: \"Content-Language\",\n        ContentLocation: \"Content-Location\",\n        ContentMd5: \"Content-Md5\",\n        ContentRange: \"Content-Range\",\n        Accept: \"Accept\",\n        AcceptCharset: \"Accept-Charset\",\n        AcceptLanguage: \"Accept-Language\",\n        IfRange: \"If-Range\",\n        IfUnmodifiedSince: \"If-Unmodified-Since\",\n        MaxForwards: \"Max-Forwards\",\n        ProxyAuthorization: \"Proxy-Authorization\",\n        AcceptRanges: \"Accept-Ranges\",\n        ProxyAuthenticate: \"Proxy-Authenticate\",\n        RetryAfter: \"Retry-After\",\n        SetCookie: \"Set-Cookie\",\n        WwwAuthenticate: \"Www-Authenticate\",\n        Origin: \"Origin\",\n        Host: \"Host\",\n        AccessControlAllowOrigin: \"Access-Control-Allow-Origin\",\n        AccessControlAllowHeaders: \"Access-Control-Allow-Headers\",\n        KeyValueEncodingFormat: \"application/x-www-form-urlencoded\",\n        WrapAssertionFormat: \"wrap_assertion_format\",\n        WrapAssertion: \"wrap_assertion\",\n        WrapScope: \"wrap_scope\",\n        SimpleToken: \"SWT\",\n        HttpDate: \"date\",\n        Prefer: \"Prefer\",\n        Location: \"Location\",\n        Referer: \"referer\",\n        A_IM: \"A-IM\",\n        // Query\n        Query: \"x-ms-documentdb-query\",\n        IsQuery: \"x-ms-documentdb-isquery\",\n        // Our custom Azure Cosmos DB headers\n        Continuation: \"x-ms-continuation\",\n        PageSize: \"x-ms-max-item-count\",\n        // Request sender generated. Simply echoed by backend.\n        ActivityId: \"x-ms-activity-id\",\n        PreTriggerInclude: \"x-ms-documentdb-pre-trigger-include\",\n        PreTriggerExclude: \"x-ms-documentdb-pre-trigger-exclude\",\n        PostTriggerInclude: \"x-ms-documentdb-post-trigger-include\",\n        PostTriggerExclude: \"x-ms-documentdb-post-trigger-exclude\",\n        IndexingDirective: \"x-ms-indexing-directive\",\n        SessionToken: \"x-ms-session-token\",\n        ConsistencyLevel: \"x-ms-consistency-level\",\n        XDate: \"x-ms-date\",\n        CollectionPartitionInfo: \"x-ms-collection-partition-info\",\n        CollectionServiceInfo: \"x-ms-collection-service-info\",\n        RetryAfterInMilliseconds: \"x-ms-retry-after-ms\",\n        IsFeedUnfiltered: \"x-ms-is-feed-unfiltered\",\n        ResourceTokenExpiry: \"x-ms-documentdb-expiry-seconds\",\n        EnableScanInQuery: \"x-ms-documentdb-query-enable-scan\",\n        EmitVerboseTracesInQuery: \"x-ms-documentdb-query-emit-traces\",\n        EnableCrossPartitionQuery: \"x-ms-documentdb-query-enablecrosspartition\",\n        ParallelizeCrossPartitionQuery: \"x-ms-documentdb-query-parallelizecrosspartitionquery\",\n        // QueryMetrics\n        // Request header to tell backend to give you query metrics.\n        PopulateQueryMetrics: \"x-ms-documentdb-populatequerymetrics\",\n        // Response header that holds the serialized version of query metrics.\n        QueryMetrics: \"x-ms-documentdb-query-metrics\",\n        // Version headers and values\n        Version: \"x-ms-version\",\n        // Owner name\n        OwnerFullName: \"x-ms-alt-content-path\",\n        // Owner ID used for name based request in session token.\n        OwnerId: \"x-ms-content-path\",\n        // Partition Key\n        PartitionKey: \"x-ms-documentdb-partitionkey\",\n        PartitionKeyRangeID: \"x-ms-documentdb-partitionkeyrangeid\",\n        // Quota Info\n        MaxEntityCount: \"x-ms-root-entity-max-count\",\n        CurrentEntityCount: \"x-ms-root-entity-current-count\",\n        CollectionQuotaInMb: \"x-ms-collection-quota-mb\",\n        CollectionCurrentUsageInMb: \"x-ms-collection-usage-mb\",\n        MaxMediaStorageUsageInMB: \"x-ms-max-media-storage-usage-mb\",\n        CurrentMediaStorageUsageInMB: \"x-ms-media-storage-usage-mb\",\n        RequestCharge: \"x-ms-request-charge\",\n        PopulateQuotaInfo: \"x-ms-documentdb-populatequotainfo\",\n        MaxResourceQuota: \"x-ms-resource-quota\",\n        // Offer header\n        OfferType: \"x-ms-offer-type\",\n        OfferThroughput: \"x-ms-offer-throughput\",\n        // Custom RUs/minute headers\n        DisableRUPerMinuteUsage: \"x-ms-documentdb-disable-ru-per-minute-usage\",\n        IsRUPerMinuteUsed: \"x-ms-documentdb-is-ru-per-minute-used\",\n        OfferIsRUPerMinuteThroughputEnabled: \"x-ms-offer-is-ru-per-minute-throughput-enabled\",\n        // Index progress headers\n        IndexTransformationProgress: \"x-ms-documentdb-collection-index-transformation-progress\",\n        LazyIndexingProgress: \"x-ms-documentdb-collection-lazy-indexing-progress\",\n        // Upsert header\n        IsUpsert: \"x-ms-documentdb-is-upsert\",\n        // Sub status of the error\n        SubStatus: \"x-ms-substatus\",\n        // StoredProcedure related headers\n        EnableScriptLogging: \"x-ms-documentdb-script-enable-logging\",\n        ScriptLogResults: \"x-ms-documentdb-script-log-results\",\n        // Multi-Region Write\n        ALLOW_MULTIPLE_WRITES: \"x-ms-cosmos-allow-tentative-writes\"\n    },\n    // GlobalDB related constants\n    WritableLocations: \"writableLocations\",\n    ReadableLocations: \"readableLocations\",\n    Name: \"name\",\n    DatabaseAccountEndpoint: \"databaseAccountEndpoint\",\n    // ServiceDocument Resource\n    ENABLE_MULTIPLE_WRITABLE_LOCATIONS: \"enableMultipleWriteLocations\",\n    // Background refresh time\n    DefaultUnavailableLocationExpirationTimeMS: 5 * 60 * 1000,\n    // Client generated retry count response header\n    ThrottleRetryCount: \"x-ms-throttle-retry-count\",\n    ThrottleRetryWaitTimeInMs: \"x-ms-throttle-retry-wait-time-ms\",\n    CurrentVersion: \"2018-06-18\",\n    SDKName: \"azure-cosmos-js\",\n    SDKVersion: \"2.0.2\",\n    DefaultPrecisions: {\n        DefaultNumberHashPrecision: 3,\n        DefaultNumberRangePrecision: -1,\n        DefaultStringHashPrecision: 3,\n        DefaultStringRangePrecision: -1\n    },\n    ConsistentHashRing: {\n        DefaultVirtualNodesPerCollection: 128\n    },\n    RegularExpressions: {\n        TrimLeftSlashes: new RegExp(\"^[/]+\"),\n        TrimRightSlashes: new RegExp(\"[/]+$\"),\n        IllegalResourceIdCharacters: new RegExp(\"[/\\\\\\\\?#]\")\n    },\n    Quota: {\n        CollectionSize: \"collectionSize\"\n    },\n    Path: {\n        DatabasesPathSegment: \"dbs\",\n        CollectionsPathSegment: \"colls\",\n        UsersPathSegment: \"users\",\n        DocumentsPathSegment: \"docs\",\n        PermissionsPathSegment: \"permissions\",\n        StoredProceduresPathSegment: \"sprocs\",\n        TriggersPathSegment: \"triggers\",\n        UserDefinedFunctionsPathSegment: \"udfs\",\n        ConflictsPathSegment: \"conflicts\",\n        AttachmentsPathSegment: \"attachments\",\n        PartitionKeyRangesPathSegment: \"pkranges\",\n        SchemasPathSegment: \"schemas\",\n        OffersPathSegment: \"offers\",\n        TopologyPathSegment: \"topology\",\n        DatabaseAccountPathSegment: \"databaseaccount\"\n    },\n    OperationTypes: {\n        Create: \"create\",\n        Replace: \"replace\",\n        Upsert: \"upsert\",\n        Delete: \"delete\",\n        Read: \"read\",\n        Query: \"query\",\n        Execute: \"execute\"\n    },\n    PartitionKeyRange: {\n        // Partition Key Range Constants\n        MinInclusive: \"minInclusive\",\n        MaxExclusive: \"maxExclusive\",\n        Id: \"id\"\n    },\n    QueryRangeConstants: {\n        // Partition Key Range Constants\n        MinInclusive: \"minInclusive\",\n        MaxExclusive: \"maxExclusive\",\n        min: \"min\"\n    },\n    EffectiveParitionKeyConstants: {\n        MinimumInclusiveEffectivePartitionKey: \"\",\n        MaximumExclusiveEffectivePartitionKey: \"FF\"\n    }\n};\nvar ResourceType;\n(function (ResourceType) {\n    ResourceType[\"database\"] = \"dbs\";\n    ResourceType[\"offer\"] = \"offers\";\n    ResourceType[\"user\"] = \"users\";\n    ResourceType[\"permission\"] = \"permissions\";\n    ResourceType[\"container\"] = \"colls\";\n    ResourceType[\"conflicts\"] = \"conflicts\";\n    ResourceType[\"sproc\"] = \"sprocs\";\n    ResourceType[\"udf\"] = \"udfs\";\n    ResourceType[\"trigger\"] = \"triggers\";\n    ResourceType[\"item\"] = \"docs\";\n})(ResourceType = exports.ResourceType || (exports.ResourceType = {}));\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/common/constants.js\n");

/***/ }),

/***/ "./lib/common/helper.js":
/*!******************************!*\
  !*** ./lib/common/helper.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _1 = __webpack_require__(/*! . */ \"./lib/common/index.js\");\nconst documents_1 = __webpack_require__(/*! ../documents */ \"./lib/documents/index.js\");\n/** @hidden */\nconst Regexes = _1.Constants.RegularExpressions;\n/** @hidden */\nclass Helper {\n    static jsonStringifyAndEscapeNonASCII(arg) {\n        // TODO: better way for this? Not sure.\n        // escapes non-ASCII characters as \\uXXXX\n        return JSON.stringify(arg).replace(/[\\u0080-\\uFFFF]/g, m => {\n            return \"\\\\u\" + (\"0000\" + m.charCodeAt(0).toString(16)).slice(-4);\n        });\n    }\n    static parseLink(resourcePath) {\n        if (resourcePath.length === 0) {\n            /* for DatabaseAccount case, both type and objectBody will be undefined. */\n            return {\n                type: undefined,\n                objectBody: undefined\n            };\n        }\n        if (resourcePath[resourcePath.length - 1] !== \"/\") {\n            resourcePath = resourcePath + \"/\";\n        }\n        if (resourcePath[0] !== \"/\") {\n            resourcePath = \"/\" + resourcePath;\n        }\n        /*\n             The path will be in the form of /[resourceType]/[resourceId]/ ....\n             /[resourceType]//[resourceType]/[resourceId]/ .... /[resourceType]/[resourceId]/\n             or /[resourceType]/[resourceId]/ .... /[resourceType]/[resourceId]/[resourceType]/[resourceId]/ ....\n              /[resourceType]/[resourceId]/\n             The result of split will be in the form of\n             [[[resourceType], [resourceId] ... ,[resourceType], [resourceId], \"\"]\n             In the first case, to extract the resourceId it will the element before last ( at length -2 )\n             and the the type will before it ( at length -3 )\n             In the second case, to extract the resource type it will the element before last ( at length -2 )\n            */\n        const pathParts = resourcePath.split(\"/\");\n        let id;\n        let type;\n        if (pathParts.length % 2 === 0) {\n            // request in form /[resourceType]/[resourceId]/ .... /[resourceType]/[resourceId].\n            id = pathParts[pathParts.length - 2];\n            type = pathParts[pathParts.length - 3];\n        }\n        else {\n            // request in form /[resourceType]/[resourceId]/ .... /[resourceType]/.\n            id = pathParts[pathParts.length - 3];\n            type = pathParts[pathParts.length - 2];\n        }\n        const result = {\n            type,\n            objectBody: {\n                id,\n                self: resourcePath\n            }\n        };\n        return result;\n    }\n    static isReadRequest(request) {\n        return (request.operationType === _1.Constants.OperationTypes.Read ||\n            request.operationType === _1.Constants.OperationTypes.Query);\n    }\n    static sleep(time) {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve();\n            }, time);\n        });\n    }\n    static getContainerLink(link) {\n        return link\n            .split(\"/\")\n            .slice(0, 4)\n            .join(\"/\");\n    }\n    static trimSlashes(source) {\n        return source\n            .replace(_1.Constants.RegularExpressions.TrimLeftSlashes, \"\")\n            .replace(_1.Constants.RegularExpressions.TrimRightSlashes, \"\");\n    }\n    static getHexaDigit() {\n        return Math.floor(Math.random() * 16).toString(16);\n    }\n    static setIsUpsertHeader(headers) {\n        if (headers === undefined || headers === null) {\n            throw new Error('The \"headers\" parameter must not be null or undefined');\n        }\n        if (!(headers instanceof Object)) {\n            throw new Error(`The \"headers\" parameter must be an instance of \"Object\". Actual type is: \"${typeof headers}\".`);\n        }\n        headers[_1.Constants.HttpHeaders.IsUpsert] = true;\n    }\n    // TODO: replace with well known library?\n    static generateGuidId() {\n        let id = \"\";\n        for (let i = 0; i < 8; i++) {\n            id += Helper.getHexaDigit();\n        }\n        id += \"-\";\n        for (let i = 0; i < 4; i++) {\n            id += Helper.getHexaDigit();\n        }\n        id += \"-\";\n        for (let i = 0; i < 4; i++) {\n            id += Helper.getHexaDigit();\n        }\n        id += \"-\";\n        for (let i = 0; i < 4; i++) {\n            id += Helper.getHexaDigit();\n        }\n        id += \"-\";\n        for (let i = 0; i < 12; i++) {\n            id += Helper.getHexaDigit();\n        }\n        return id;\n    }\n    static parsePath(path) {\n        const pathParts = [];\n        let currentIndex = 0;\n        const throwError = () => {\n            throw new Error(\"Path \" + path + \" is invalid at index \" + currentIndex);\n        };\n        const getEscapedToken = () => {\n            const quote = path[currentIndex];\n            let newIndex = ++currentIndex;\n            while (true) {\n                newIndex = path.indexOf(quote, newIndex);\n                if (newIndex === -1) {\n                    throwError();\n                }\n                if (path[newIndex - 1] !== \"\\\\\") {\n                    break;\n                }\n                ++newIndex;\n            }\n            const token = path.substr(currentIndex, newIndex - currentIndex);\n            currentIndex = newIndex + 1;\n            return token;\n        };\n        const getToken = () => {\n            const newIndex = path.indexOf(\"/\", currentIndex);\n            let token = null;\n            if (newIndex === -1) {\n                token = path.substr(currentIndex);\n                currentIndex = path.length;\n            }\n            else {\n                token = path.substr(currentIndex, newIndex - currentIndex);\n                currentIndex = newIndex;\n            }\n            token = token.trim();\n            return token;\n        };\n        while (currentIndex < path.length) {\n            if (path[currentIndex] !== \"/\") {\n                throwError();\n            }\n            if (++currentIndex === path.length) {\n                break;\n            }\n            if (path[currentIndex] === '\"' || path[currentIndex] === \"'\") {\n                pathParts.push(getEscapedToken());\n            }\n            else {\n                pathParts.push(getToken());\n            }\n        }\n        return pathParts;\n    }\n    static isResourceValid(resource, err) {\n        // TODO: any TODO: code smell\n        if (resource.id) {\n            if (typeof resource.id !== \"string\") {\n                err.message = \"Id must be a string.\";\n                return false;\n            }\n            if (resource.id.indexOf(\"/\") !== -1 ||\n                resource.id.indexOf(\"\\\\\") !== -1 ||\n                resource.id.indexOf(\"?\") !== -1 ||\n                resource.id.indexOf(\"#\") !== -1) {\n                err.message = \"Id contains illegal chars.\";\n                return false;\n            }\n            if (resource.id[resource.id.length - 1] === \" \") {\n                err.message = \"Id ends with a space.\";\n                return false;\n            }\n        }\n        return true;\n    }\n    /** @ignore */\n    static getIdFromLink(resourceLink, isNameBased = true) {\n        if (isNameBased) {\n            resourceLink = Helper.trimSlashes(resourceLink);\n            return resourceLink;\n        }\n        else {\n            return Helper.parseLink(resourceLink).objectBody.id.toLowerCase();\n        }\n    }\n    /** @ignore */\n    static getPathFromLink(resourceLink, resourceType, isNameBased = true) {\n        if (isNameBased) {\n            resourceLink = Helper.trimSlashes(resourceLink);\n            if (resourceType) {\n                return \"/\" + encodeURI(resourceLink) + \"/\" + resourceType;\n            }\n            else {\n                return \"/\" + encodeURI(resourceLink);\n            }\n        }\n        else {\n            if (resourceType) {\n                return \"/\" + resourceLink + resourceType + \"/\";\n            }\n            else {\n                return \"/\" + resourceLink;\n            }\n        }\n    }\n    static isStringNullOrEmpty(inputString) {\n        // checks whether string is null, undefined, empty or only contains space\n        return !inputString || /^\\s*$/.test(inputString);\n    }\n    static trimSlashFromLeftAndRight(inputString) {\n        if (typeof inputString !== \"string\") {\n            throw new Error(\"invalid input: input is not string\");\n        }\n        return inputString.replace(Regexes.TrimLeftSlashes, \"\").replace(Regexes.TrimRightSlashes, \"\");\n    }\n    static validateResourceId(resourceId) {\n        // if resourceId is not a string or is empty throw an error\n        if (typeof resourceId !== \"string\" || this.isStringNullOrEmpty(resourceId)) {\n            throw new Error(\"Resource Id must be a string and cannot be undefined, null or empty\");\n        }\n        // if resourceId starts or ends with space throw an error\n        if (resourceId[resourceId.length - 1] === \" \") {\n            throw new Error(\"Resource Id cannot end with space\");\n        }\n        // if resource id contains illegal characters throw an error\n        if (Regexes.IllegalResourceIdCharacters.test(resourceId)) {\n            throw new Error(\"Illegal characters ['/', '\\\\', '?', '#'] cannot be used in resourceId\");\n        }\n        return true;\n    }\n    static getResourceIdFromPath(resourcePath) {\n        if (!resourcePath || typeof resourcePath !== \"string\") {\n            return null;\n        }\n        const trimmedPath = this.trimSlashFromLeftAndRight(resourcePath);\n        const pathSegments = trimmedPath.split(\"/\");\n        // number of segments of a path must always be even\n        if (pathSegments.length % 2 !== 0) {\n            return null;\n        }\n        return pathSegments[pathSegments.length - 1];\n    }\n    static parseConnectionPolicy(policy) {\n        if (!policy) {\n            return new documents_1.ConnectionPolicy();\n        }\n        else if (policy instanceof documents_1.ConnectionPolicy) {\n            return policy;\n        }\n        else {\n            const connectionPolicy = new documents_1.ConnectionPolicy();\n            for (const key of Object.getOwnPropertyNames(connectionPolicy)) {\n                if (policy[key] !== undefined) {\n                    connectionPolicy[key] = policy[key];\n                }\n            }\n            return connectionPolicy;\n        }\n    }\n}\nexports.Helper = Helper;\n//# sourceMappingURL=helper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/common/helper.js\n");

/***/ }),

/***/ "./lib/common/index.js":
/*!*****************************!*\
  !*** ./lib/common/index.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./constants */ \"./lib/common/constants.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./helper */ \"./lib/common/helper.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./statusCodes */ \"./lib/common/statusCodes.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./uriFactory */ \"./lib/common/uriFactory.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./resourceId */ \"./lib/common/resourceId.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./platform */ \"./lib/common/platform.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY29tbW9uL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2NvbW1vbi9pbmRleC5qcz9kZjZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9oZWxwZXJcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc3RhdHVzQ29kZXNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXJpRmFjdG9yeVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9yZXNvdXJjZUlkXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3BsYXRmb3JtXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/common/index.js\n");

/***/ }),

/***/ "./lib/common/platform.js":
/*!********************************!*\
  !*** ./lib/common/platform.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer, process) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst os = tslib_1.__importStar(__webpack_require__(/*! os */ \"./node_modules/os-browserify/browser.js\"));\nconst _1 = __webpack_require__(/*! . */ \"./lib/common/index.js\");\n/** @hidden */\nclass Platform {\n    static getPlatformDefaultHeaders() {\n        const defaultHeaders = {};\n        defaultHeaders[_1.Constants.HttpHeaders.UserAgent] = Platform.getUserAgent();\n        return defaultHeaders;\n    }\n    static getDecodedDataLength(encodedData) {\n        const buffer = Buffer.from(encodedData, \"base64\");\n        return buffer.length;\n    }\n    static getUserAgent() {\n        // gets the user agent in the following format\n        // \"{OSName}/{OSVersion} Nodejs/{NodejsVersion} documentdb-nodejs-sdk/{SDKVersion}\"\n        // for example:\n        // \"linux/3.4.0+ Nodejs/v0.10.25 documentdb-nodejs-sdk/1.10.0\"\n        // \"win32/10.0.14393 Nodejs/v4.4.7 documentdb-nodejs-sdk/1.10.0\"\n        const osName = Platform._getSafeUserAgentSegmentInfo(os.platform());\n        const osVersion = Platform._getSafeUserAgentSegmentInfo(os.release());\n        const nodejsVersion = Platform._getSafeUserAgentSegmentInfo(process.version);\n        const userAgent = `${osName}/${osVersion} Nodejs/${nodejsVersion} ${_1.Constants.SDKName}/${_1.Constants.SDKVersion}`;\n        return userAgent;\n    }\n    static _getSafeUserAgentSegmentInfo(s) {\n        // catch null, undefined, etc\n        if (typeof s !== \"string\") {\n            s = \"unknown\";\n        }\n        // remove all white spaces\n        s = s.replace(/\\s+/g, \"\");\n        if (!s) {\n            s = \"unknown\";\n        }\n        return s;\n    }\n}\nexports.Platform = Platform;\n//# sourceMappingURL=platform.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer, __webpack_require__(/*! ./../../node_modules/process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY29tbW9uL3BsYXRmb3JtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2NvbW1vbi9wbGF0Zm9ybS5qcz9jNTYxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IG9zID0gdHNsaWJfMS5fX2ltcG9ydFN0YXIocmVxdWlyZShcIm9zXCIpKTtcbmNvbnN0IF8xID0gcmVxdWlyZShcIi5cIik7XG4vKiogQGhpZGRlbiAqL1xuY2xhc3MgUGxhdGZvcm0ge1xuICAgIHN0YXRpYyBnZXRQbGF0Zm9ybURlZmF1bHRIZWFkZXJzKCkge1xuICAgICAgICBjb25zdCBkZWZhdWx0SGVhZGVycyA9IHt9O1xuICAgICAgICBkZWZhdWx0SGVhZGVyc1tfMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuVXNlckFnZW50XSA9IFBsYXRmb3JtLmdldFVzZXJBZ2VudCgpO1xuICAgICAgICByZXR1cm4gZGVmYXVsdEhlYWRlcnM7XG4gICAgfVxuICAgIHN0YXRpYyBnZXREZWNvZGVkRGF0YUxlbmd0aChlbmNvZGVkRGF0YSkge1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuZnJvbShlbmNvZGVkRGF0YSwgXCJiYXNlNjRcIik7XG4gICAgICAgIHJldHVybiBidWZmZXIubGVuZ3RoO1xuICAgIH1cbiAgICBzdGF0aWMgZ2V0VXNlckFnZW50KCkge1xuICAgICAgICAvLyBnZXRzIHRoZSB1c2VyIGFnZW50IGluIHRoZSBmb2xsb3dpbmcgZm9ybWF0XG4gICAgICAgIC8vIFwie09TTmFtZX0ve09TVmVyc2lvbn0gTm9kZWpzL3tOb2RlanNWZXJzaW9ufSBkb2N1bWVudGRiLW5vZGVqcy1zZGsve1NES1ZlcnNpb259XCJcbiAgICAgICAgLy8gZm9yIGV4YW1wbGU6XG4gICAgICAgIC8vIFwibGludXgvMy40LjArIE5vZGVqcy92MC4xMC4yNSBkb2N1bWVudGRiLW5vZGVqcy1zZGsvMS4xMC4wXCJcbiAgICAgICAgLy8gXCJ3aW4zMi8xMC4wLjE0MzkzIE5vZGVqcy92NC40LjcgZG9jdW1lbnRkYi1ub2RlanMtc2RrLzEuMTAuMFwiXG4gICAgICAgIGNvbnN0IG9zTmFtZSA9IFBsYXRmb3JtLl9nZXRTYWZlVXNlckFnZW50U2VnbWVudEluZm8ob3MucGxhdGZvcm0oKSk7XG4gICAgICAgIGNvbnN0IG9zVmVyc2lvbiA9IFBsYXRmb3JtLl9nZXRTYWZlVXNlckFnZW50U2VnbWVudEluZm8ob3MucmVsZWFzZSgpKTtcbiAgICAgICAgY29uc3Qgbm9kZWpzVmVyc2lvbiA9IFBsYXRmb3JtLl9nZXRTYWZlVXNlckFnZW50U2VnbWVudEluZm8ocHJvY2Vzcy52ZXJzaW9uKTtcbiAgICAgICAgY29uc3QgdXNlckFnZW50ID0gYCR7b3NOYW1lfS8ke29zVmVyc2lvbn0gTm9kZWpzLyR7bm9kZWpzVmVyc2lvbn0gJHtfMS5Db25zdGFudHMuU0RLTmFtZX0vJHtfMS5Db25zdGFudHMuU0RLVmVyc2lvbn1gO1xuICAgICAgICByZXR1cm4gdXNlckFnZW50O1xuICAgIH1cbiAgICBzdGF0aWMgX2dldFNhZmVVc2VyQWdlbnRTZWdtZW50SW5mbyhzKSB7XG4gICAgICAgIC8vIGNhdGNoIG51bGwsIHVuZGVmaW5lZCwgZXRjXG4gICAgICAgIGlmICh0eXBlb2YgcyAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgcyA9IFwidW5rbm93blwiO1xuICAgICAgICB9XG4gICAgICAgIC8vIHJlbW92ZSBhbGwgd2hpdGUgc3BhY2VzXG4gICAgICAgIHMgPSBzLnJlcGxhY2UoL1xccysvZywgXCJcIik7XG4gICAgICAgIGlmICghcykge1xuICAgICAgICAgICAgcyA9IFwidW5rbm93blwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzO1xuICAgIH1cbn1cbmV4cG9ydHMuUGxhdGZvcm0gPSBQbGF0Zm9ybTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBsYXRmb3JtLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/common/platform.js\n");

/***/ }),

/***/ "./lib/common/resourceId.js":
/*!**********************************!*\
  !*** ./lib/common/resourceId.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n// tslint:disable:no-bitwise\nconst big_integer_1 = tslib_1.__importDefault(__webpack_require__(/*! big-integer */ \"./node_modules/big-integer/BigInteger.js\"));\nconst int64_buffer_1 = __webpack_require__(/*! int64-buffer */ \"./node_modules/int64-buffer/int64-buffer.js\");\n/** @hidden */\nexports.EMPTY = \"0\"; // TODO: This is kinda hacky\n/** @hidden */\nclass ResourceId {\n    constructor() {\n        this.offer = exports.EMPTY;\n        this.database = exports.EMPTY;\n        this.documentCollection = exports.EMPTY;\n        this.storedProcedure = exports.EMPTY;\n        this.trigger = exports.EMPTY;\n        this.userDefinedFunction = exports.EMPTY;\n        this.document = exports.EMPTY;\n        this.partitionKeyRange = exports.EMPTY;\n        this.user = exports.EMPTY;\n        this.conflict = exports.EMPTY;\n        this.permission = exports.EMPTY;\n        this.attachment = exports.EMPTY;\n        this.length = 20;\n        this.offerIdLength = 3;\n        this.DocumentByte = 0;\n        this.StoredProcedureByte = 8;\n        this.TriggerByte = 7;\n        this.UserDefinedFunctionByte = 6;\n        this.ConflictByte = 4;\n        this.PartitionKeyRangeByte = 5;\n    }\n    parse(id) {\n        const pair = this.tryParse(id);\n        if (!pair[0]) {\n            throw new Error(\"invalid resource id \" + id);\n        }\n        return pair[1];\n    }\n    newDatabaseId(dbId) {\n        const resourceId = new ResourceId();\n        resourceId.database = dbId;\n        return ResourceId;\n    }\n    newDocumentCollectionId(databaseId, collectionId) {\n        const dbId = this.parse(databaseId);\n        const collectionResourceId = new ResourceId();\n        collectionResourceId.database = dbId.database;\n        collectionResourceId.documentCollection = collectionId;\n        return collectionResourceId;\n    }\n    newUserId(databaseId, userId) {\n        const dbId = this.parse(databaseId);\n        const userResourceId = new ResourceId();\n        userResourceId.database = dbId.database;\n        userResourceId.user = userId;\n        return userResourceId;\n    }\n    newPermissionId(userId, permissionId) {\n        const usrId = this.parse(userId);\n        const permissionResourceId = new ResourceId();\n        permissionResourceId.database = usrId.database;\n        permissionResourceId.user = usrId.user;\n        permissionResourceId.permission = permissionId;\n        return permissionResourceId;\n    }\n    newAttachmentId(documentId, attachmentId) {\n        const docId = this.parse(documentId);\n        const attachmentResourceId = new ResourceId();\n        attachmentResourceId.database = docId.database;\n        attachmentResourceId.documentCollection = docId.documentCollection;\n        attachmentResourceId.document = docId.document;\n        attachmentResourceId.attachment = attachmentId;\n        return attachmentResourceId;\n    }\n    tryParse(id) {\n        let rid;\n        if (!id) {\n            return [false, undefined];\n        }\n        const pair = this.verify(id);\n        if (!pair[0]) {\n            return [false, undefined];\n        }\n        const buffer = pair[1];\n        const intArray = new Int8Array(buffer);\n        if (buffer.length % 4 !== 0 && buffer.length !== this.offerIdLength) {\n            return [false, undefined];\n        }\n        rid = new ResourceId();\n        // if length < 4 bytes, the resource is an offer\n        if (buffer.length === this.offerIdLength) {\n            let offer = 0;\n            for (let index = 0; index < this.offerIdLength; index++) {\n                offer = offer | (intArray[index] << (index * 8));\n            }\n            rid.offer = offer.toString();\n            return [true, rid];\n        }\n        // first 4 bytes represent the database\n        if (buffer.length >= 4) {\n            rid.database = buffer.readIntBE(0, 4).toString();\n        }\n        if (buffer.length >= 8) {\n            const isCollection = (intArray[4] & 128) > 0;\n            if (isCollection) {\n                // 5th - 8th bytes represents the collection\n                rid.documentCollection = buffer.readIntBE(4, 4).toString();\n                if (buffer.length >= 16) {\n                    // 9th - 15th bytes represent one of document, trigger, sproc, udf, conflict, pkrange\n                    const subCollectionResource = ResourceId.bigNumberReadIntBE(buffer, 8, 8).toString();\n                    if (intArray[15] >> 4 === this.DocumentByte) {\n                        rid.document = subCollectionResource;\n                        // 16th - 20th bytes represent the attachment\n                        if (buffer.length === 20) {\n                            rid.attachment = buffer.readIntBE(16, 4).toString();\n                        }\n                    }\n                    else if (Math.abs(intArray[15] >> 4) === this.StoredProcedureByte) {\n                        rid.storedProcedure = subCollectionResource;\n                    }\n                    else if (intArray[15] >> 4 === this.TriggerByte) {\n                        rid.trigger = subCollectionResource;\n                    }\n                    else if (intArray[15] >> 4 === this.UserDefinedFunctionByte) {\n                        rid.userDefinedFunction = subCollectionResource;\n                    }\n                    else if (intArray[15] >> 4 === this.ConflictByte) {\n                        rid.conflict = subCollectionResource;\n                    }\n                    else if (intArray[15] >> 4 === this.PartitionKeyRangeByte) {\n                        rid.partitionKeyRange = subCollectionResource;\n                    }\n                    else {\n                        return [false, rid];\n                    }\n                }\n                else if (buffer.length !== 8) {\n                    return [false, rid];\n                }\n            }\n            else {\n                // 5th - 8th bytes represents the user\n                rid.user = buffer.readIntBE(4, 4).toString();\n                // 9th - 15th bytes represent the permission\n                if (buffer.length === 16) {\n                    rid.permission = ResourceId.bigNumberReadIntBE(buffer, 8, 8).toString();\n                }\n                else if (buffer.length !== 8) {\n                    return [false, rid];\n                }\n            }\n        }\n        return [true, rid];\n    }\n    verify(id) {\n        if (!id) {\n            throw new Error(\"invalid resource id \" + id);\n        }\n        let buffer = ResourceId.fromBase64String(id);\n        if (!buffer || buffer.length > this.length) {\n            buffer = undefined;\n            return [false, buffer];\n        }\n        return [true, buffer];\n    }\n    verifyBool(id) {\n        return this.verify(id)[0];\n    }\n    static fromBase64String(s) {\n        return Buffer.from(s.replace(\"-\", \"/\"), \"base64\");\n    }\n    static toBase64String(buffer) {\n        return buffer.toString(\"base64\");\n    }\n    isDatabaseId() {\n        return this.database !== exports.EMPTY && (this.documentCollection === exports.EMPTY && this.user === exports.EMPTY);\n    }\n    getDatabaseId() {\n        const rid = new ResourceId();\n        rid.database = this.database;\n        return rid;\n    }\n    getDocumentCollectionId() {\n        const rid = new ResourceId();\n        rid.database = this.database;\n        rid.documentCollection = this.documentCollection;\n        return rid;\n    }\n    getUniqueDocumentCollectionId() {\n        const db = big_integer_1.default(this.database);\n        const coll = big_integer_1.default(this.documentCollection);\n        return db\n            .shiftLeft(32)\n            .or(coll)\n            .toString();\n    }\n    getStoredProcedureId() {\n        const rid = new ResourceId();\n        rid.database = this.database;\n        rid.documentCollection = this.documentCollection;\n        rid.storedProcedure = this.storedProcedure;\n        return rid;\n    }\n    getTriggerId() {\n        const rid = new ResourceId();\n        rid.database = this.database;\n        rid.documentCollection = this.documentCollection;\n        rid.trigger = this.trigger;\n        return rid;\n    }\n    getUserDefinedFunctionId() {\n        const rid = new ResourceId();\n        rid.database = this.database;\n        rid.documentCollection = this.documentCollection;\n        rid.userDefinedFunction = this.userDefinedFunction;\n        return rid;\n    }\n    getConflictId() {\n        const rid = new ResourceId();\n        rid.database = this.database;\n        rid.documentCollection = this.documentCollection;\n        rid.conflict = this.conflict;\n        return rid;\n    }\n    getDocumentId() {\n        const rid = new ResourceId();\n        rid.database = this.database;\n        rid.documentCollection = this.documentCollection;\n        rid.document = this.document;\n        return rid;\n    }\n    getPartitonKeyRangeId() {\n        const rid = new ResourceId();\n        rid.database = this.database;\n        rid.documentCollection = this.documentCollection;\n        rid.partitionKeyRange = this.partitionKeyRange;\n        return rid;\n    }\n    getUserId() {\n        const rid = new ResourceId();\n        rid.database = this.database;\n        rid.user = this.user;\n        return rid;\n    }\n    getPermissionId() {\n        const rid = new ResourceId();\n        rid.database = this.database;\n        rid.user = this.user;\n        rid.permission = this.permission;\n        return rid;\n    }\n    getAttachmentId() {\n        const rid = new ResourceId();\n        rid.database = this.database;\n        rid.documentCollection = this.documentCollection;\n        rid.document = this.document;\n        rid.attachment = this.attachment;\n        return rid;\n    }\n    getOfferId() {\n        const rid = new ResourceId();\n        rid.offer = this.offer;\n        return rid;\n    }\n    getValue() {\n        let len = 0;\n        if (this.offer !== exports.EMPTY) {\n            len = len + this.offerIdLength;\n        }\n        else if (this.database !== exports.EMPTY) {\n            len = len + 4;\n        }\n        if (this.documentCollection !== exports.EMPTY || this.user !== exports.EMPTY) {\n            len = len + 4;\n        }\n        if (this.document !== exports.EMPTY ||\n            this.permission !== exports.EMPTY ||\n            this.storedProcedure !== exports.EMPTY ||\n            this.trigger !== exports.EMPTY ||\n            this.userDefinedFunction !== exports.EMPTY ||\n            this.conflict !== exports.EMPTY ||\n            this.partitionKeyRange !== exports.EMPTY) {\n            len = len + 8;\n        }\n        if (this.attachment !== exports.EMPTY) {\n            len = len + 4;\n        }\n        const buffer = Buffer.alloc(len); // Does not require fill(0)\n        if (this.offer !== exports.EMPTY) {\n            buffer.writeIntLE(Number(this.offer), 0, this.offerIdLength);\n        }\n        else if (this.database !== exports.EMPTY) {\n            buffer.writeIntBE(Number(this.database), 0, 4);\n        }\n        if (this.documentCollection !== exports.EMPTY) {\n            buffer.writeIntBE(Number(this.documentCollection), 4, 4);\n        }\n        else if (this.user !== exports.EMPTY) {\n            buffer.writeIntBE(Number(this.user), 4, 4);\n        }\n        let big;\n        if (this.storedProcedure !== exports.EMPTY) {\n            big = new int64_buffer_1.Int64BE(this.storedProcedure);\n            big.toBuffer().copy(buffer, 8, 0, 8);\n        }\n        else if (this.trigger !== exports.EMPTY) {\n            big = new int64_buffer_1.Int64BE(this.trigger);\n            big.toBuffer().copy(buffer, 8, 0, 8);\n        }\n        else if (this.userDefinedFunction !== exports.EMPTY) {\n            big = new int64_buffer_1.Int64BE(this.userDefinedFunction);\n            big.toBuffer().copy(buffer, 8, 0, 8);\n        }\n        else if (this.conflict !== exports.EMPTY) {\n            big = new int64_buffer_1.Int64BE(this.conflict);\n            big.toBuffer().copy(buffer, 8, 0, 8);\n        }\n        else if (this.document !== exports.EMPTY) {\n            big = new int64_buffer_1.Int64BE(this.document);\n            big.toBuffer().copy(buffer, 8, 0, 8);\n        }\n        else if (this.permission !== exports.EMPTY) {\n            big = new int64_buffer_1.Int64BE(this.permission);\n            big.toBuffer().copy(buffer, 8, 0, 8);\n        }\n        else if (this.partitionKeyRange !== exports.EMPTY) {\n            big = new int64_buffer_1.Int64BE(this.partitionKeyRange);\n            big.toBuffer().copy(buffer, 8, 0, 8);\n        }\n        if (this.attachment !== exports.EMPTY) {\n            buffer.writeIntBE(Number(this.attachment), 16, 4);\n        }\n        return buffer;\n    }\n    toString() {\n        return ResourceId.toBase64String(this.getValue());\n    }\n    static bigNumberReadIntBE(buffer, offset, byteLength) {\n        offset = offset >>> 0;\n        byteLength = byteLength >>> 0;\n        let i = byteLength;\n        let mul = big_integer_1.default(\"1\");\n        let val = big_integer_1.default(buffer[offset + --i]);\n        while (i > 0 && mul) {\n            const temp = big_integer_1.default(buffer[offset + --i]);\n            mul = mul.times(0x100);\n            val = val.plus(temp.times(mul));\n        }\n        mul = mul.times(0x80);\n        if (val.greater(mul)) {\n            const subtrahend = big_integer_1.default(2);\n            val = val.minus(subtrahend.pow(8 * byteLength));\n        }\n        return val;\n    }\n}\nexports.ResourceId = ResourceId;\n//# sourceMappingURL=resourceId.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/common/resourceId.js\n");

/***/ }),

/***/ "./lib/common/statusCodes.js":
/*!***********************************!*\
  !*** ./lib/common/statusCodes.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// tslint:disable:object-literal-key-quotes\nexports.StatusCodes = {\n    // Success\n    Ok: 200,\n    Created: 201,\n    Accepted: 202,\n    NoContent: 204,\n    NotModified: 304,\n    // Client error\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 403,\n    NotFound: 404,\n    MethodNotAllowed: 405,\n    RequestTimeout: 408,\n    Conflict: 409,\n    Gone: 410,\n    PreconditionFailed: 412,\n    RequestEntityTooLarge: 413,\n    TooManyRequests: 429,\n    RetryWith: 449,\n    // Server Error\n    InternalServerError: 500,\n    ServiceUnavailable: 503,\n    // Operation pause and cancel. These are FAKE status codes for QOS logging purpose only.\n    OperationPaused: 1200,\n    OperationCancelled: 1201\n};\nexports.SubStatusCodes = {\n    Unknown: 0,\n    // 400: Bad Request Substatus\n    CrossPartitionQueryNotServable: 1004,\n    // 410: StatusCodeType_Gone: substatus\n    PartitionKeyRangeGone: 1002,\n    // 404: NotFound Substatus\n    ReadSessionNotAvailable: 1002,\n    // 403: Forbidden Substatus\n    WriteForbidden: 3\n};\n//# sourceMappingURL=statusCodes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY29tbW9uL3N0YXR1c0NvZGVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2NvbW1vbi9zdGF0dXNDb2Rlcy5qcz83MmJmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8gdHNsaW50OmRpc2FibGU6b2JqZWN0LWxpdGVyYWwta2V5LXF1b3Rlc1xuZXhwb3J0cy5TdGF0dXNDb2RlcyA9IHtcbiAgICAvLyBTdWNjZXNzXG4gICAgT2s6IDIwMCxcbiAgICBDcmVhdGVkOiAyMDEsXG4gICAgQWNjZXB0ZWQ6IDIwMixcbiAgICBOb0NvbnRlbnQ6IDIwNCxcbiAgICBOb3RNb2RpZmllZDogMzA0LFxuICAgIC8vIENsaWVudCBlcnJvclxuICAgIEJhZFJlcXVlc3Q6IDQwMCxcbiAgICBVbmF1dGhvcml6ZWQ6IDQwMSxcbiAgICBGb3JiaWRkZW46IDQwMyxcbiAgICBOb3RGb3VuZDogNDA0LFxuICAgIE1ldGhvZE5vdEFsbG93ZWQ6IDQwNSxcbiAgICBSZXF1ZXN0VGltZW91dDogNDA4LFxuICAgIENvbmZsaWN0OiA0MDksXG4gICAgR29uZTogNDEwLFxuICAgIFByZWNvbmRpdGlvbkZhaWxlZDogNDEyLFxuICAgIFJlcXVlc3RFbnRpdHlUb29MYXJnZTogNDEzLFxuICAgIFRvb01hbnlSZXF1ZXN0czogNDI5LFxuICAgIFJldHJ5V2l0aDogNDQ5LFxuICAgIC8vIFNlcnZlciBFcnJvclxuICAgIEludGVybmFsU2VydmVyRXJyb3I6IDUwMCxcbiAgICBTZXJ2aWNlVW5hdmFpbGFibGU6IDUwMyxcbiAgICAvLyBPcGVyYXRpb24gcGF1c2UgYW5kIGNhbmNlbC4gVGhlc2UgYXJlIEZBS0Ugc3RhdHVzIGNvZGVzIGZvciBRT1MgbG9nZ2luZyBwdXJwb3NlIG9ubHkuXG4gICAgT3BlcmF0aW9uUGF1c2VkOiAxMjAwLFxuICAgIE9wZXJhdGlvbkNhbmNlbGxlZDogMTIwMVxufTtcbmV4cG9ydHMuU3ViU3RhdHVzQ29kZXMgPSB7XG4gICAgVW5rbm93bjogMCxcbiAgICAvLyA0MDA6IEJhZCBSZXF1ZXN0IFN1YnN0YXR1c1xuICAgIENyb3NzUGFydGl0aW9uUXVlcnlOb3RTZXJ2YWJsZTogMTAwNCxcbiAgICAvLyA0MTA6IFN0YXR1c0NvZGVUeXBlX0dvbmU6IHN1YnN0YXR1c1xuICAgIFBhcnRpdGlvbktleVJhbmdlR29uZTogMTAwMixcbiAgICAvLyA0MDQ6IE5vdEZvdW5kIFN1YnN0YXR1c1xuICAgIFJlYWRTZXNzaW9uTm90QXZhaWxhYmxlOiAxMDAyLFxuICAgIC8vIDQwMzogRm9yYmlkZGVuIFN1YnN0YXR1c1xuICAgIFdyaXRlRm9yYmlkZGVuOiAzXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RhdHVzQ29kZXMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/common/statusCodes.js\n");

/***/ }),

/***/ "./lib/common/uriFactory.js":
/*!**********************************!*\
  !*** ./lib/common/uriFactory.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _1 = __webpack_require__(/*! . */ \"./lib/common/index.js\");\n/** @hidden */\nclass UriFactory {\n    /**\n     * Given a database id, this creates a database link.\n     * @param {string} databaseId -The database id\n     * @returns {string}          -A database link in the format of dbs/{0} \\\n     * with {0} being a Uri escaped version of the databaseId\n     * @description Would be used when creating or deleting a DocumentCollection \\\n     * or a User in Azure Cosmos DB database service\n     */\n    static createDatabaseUri(databaseId) {\n        databaseId = _1.Helper.trimSlashFromLeftAndRight(databaseId);\n        _1.Helper.validateResourceId(databaseId);\n        return _1.Constants.Path.DatabasesPathSegment + \"/\" + databaseId;\n    }\n    /**\n     * Given a database and collection id, this creates a collection link.\n     * @param {string} databaseId        -The database id\n     * @param {string} collectionId      -The collection id\n     * @returns {string}                 A collection link in the format of dbs/{0}/colls/{1} \\\n     * with {0} being a Uri escaped version of the databaseId and {1} being collectionId\n     * @description Would be used when updating or deleting a DocumentCollection, creating a \\\n     * Document, a StoredProcedure, a Trigger, a UserDefinedFunction, or when executing a query \\\n     * with CreateDocumentQuery in Azure Cosmos DB database service.\n     */\n    static createDocumentCollectionUri(databaseId, collectionId) {\n        collectionId = _1.Helper.trimSlashFromLeftAndRight(collectionId);\n        _1.Helper.validateResourceId(collectionId);\n        return this.createDatabaseUri(databaseId) + \"/\" + _1.Constants.Path.CollectionsPathSegment + \"/\" + collectionId;\n    }\n    /**\n     * Given a database and user id, this creates a user link.\n     * @param {string} databaseId        -The database id\n     * @param {string} userId            -The user id\n     * @returns {string}                 A user link in the format of dbs/{0}/users/{1} \\\n     * with {0} being a Uri escaped version of the databaseId and {1} being userId\n     * @description Would be used when creating a Permission, or when replacing or deleting \\\n     * a User in Azure Cosmos DB database service\n     */\n    static createUserUri(databaseId, userId) {\n        userId = _1.Helper.trimSlashFromLeftAndRight(userId);\n        _1.Helper.validateResourceId(userId);\n        return this.createDatabaseUri(databaseId) + \"/\" + _1.Constants.Path.UsersPathSegment + \"/\" + userId;\n    }\n    /**\n     * Given a database and collection id, this creates a collection link.\n     * @param {string} databaseId        -The database id\n     * @param {string} collectionId      -The collection id\n     * @param {string} documentId        -The document id\n     * @returns {string}                 -A document link in the format of \\\n     * dbs/{0}/colls/{1}/docs/{2} with {0} being a Uri escaped version of \\\n     * the databaseId, {1} being collectionId and {2} being the documentId\n     * @description Would be used when creating an Attachment, or when replacing \\\n     * or deleting a Document in Azure Cosmos DB database service\n     */\n    static createDocumentUri(databaseId, collectionId, documentId) {\n        documentId = _1.Helper.trimSlashFromLeftAndRight(documentId);\n        _1.Helper.validateResourceId(documentId);\n        return (this.createDocumentCollectionUri(databaseId, collectionId) +\n            \"/\" +\n            _1.Constants.Path.DocumentsPathSegment +\n            \"/\" +\n            documentId);\n    }\n    /**\n     * Given a database, collection and document id, this creates a document link.\n     * @param {string} databaseId    -The database Id\n     * @param {string} userId        -The user Id\n     * @param {string} permissionId  - The permissionId\n     * @returns {string} A permission link in the format of dbs/{0}/users/{1}/permissions/{2} \\\n     * with {0} being a Uri escaped version of the databaseId, {1} being userId and {2} being permissionId\n     * @description Would be used when replacing or deleting a Permission in Azure Cosmos DB database service.\n     */\n    static createPermissionUri(databaseId, userId, permissionId) {\n        permissionId = _1.Helper.trimSlashFromLeftAndRight(permissionId);\n        _1.Helper.validateResourceId(permissionId);\n        return this.createUserUri(databaseId, userId) + \"/\" + _1.Constants.Path.PermissionsPathSegment + \"/\" + permissionId;\n    }\n    /**\n     * Given a database, collection and stored proc id, this creates a stored proc link.\n     * @param {string} databaseId        -The database Id\n     * @param {string} collectionId      -The collection Id\n     * @param {string} storedProcedureId -The stored procedure Id\n     * @returns {string}                 -A stored procedure link in the format of \\\n     * dbs/{0}/colls/{1}/sprocs/{2} with {0} being a Uri escaped version of the databaseId, \\\n     * {1} being collectionId and {2} being the storedProcedureId\n     * @description Would be used when replacing, executing, or deleting a StoredProcedure in \\\n     * Azure Cosmos DB database service.\n     */\n    static createStoredProcedureUri(databaseId, collectionId, storedProcedureId) {\n        storedProcedureId = _1.Helper.trimSlashFromLeftAndRight(storedProcedureId);\n        _1.Helper.validateResourceId(storedProcedureId);\n        return (UriFactory.createDocumentCollectionUri(databaseId, collectionId) +\n            \"/\" +\n            _1.Constants.Path.StoredProceduresPathSegment +\n            \"/\" +\n            storedProcedureId);\n    }\n    /**\n     * @summary Given a database, collection and trigger id, this creates a trigger link.\n     * @param {string} databaseId        -The database Id\n     * @param {string} collectionId      -The collection Id\n     * @param {string} triggerId         -The trigger Id\n     * @returns {string}                 -A trigger link in the format of \\\n     * dbs/{0}/colls/{1}/triggers/{2} with {0} being a Uri escaped version of the databaseId, \\\n     * {1} being collectionId and {2} being the triggerId\n     * @description Would be used when replacing, executing, or deleting a Trigger in Azure Cosmos DB database service\n     */\n    static createTriggerUri(databaseId, collectionId, triggerId) {\n        triggerId = _1.Helper.trimSlashFromLeftAndRight(triggerId);\n        _1.Helper.validateResourceId(triggerId);\n        return (this.createDocumentCollectionUri(databaseId, collectionId) +\n            \"/\" +\n            _1.Constants.Path.TriggersPathSegment +\n            \"/\" +\n            triggerId);\n    }\n    /**\n     * @summary Given a database, collection and udf id, this creates a udf link.\n     * @param {string} databaseId        -The database Id\n     * @param {string} collectionId      -The collection Id\n     * @param {string} udfId             -The User Defined Function Id\n     * @returns {string}                 -A udf link in the format of dbs/{0}/colls/{1}/udfs/{2} \\\n     * with {0} being a Uri escaped version of the databaseId, {1} being collectionId and {2} being the udfId\n     * @description Would be used when replacing, executing, or deleting a UserDefinedFunction in \\\n     * Azure Cosmos DB database service\n     */\n    static createUserDefinedFunctionUri(databaseId, collectionId, udfId) {\n        udfId = _1.Helper.trimSlashFromLeftAndRight(udfId);\n        _1.Helper.validateResourceId(udfId);\n        return (this.createDocumentCollectionUri(databaseId, collectionId) +\n            \"/\" +\n            _1.Constants.Path.UserDefinedFunctionsPathSegment +\n            \"/\" +\n            udfId);\n    }\n    /**\n     * @summary Given a database, collection and conflict id, this creates a conflict link.\n     * @param {string} databaseId        -The database Id\n     * @param {string} collectionId      -The collection Id\n     * @param {string} conflictId        -The conflict Id\n     * @returns {string}                 -A conflict link in the format of dbs/{0}/colls/{1}/conflicts/{2} \\\n     * with {0} being a Uri escaped version of the databaseId, {1} being collectionId and {2} being the conflictId\n     * @description Would be used when creating a Conflict in Azure Cosmos DB database service.\n     */\n    static createConflictUri(databaseId, collectionId, conflictId) {\n        conflictId = _1.Helper.trimSlashFromLeftAndRight(conflictId);\n        _1.Helper.validateResourceId(conflictId);\n        return (this.createDocumentCollectionUri(databaseId, collectionId) +\n            \"/\" +\n            _1.Constants.Path.ConflictsPathSegment +\n            \"/\" +\n            conflictId);\n    }\n    /**\n     * @summary Given a database, collection and conflict id, this creates a conflict link.\n     * @param {string} databaseId        -The database Id\n     * @param {string} collectionId      -The collection Id\n     * @param {string} documentId        -The document Id\\\n     * @param {string} attachmentId      -The attachment Id\n     * @returns {string}                 -A conflict link in the format of dbs/{0}/colls/{1}/conflicts/{2} \\\n     * with {0} being a Uri escaped version of the databaseId, {1} being collectionId and {2} being the conflictId\n     * @description Would be used when creating a Conflict in Azure Cosmos DB database service.\n     */\n    static createAttachmentUri(databaseId, collectionId, documentId, attachmentId) {\n        attachmentId = _1.Helper.trimSlashFromLeftAndRight(attachmentId);\n        _1.Helper.validateResourceId(attachmentId);\n        return (this.createDocumentUri(databaseId, collectionId, documentId) +\n            \"/\" +\n            _1.Constants.Path.AttachmentsPathSegment +\n            \"/\" +\n            attachmentId);\n    }\n    /**\n     * @summary Given a database and collection, this creates a partition key ranges link in\\\n     *  the Azure Cosmos DB database service.\n     * @param {string} databaseId        -The database Id\n     * @param {string} collectionId      -The collection Id\n     * @returns {string}                 -A partition key ranges link in the format of \\\n     * dbs/{0}/colls/{1}/pkranges with {0} being a Uri escaped version of the databaseId and {1} being collectionId\n     */\n    static createPartitionKeyRangesUri(databaseId, collectionId) {\n        return (this.createDocumentCollectionUri(databaseId, collectionId) + \"/\" + _1.Constants.Path.PartitionKeyRangesPathSegment);\n    }\n}\nexports.UriFactory = UriFactory;\n//# sourceMappingURL=uriFactory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/common/uriFactory.js\n");

/***/ }),

/***/ "./lib/documents/ConnectionMode.js":
/*!*****************************************!*\
  !*** ./lib/documents/ConnectionMode.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Determines the connection behavior of the CosmosClient. Note, we currently only support Gateway Mode. */\nvar ConnectionMode;\n(function (ConnectionMode) {\n    /** Gateway mode talks to a intermediate gateway which handles the direct communicationi with your individual partitions. */\n    ConnectionMode[ConnectionMode[\"Gateway\"] = 0] = \"Gateway\";\n})(ConnectionMode = exports.ConnectionMode || (exports.ConnectionMode = {}));\n//# sourceMappingURL=ConnectionMode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZG9jdW1lbnRzL0Nvbm5lY3Rpb25Nb2RlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2RvY3VtZW50cy9Db25uZWN0aW9uTW9kZS5qcz9jYTQ4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqIERldGVybWluZXMgdGhlIGNvbm5lY3Rpb24gYmVoYXZpb3Igb2YgdGhlIENvc21vc0NsaWVudC4gTm90ZSwgd2UgY3VycmVudGx5IG9ubHkgc3VwcG9ydCBHYXRld2F5IE1vZGUuICovXG52YXIgQ29ubmVjdGlvbk1vZGU7XG4oZnVuY3Rpb24gKENvbm5lY3Rpb25Nb2RlKSB7XG4gICAgLyoqIEdhdGV3YXkgbW9kZSB0YWxrcyB0byBhIGludGVybWVkaWF0ZSBnYXRld2F5IHdoaWNoIGhhbmRsZXMgdGhlIGRpcmVjdCBjb21tdW5pY2F0aW9uaSB3aXRoIHlvdXIgaW5kaXZpZHVhbCBwYXJ0aXRpb25zLiAqL1xuICAgIENvbm5lY3Rpb25Nb2RlW0Nvbm5lY3Rpb25Nb2RlW1wiR2F0ZXdheVwiXSA9IDBdID0gXCJHYXRld2F5XCI7XG59KShDb25uZWN0aW9uTW9kZSA9IGV4cG9ydHMuQ29ubmVjdGlvbk1vZGUgfHwgKGV4cG9ydHMuQ29ubmVjdGlvbk1vZGUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29ubmVjdGlvbk1vZGUuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/documents/ConnectionMode.js\n");

/***/ }),

/***/ "./lib/documents/ConnectionPolicy.js":
/*!*******************************************!*\
  !*** ./lib/documents/ConnectionPolicy.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _1 = __webpack_require__(/*! . */ \"./lib/documents/index.js\");\nconst retry_1 = __webpack_require__(/*! ../retry */ \"./lib/retry/index.js\");\n/**\n * Represents the Connection policy associated with a CosmosClient in the Azure Cosmos DB database service.\n */\nclass ConnectionPolicy {\n    constructor() {\n        /** Determines which mode to connect to Cosmos with. (Currently only supports Gateway option) */\n        this.ConnectionMode = _1.ConnectionMode.Gateway;\n        /** Attachment content (aka media) download mode. Should be one of the values of {@link MediaReadMode} */\n        this.MediaReadMode = _1.MediaReadMode.Buffered;\n        /** Time to wait for response from network peer for attachment content (aka media) operations. Represented in milliseconds. */\n        this.MediaRequestTimeout = ConnectionPolicy.defaultMediaRequestTimeout;\n        /** Request timeout (time to wait for response from network peer). Represented in milliseconds. */\n        this.RequestTimeout = ConnectionPolicy.defaultRequestTimeout;\n        /** Flag to enable/disable automatic redirecting of requests based on read/write operations. */\n        this.EnableEndpointDiscovery = true;\n        /** List of azure regions to be used as preferred locations for read requests. */\n        this.PreferredLocations = [];\n        /** RetryOptions instance which defines several configurable properties used during retry. */\n        this.RetryOptions = new retry_1.RetryOptions();\n        /**\n         * Flag to disable SSL verification for the requests. SSL verification is enabled by default. Don't set this when targeting production endpoints.\n         * This is intended to be used only when targeting emulator endpoint to avoid failing your requests with SSL related error.\n         */\n        this.DisableSSLVerification = false;\n        /** Http/Https proxy url */\n        this.ProxyUrl = \"\";\n        /**\n         * The flag that enables writes on any locations (regions) for geo-replicated database accounts in the Azure Cosmos DB service.\n         * Default is `false`.\n         */\n        this.UseMultipleWriteLocations = false;\n    }\n}\nConnectionPolicy.defaultRequestTimeout = 60000;\nConnectionPolicy.defaultMediaRequestTimeout = 300000;\nexports.ConnectionPolicy = ConnectionPolicy;\n//# sourceMappingURL=ConnectionPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZG9jdW1lbnRzL0Nvbm5lY3Rpb25Qb2xpY3kuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvZG9jdW1lbnRzL0Nvbm5lY3Rpb25Qb2xpY3kuanM/MDJjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IF8xID0gcmVxdWlyZShcIi5cIik7XG5jb25zdCByZXRyeV8xID0gcmVxdWlyZShcIi4uL3JldHJ5XCIpO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBDb25uZWN0aW9uIHBvbGljeSBhc3NvY2lhdGVkIHdpdGggYSBDb3Ntb3NDbGllbnQgaW4gdGhlIEF6dXJlIENvc21vcyBEQiBkYXRhYmFzZSBzZXJ2aWNlLlxuICovXG5jbGFzcyBDb25uZWN0aW9uUG9saWN5IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgLyoqIERldGVybWluZXMgd2hpY2ggbW9kZSB0byBjb25uZWN0IHRvIENvc21vcyB3aXRoLiAoQ3VycmVudGx5IG9ubHkgc3VwcG9ydHMgR2F0ZXdheSBvcHRpb24pICovXG4gICAgICAgIHRoaXMuQ29ubmVjdGlvbk1vZGUgPSBfMS5Db25uZWN0aW9uTW9kZS5HYXRld2F5O1xuICAgICAgICAvKiogQXR0YWNobWVudCBjb250ZW50IChha2EgbWVkaWEpIGRvd25sb2FkIG1vZGUuIFNob3VsZCBiZSBvbmUgb2YgdGhlIHZhbHVlcyBvZiB7QGxpbmsgTWVkaWFSZWFkTW9kZX0gKi9cbiAgICAgICAgdGhpcy5NZWRpYVJlYWRNb2RlID0gXzEuTWVkaWFSZWFkTW9kZS5CdWZmZXJlZDtcbiAgICAgICAgLyoqIFRpbWUgdG8gd2FpdCBmb3IgcmVzcG9uc2UgZnJvbSBuZXR3b3JrIHBlZXIgZm9yIGF0dGFjaG1lbnQgY29udGVudCAoYWthIG1lZGlhKSBvcGVyYXRpb25zLiBSZXByZXNlbnRlZCBpbiBtaWxsaXNlY29uZHMuICovXG4gICAgICAgIHRoaXMuTWVkaWFSZXF1ZXN0VGltZW91dCA9IENvbm5lY3Rpb25Qb2xpY3kuZGVmYXVsdE1lZGlhUmVxdWVzdFRpbWVvdXQ7XG4gICAgICAgIC8qKiBSZXF1ZXN0IHRpbWVvdXQgKHRpbWUgdG8gd2FpdCBmb3IgcmVzcG9uc2UgZnJvbSBuZXR3b3JrIHBlZXIpLiBSZXByZXNlbnRlZCBpbiBtaWxsaXNlY29uZHMuICovXG4gICAgICAgIHRoaXMuUmVxdWVzdFRpbWVvdXQgPSBDb25uZWN0aW9uUG9saWN5LmRlZmF1bHRSZXF1ZXN0VGltZW91dDtcbiAgICAgICAgLyoqIEZsYWcgdG8gZW5hYmxlL2Rpc2FibGUgYXV0b21hdGljIHJlZGlyZWN0aW5nIG9mIHJlcXVlc3RzIGJhc2VkIG9uIHJlYWQvd3JpdGUgb3BlcmF0aW9ucy4gKi9cbiAgICAgICAgdGhpcy5FbmFibGVFbmRwb2ludERpc2NvdmVyeSA9IHRydWU7XG4gICAgICAgIC8qKiBMaXN0IG9mIGF6dXJlIHJlZ2lvbnMgdG8gYmUgdXNlZCBhcyBwcmVmZXJyZWQgbG9jYXRpb25zIGZvciByZWFkIHJlcXVlc3RzLiAqL1xuICAgICAgICB0aGlzLlByZWZlcnJlZExvY2F0aW9ucyA9IFtdO1xuICAgICAgICAvKiogUmV0cnlPcHRpb25zIGluc3RhbmNlIHdoaWNoIGRlZmluZXMgc2V2ZXJhbCBjb25maWd1cmFibGUgcHJvcGVydGllcyB1c2VkIGR1cmluZyByZXRyeS4gKi9cbiAgICAgICAgdGhpcy5SZXRyeU9wdGlvbnMgPSBuZXcgcmV0cnlfMS5SZXRyeU9wdGlvbnMoKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZsYWcgdG8gZGlzYWJsZSBTU0wgdmVyaWZpY2F0aW9uIGZvciB0aGUgcmVxdWVzdHMuIFNTTCB2ZXJpZmljYXRpb24gaXMgZW5hYmxlZCBieSBkZWZhdWx0LiBEb24ndCBzZXQgdGhpcyB3aGVuIHRhcmdldGluZyBwcm9kdWN0aW9uIGVuZHBvaW50cy5cbiAgICAgICAgICogVGhpcyBpcyBpbnRlbmRlZCB0byBiZSB1c2VkIG9ubHkgd2hlbiB0YXJnZXRpbmcgZW11bGF0b3IgZW5kcG9pbnQgdG8gYXZvaWQgZmFpbGluZyB5b3VyIHJlcXVlc3RzIHdpdGggU1NMIHJlbGF0ZWQgZXJyb3IuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLkRpc2FibGVTU0xWZXJpZmljYXRpb24gPSBmYWxzZTtcbiAgICAgICAgLyoqIEh0dHAvSHR0cHMgcHJveHkgdXJsICovXG4gICAgICAgIHRoaXMuUHJveHlVcmwgPSBcIlwiO1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIGZsYWcgdGhhdCBlbmFibGVzIHdyaXRlcyBvbiBhbnkgbG9jYXRpb25zIChyZWdpb25zKSBmb3IgZ2VvLXJlcGxpY2F0ZWQgZGF0YWJhc2UgYWNjb3VudHMgaW4gdGhlIEF6dXJlIENvc21vcyBEQiBzZXJ2aWNlLlxuICAgICAgICAgKiBEZWZhdWx0IGlzIGBmYWxzZWAuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLlVzZU11bHRpcGxlV3JpdGVMb2NhdGlvbnMgPSBmYWxzZTtcbiAgICB9XG59XG5Db25uZWN0aW9uUG9saWN5LmRlZmF1bHRSZXF1ZXN0VGltZW91dCA9IDYwMDAwO1xuQ29ubmVjdGlvblBvbGljeS5kZWZhdWx0TWVkaWFSZXF1ZXN0VGltZW91dCA9IDMwMDAwMDtcbmV4cG9ydHMuQ29ubmVjdGlvblBvbGljeSA9IENvbm5lY3Rpb25Qb2xpY3k7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db25uZWN0aW9uUG9saWN5LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/documents/ConnectionPolicy.js\n");

/***/ }),

/***/ "./lib/documents/ConsistencyLevel.js":
/*!*******************************************!*\
  !*** ./lib/documents/ConsistencyLevel.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Represents the consistency levels supported for Azure Cosmos DB client operations.<br>\n * The requested ConsistencyLevel must match or be weaker than that provisioned for the database account.\n * Consistency levels.\n *\n * Consistency levels by order of strength are Strong, BoundedStaleness, Session, Consistent Prefix, and Eventual.\n *\n * See https://aka.ms/cosmos-consistency for more detailed documentation on Consistency Levels.\n */\nvar ConsistencyLevel;\n(function (ConsistencyLevel) {\n    /**\n     * Strong Consistency guarantees that read operations always return the value that was last written.\n     */\n    ConsistencyLevel[\"Strong\"] = \"Strong\";\n    /**\n     * Bounded Staleness guarantees that reads are not too out-of-date.\n     * This can be configured based on number of operations (MaxStalenessPrefix) or time (MaxStalenessIntervalInSeconds).\n     */\n    ConsistencyLevel[\"BoundedStaleness\"] = \"BoundedStaleness\";\n    /**\n     * Session Consistency guarantees monotonic reads (you never read old data, then new, then old again),\n     * monotonic writes (writes are ordered) and read your writes (your writes are immediately visible to your reads)\n     * within any single session.\n     */\n    ConsistencyLevel[\"Session\"] = \"Session\";\n    /**\n     * Eventual Consistency guarantees that reads will return a subset of writes.\n     * All writes will be eventually be available for reads.\n     */\n    ConsistencyLevel[\"Eventual\"] = \"Eventual\";\n    /**\n     * ConsistentPrefix Consistency guarantees that reads will return some prefix of all writes with no gaps.\n     * All writes will be eventually be available for reads.`\n     */\n    ConsistencyLevel[\"ConsistentPrefix\"] = \"ConsistentPrefix\";\n})(ConsistencyLevel = exports.ConsistencyLevel || (exports.ConsistencyLevel = {}));\n//# sourceMappingURL=ConsistencyLevel.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZG9jdW1lbnRzL0NvbnNpc3RlbmN5TGV2ZWwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvZG9jdW1lbnRzL0NvbnNpc3RlbmN5TGV2ZWwuanM/ZGVlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgY29uc2lzdGVuY3kgbGV2ZWxzIHN1cHBvcnRlZCBmb3IgQXp1cmUgQ29zbW9zIERCIGNsaWVudCBvcGVyYXRpb25zLjxicj5cbiAqIFRoZSByZXF1ZXN0ZWQgQ29uc2lzdGVuY3lMZXZlbCBtdXN0IG1hdGNoIG9yIGJlIHdlYWtlciB0aGFuIHRoYXQgcHJvdmlzaW9uZWQgZm9yIHRoZSBkYXRhYmFzZSBhY2NvdW50LlxuICogQ29uc2lzdGVuY3kgbGV2ZWxzLlxuICpcbiAqIENvbnNpc3RlbmN5IGxldmVscyBieSBvcmRlciBvZiBzdHJlbmd0aCBhcmUgU3Ryb25nLCBCb3VuZGVkU3RhbGVuZXNzLCBTZXNzaW9uLCBDb25zaXN0ZW50IFByZWZpeCwgYW5kIEV2ZW50dWFsLlxuICpcbiAqIFNlZSBodHRwczovL2FrYS5tcy9jb3Ntb3MtY29uc2lzdGVuY3kgZm9yIG1vcmUgZGV0YWlsZWQgZG9jdW1lbnRhdGlvbiBvbiBDb25zaXN0ZW5jeSBMZXZlbHMuXG4gKi9cbnZhciBDb25zaXN0ZW5jeUxldmVsO1xuKGZ1bmN0aW9uIChDb25zaXN0ZW5jeUxldmVsKSB7XG4gICAgLyoqXG4gICAgICogU3Ryb25nIENvbnNpc3RlbmN5IGd1YXJhbnRlZXMgdGhhdCByZWFkIG9wZXJhdGlvbnMgYWx3YXlzIHJldHVybiB0aGUgdmFsdWUgdGhhdCB3YXMgbGFzdCB3cml0dGVuLlxuICAgICAqL1xuICAgIENvbnNpc3RlbmN5TGV2ZWxbXCJTdHJvbmdcIl0gPSBcIlN0cm9uZ1wiO1xuICAgIC8qKlxuICAgICAqIEJvdW5kZWQgU3RhbGVuZXNzIGd1YXJhbnRlZXMgdGhhdCByZWFkcyBhcmUgbm90IHRvbyBvdXQtb2YtZGF0ZS5cbiAgICAgKiBUaGlzIGNhbiBiZSBjb25maWd1cmVkIGJhc2VkIG9uIG51bWJlciBvZiBvcGVyYXRpb25zIChNYXhTdGFsZW5lc3NQcmVmaXgpIG9yIHRpbWUgKE1heFN0YWxlbmVzc0ludGVydmFsSW5TZWNvbmRzKS5cbiAgICAgKi9cbiAgICBDb25zaXN0ZW5jeUxldmVsW1wiQm91bmRlZFN0YWxlbmVzc1wiXSA9IFwiQm91bmRlZFN0YWxlbmVzc1wiO1xuICAgIC8qKlxuICAgICAqIFNlc3Npb24gQ29uc2lzdGVuY3kgZ3VhcmFudGVlcyBtb25vdG9uaWMgcmVhZHMgKHlvdSBuZXZlciByZWFkIG9sZCBkYXRhLCB0aGVuIG5ldywgdGhlbiBvbGQgYWdhaW4pLFxuICAgICAqIG1vbm90b25pYyB3cml0ZXMgKHdyaXRlcyBhcmUgb3JkZXJlZCkgYW5kIHJlYWQgeW91ciB3cml0ZXMgKHlvdXIgd3JpdGVzIGFyZSBpbW1lZGlhdGVseSB2aXNpYmxlIHRvIHlvdXIgcmVhZHMpXG4gICAgICogd2l0aGluIGFueSBzaW5nbGUgc2Vzc2lvbi5cbiAgICAgKi9cbiAgICBDb25zaXN0ZW5jeUxldmVsW1wiU2Vzc2lvblwiXSA9IFwiU2Vzc2lvblwiO1xuICAgIC8qKlxuICAgICAqIEV2ZW50dWFsIENvbnNpc3RlbmN5IGd1YXJhbnRlZXMgdGhhdCByZWFkcyB3aWxsIHJldHVybiBhIHN1YnNldCBvZiB3cml0ZXMuXG4gICAgICogQWxsIHdyaXRlcyB3aWxsIGJlIGV2ZW50dWFsbHkgYmUgYXZhaWxhYmxlIGZvciByZWFkcy5cbiAgICAgKi9cbiAgICBDb25zaXN0ZW5jeUxldmVsW1wiRXZlbnR1YWxcIl0gPSBcIkV2ZW50dWFsXCI7XG4gICAgLyoqXG4gICAgICogQ29uc2lzdGVudFByZWZpeCBDb25zaXN0ZW5jeSBndWFyYW50ZWVzIHRoYXQgcmVhZHMgd2lsbCByZXR1cm4gc29tZSBwcmVmaXggb2YgYWxsIHdyaXRlcyB3aXRoIG5vIGdhcHMuXG4gICAgICogQWxsIHdyaXRlcyB3aWxsIGJlIGV2ZW50dWFsbHkgYmUgYXZhaWxhYmxlIGZvciByZWFkcy5gXG4gICAgICovXG4gICAgQ29uc2lzdGVuY3lMZXZlbFtcIkNvbnNpc3RlbnRQcmVmaXhcIl0gPSBcIkNvbnNpc3RlbnRQcmVmaXhcIjtcbn0pKENvbnNpc3RlbmN5TGV2ZWwgPSBleHBvcnRzLkNvbnNpc3RlbmN5TGV2ZWwgfHwgKGV4cG9ydHMuQ29uc2lzdGVuY3lMZXZlbCA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db25zaXN0ZW5jeUxldmVsLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/documents/ConsistencyLevel.js\n");

/***/ }),

/***/ "./lib/documents/DataType.js":
/*!***********************************!*\
  !*** ./lib/documents/DataType.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Defines a target data type of an index path specification in the Azure Cosmos DB service. */\nvar DataType;\n(function (DataType) {\n    /** Represents a numeric data type. */\n    DataType[\"Number\"] = \"Number\";\n    /** Represents a string data type. */\n    DataType[\"String\"] = \"String\";\n    /** Represents a point data type. */\n    DataType[\"Point\"] = \"Point\";\n    /** Represents a line string data type. */\n    DataType[\"LineString\"] = \"LineString\";\n    /** Represents a polygon data type. */\n    DataType[\"Polygon\"] = \"Polygon\";\n})(DataType = exports.DataType || (exports.DataType = {}));\n//# sourceMappingURL=DataType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZG9jdW1lbnRzL0RhdGFUeXBlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2RvY3VtZW50cy9EYXRhVHlwZS5qcz84YmIxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqIERlZmluZXMgYSB0YXJnZXQgZGF0YSB0eXBlIG9mIGFuIGluZGV4IHBhdGggc3BlY2lmaWNhdGlvbiBpbiB0aGUgQXp1cmUgQ29zbW9zIERCIHNlcnZpY2UuICovXG52YXIgRGF0YVR5cGU7XG4oZnVuY3Rpb24gKERhdGFUeXBlKSB7XG4gICAgLyoqIFJlcHJlc2VudHMgYSBudW1lcmljIGRhdGEgdHlwZS4gKi9cbiAgICBEYXRhVHlwZVtcIk51bWJlclwiXSA9IFwiTnVtYmVyXCI7XG4gICAgLyoqIFJlcHJlc2VudHMgYSBzdHJpbmcgZGF0YSB0eXBlLiAqL1xuICAgIERhdGFUeXBlW1wiU3RyaW5nXCJdID0gXCJTdHJpbmdcIjtcbiAgICAvKiogUmVwcmVzZW50cyBhIHBvaW50IGRhdGEgdHlwZS4gKi9cbiAgICBEYXRhVHlwZVtcIlBvaW50XCJdID0gXCJQb2ludFwiO1xuICAgIC8qKiBSZXByZXNlbnRzIGEgbGluZSBzdHJpbmcgZGF0YSB0eXBlLiAqL1xuICAgIERhdGFUeXBlW1wiTGluZVN0cmluZ1wiXSA9IFwiTGluZVN0cmluZ1wiO1xuICAgIC8qKiBSZXByZXNlbnRzIGEgcG9seWdvbiBkYXRhIHR5cGUuICovXG4gICAgRGF0YVR5cGVbXCJQb2x5Z29uXCJdID0gXCJQb2x5Z29uXCI7XG59KShEYXRhVHlwZSA9IGV4cG9ydHMuRGF0YVR5cGUgfHwgKGV4cG9ydHMuRGF0YVR5cGUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RGF0YVR5cGUuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/documents/DataType.js\n");

/***/ }),

/***/ "./lib/documents/DatabaseAccount.js":
/*!******************************************!*\
  !*** ./lib/documents/DatabaseAccount.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _1 = __webpack_require__(/*! . */ \"./lib/documents/index.js\");\nconst common_1 = __webpack_require__(/*! ../common */ \"./lib/common/index.js\");\n/**\n * Represents a DatabaseAccount in the Azure Cosmos DB database service.\n */\nclass DatabaseAccount {\n    // TODO: body - any\n    constructor(body, headers) {\n        /** The list of writable locations for a geo-replicated database account. */\n        this.writableLocations = [];\n        /** The list of readable locations for a geo-replicated database account. */\n        this.readableLocations = [];\n        this.DatabasesLink = \"/dbs/\";\n        this.MediaLink = \"/media/\";\n        this.MaxMediaStorageUsageInMB = headers[common_1.Constants.HttpHeaders.MaxMediaStorageUsageInMB];\n        this.CurrentMediaStorageUsageInMB = headers[common_1.Constants.HttpHeaders.CurrentMediaStorageUsageInMB];\n        this.ConsistencyPolicy = body.UserConsistencyPolicy\n            ? body.UserConsistencyPolicy.defaultConsistencyLevel\n            : _1.ConsistencyLevel.Session;\n        if (body[common_1.Constants.WritableLocations] && body.id !== \"localhost\") {\n            this.writableLocations = body[common_1.Constants.WritableLocations];\n        }\n        if (body[common_1.Constants.ReadableLocations] && body.id !== \"localhost\") {\n            this.readableLocations = body[common_1.Constants.ReadableLocations];\n        }\n        if (body[common_1.Constants.ENABLE_MULTIPLE_WRITABLE_LOCATIONS]) {\n            this.enableMultipleWritableLocations =\n                body[common_1.Constants.ENABLE_MULTIPLE_WRITABLE_LOCATIONS] === true ||\n                    body[common_1.Constants.ENABLE_MULTIPLE_WRITABLE_LOCATIONS] === \"true\";\n        }\n    }\n}\nexports.DatabaseAccount = DatabaseAccount;\n//# sourceMappingURL=DatabaseAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZG9jdW1lbnRzL0RhdGFiYXNlQWNjb3VudC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9kb2N1bWVudHMvRGF0YWJhc2VBY2NvdW50LmpzP2FmMmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBfMSA9IHJlcXVpcmUoXCIuXCIpO1xuY29uc3QgY29tbW9uXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uXCIpO1xuLyoqXG4gKiBSZXByZXNlbnRzIGEgRGF0YWJhc2VBY2NvdW50IGluIHRoZSBBenVyZSBDb3Ntb3MgREIgZGF0YWJhc2Ugc2VydmljZS5cbiAqL1xuY2xhc3MgRGF0YWJhc2VBY2NvdW50IHtcbiAgICAvLyBUT0RPOiBib2R5IC0gYW55XG4gICAgY29uc3RydWN0b3IoYm9keSwgaGVhZGVycykge1xuICAgICAgICAvKiogVGhlIGxpc3Qgb2Ygd3JpdGFibGUgbG9jYXRpb25zIGZvciBhIGdlby1yZXBsaWNhdGVkIGRhdGFiYXNlIGFjY291bnQuICovXG4gICAgICAgIHRoaXMud3JpdGFibGVMb2NhdGlvbnMgPSBbXTtcbiAgICAgICAgLyoqIFRoZSBsaXN0IG9mIHJlYWRhYmxlIGxvY2F0aW9ucyBmb3IgYSBnZW8tcmVwbGljYXRlZCBkYXRhYmFzZSBhY2NvdW50LiAqL1xuICAgICAgICB0aGlzLnJlYWRhYmxlTG9jYXRpb25zID0gW107XG4gICAgICAgIHRoaXMuRGF0YWJhc2VzTGluayA9IFwiL2Ricy9cIjtcbiAgICAgICAgdGhpcy5NZWRpYUxpbmsgPSBcIi9tZWRpYS9cIjtcbiAgICAgICAgdGhpcy5NYXhNZWRpYVN0b3JhZ2VVc2FnZUluTUIgPSBoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5NYXhNZWRpYVN0b3JhZ2VVc2FnZUluTUJdO1xuICAgICAgICB0aGlzLkN1cnJlbnRNZWRpYVN0b3JhZ2VVc2FnZUluTUIgPSBoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5DdXJyZW50TWVkaWFTdG9yYWdlVXNhZ2VJbk1CXTtcbiAgICAgICAgdGhpcy5Db25zaXN0ZW5jeVBvbGljeSA9IGJvZHkuVXNlckNvbnNpc3RlbmN5UG9saWN5XG4gICAgICAgICAgICA/IGJvZHkuVXNlckNvbnNpc3RlbmN5UG9saWN5LmRlZmF1bHRDb25zaXN0ZW5jeUxldmVsXG4gICAgICAgICAgICA6IF8xLkNvbnNpc3RlbmN5TGV2ZWwuU2Vzc2lvbjtcbiAgICAgICAgaWYgKGJvZHlbY29tbW9uXzEuQ29uc3RhbnRzLldyaXRhYmxlTG9jYXRpb25zXSAmJiBib2R5LmlkICE9PSBcImxvY2FsaG9zdFwiKSB7XG4gICAgICAgICAgICB0aGlzLndyaXRhYmxlTG9jYXRpb25zID0gYm9keVtjb21tb25fMS5Db25zdGFudHMuV3JpdGFibGVMb2NhdGlvbnNdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChib2R5W2NvbW1vbl8xLkNvbnN0YW50cy5SZWFkYWJsZUxvY2F0aW9uc10gJiYgYm9keS5pZCAhPT0gXCJsb2NhbGhvc3RcIikge1xuICAgICAgICAgICAgdGhpcy5yZWFkYWJsZUxvY2F0aW9ucyA9IGJvZHlbY29tbW9uXzEuQ29uc3RhbnRzLlJlYWRhYmxlTG9jYXRpb25zXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYm9keVtjb21tb25fMS5Db25zdGFudHMuRU5BQkxFX01VTFRJUExFX1dSSVRBQkxFX0xPQ0FUSU9OU10pIHtcbiAgICAgICAgICAgIHRoaXMuZW5hYmxlTXVsdGlwbGVXcml0YWJsZUxvY2F0aW9ucyA9XG4gICAgICAgICAgICAgICAgYm9keVtjb21tb25fMS5Db25zdGFudHMuRU5BQkxFX01VTFRJUExFX1dSSVRBQkxFX0xPQ0FUSU9OU10gPT09IHRydWUgfHxcbiAgICAgICAgICAgICAgICAgICAgYm9keVtjb21tb25fMS5Db25zdGFudHMuRU5BQkxFX01VTFRJUExFX1dSSVRBQkxFX0xPQ0FUSU9OU10gPT09IFwidHJ1ZVwiO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5EYXRhYmFzZUFjY291bnQgPSBEYXRhYmFzZUFjY291bnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1EYXRhYmFzZUFjY291bnQuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/documents/DatabaseAccount.js\n");

/***/ }),

/***/ "./lib/documents/IndexKind.js":
/*!************************************!*\
  !*** ./lib/documents/IndexKind.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Specifies the supported Index types.\n */\nvar IndexKind;\n(function (IndexKind) {\n    /**\n     * This is supplied for a path which has no sorting requirement. This kind of an index has better precision than corresponding range index.\n     */\n    IndexKind[\"Hash\"] = \"Hash\";\n    /**\n     * This is supplied for a path which requires sorting.\n     */\n    IndexKind[\"Range\"] = \"Range\";\n    /**\n     * This is supplied for a path which requires geospatial indexing.\n     */\n    IndexKind[\"Spatial\"] = \"Spatial\";\n})(IndexKind = exports.IndexKind || (exports.IndexKind = {}));\n//# sourceMappingURL=IndexKind.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZG9jdW1lbnRzL0luZGV4S2luZC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9kb2N1bWVudHMvSW5kZXhLaW5kLmpzP2YzYjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKipcbiAqIFNwZWNpZmllcyB0aGUgc3VwcG9ydGVkIEluZGV4IHR5cGVzLlxuICovXG52YXIgSW5kZXhLaW5kO1xuKGZ1bmN0aW9uIChJbmRleEtpbmQpIHtcbiAgICAvKipcbiAgICAgKiBUaGlzIGlzIHN1cHBsaWVkIGZvciBhIHBhdGggd2hpY2ggaGFzIG5vIHNvcnRpbmcgcmVxdWlyZW1lbnQuIFRoaXMga2luZCBvZiBhbiBpbmRleCBoYXMgYmV0dGVyIHByZWNpc2lvbiB0aGFuIGNvcnJlc3BvbmRpbmcgcmFuZ2UgaW5kZXguXG4gICAgICovXG4gICAgSW5kZXhLaW5kW1wiSGFzaFwiXSA9IFwiSGFzaFwiO1xuICAgIC8qKlxuICAgICAqIFRoaXMgaXMgc3VwcGxpZWQgZm9yIGEgcGF0aCB3aGljaCByZXF1aXJlcyBzb3J0aW5nLlxuICAgICAqL1xuICAgIEluZGV4S2luZFtcIlJhbmdlXCJdID0gXCJSYW5nZVwiO1xuICAgIC8qKlxuICAgICAqIFRoaXMgaXMgc3VwcGxpZWQgZm9yIGEgcGF0aCB3aGljaCByZXF1aXJlcyBnZW9zcGF0aWFsIGluZGV4aW5nLlxuICAgICAqL1xuICAgIEluZGV4S2luZFtcIlNwYXRpYWxcIl0gPSBcIlNwYXRpYWxcIjtcbn0pKEluZGV4S2luZCA9IGV4cG9ydHMuSW5kZXhLaW5kIHx8IChleHBvcnRzLkluZGV4S2luZCA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JbmRleEtpbmQuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/documents/IndexKind.js\n");

/***/ }),

/***/ "./lib/documents/IndexingMode.js":
/*!***************************************!*\
  !*** ./lib/documents/IndexingMode.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Specifies the supported indexing modes.\n * @property Consistent\n * @property Lazy\n */\nvar IndexingMode;\n(function (IndexingMode) {\n    /**\n     * Index is updated synchronously with a create or update operation.\n     *\n     * With consistent indexing, query behavior is the same as the default consistency level for the container.\n     * The index is always kept up to date with the data.\n     */\n    IndexingMode[\"consistent\"] = \"consistent\";\n    /**\n     * Index is updated asynchronously with respect to a create or update operation.\n     *\n     * With lazy indexing, queries are eventually consistent. The index is updated when the container is idle.\n     */\n    IndexingMode[\"lazy\"] = \"lazy\";\n    /** No Index is provided. */\n    IndexingMode[\"none\"] = \"none\";\n})(IndexingMode = exports.IndexingMode || (exports.IndexingMode = {}));\n//# sourceMappingURL=IndexingMode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZG9jdW1lbnRzL0luZGV4aW5nTW9kZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9kb2N1bWVudHMvSW5kZXhpbmdNb2RlLmpzPzA3ZTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKipcbiAqIFNwZWNpZmllcyB0aGUgc3VwcG9ydGVkIGluZGV4aW5nIG1vZGVzLlxuICogQHByb3BlcnR5IENvbnNpc3RlbnRcbiAqIEBwcm9wZXJ0eSBMYXp5XG4gKi9cbnZhciBJbmRleGluZ01vZGU7XG4oZnVuY3Rpb24gKEluZGV4aW5nTW9kZSkge1xuICAgIC8qKlxuICAgICAqIEluZGV4IGlzIHVwZGF0ZWQgc3luY2hyb25vdXNseSB3aXRoIGEgY3JlYXRlIG9yIHVwZGF0ZSBvcGVyYXRpb24uXG4gICAgICpcbiAgICAgKiBXaXRoIGNvbnNpc3RlbnQgaW5kZXhpbmcsIHF1ZXJ5IGJlaGF2aW9yIGlzIHRoZSBzYW1lIGFzIHRoZSBkZWZhdWx0IGNvbnNpc3RlbmN5IGxldmVsIGZvciB0aGUgY29udGFpbmVyLlxuICAgICAqIFRoZSBpbmRleCBpcyBhbHdheXMga2VwdCB1cCB0byBkYXRlIHdpdGggdGhlIGRhdGEuXG4gICAgICovXG4gICAgSW5kZXhpbmdNb2RlW1wiY29uc2lzdGVudFwiXSA9IFwiY29uc2lzdGVudFwiO1xuICAgIC8qKlxuICAgICAqIEluZGV4IGlzIHVwZGF0ZWQgYXN5bmNocm9ub3VzbHkgd2l0aCByZXNwZWN0IHRvIGEgY3JlYXRlIG9yIHVwZGF0ZSBvcGVyYXRpb24uXG4gICAgICpcbiAgICAgKiBXaXRoIGxhenkgaW5kZXhpbmcsIHF1ZXJpZXMgYXJlIGV2ZW50dWFsbHkgY29uc2lzdGVudC4gVGhlIGluZGV4IGlzIHVwZGF0ZWQgd2hlbiB0aGUgY29udGFpbmVyIGlzIGlkbGUuXG4gICAgICovXG4gICAgSW5kZXhpbmdNb2RlW1wibGF6eVwiXSA9IFwibGF6eVwiO1xuICAgIC8qKiBObyBJbmRleCBpcyBwcm92aWRlZC4gKi9cbiAgICBJbmRleGluZ01vZGVbXCJub25lXCJdID0gXCJub25lXCI7XG59KShJbmRleGluZ01vZGUgPSBleHBvcnRzLkluZGV4aW5nTW9kZSB8fCAoZXhwb3J0cy5JbmRleGluZ01vZGUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SW5kZXhpbmdNb2RlLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/documents/IndexingMode.js\n");

/***/ }),

/***/ "./lib/documents/MediaReadMode.js":
/*!****************************************!*\
  !*** ./lib/documents/MediaReadMode.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Enum for media read mode values.\n */\nvar MediaReadMode;\n(function (MediaReadMode) {\n    /**\n     * Content is buffered at the client and not directly streamed from the content store.\n     * <p>Use Buffered to reduce the time taken to read and write media files.</p>\n     */\n    MediaReadMode[\"Buffered\"] = \"Buffered\";\n    /**\n     * Content is directly streamed from the content store without any buffering at the client.\n     * <p>Use Streamed to reduce the client memory overhead of reading and writing media files. </p>\n     */\n    MediaReadMode[\"Streamed\"] = \"Streamed\";\n})(MediaReadMode = exports.MediaReadMode || (exports.MediaReadMode = {}));\n//# sourceMappingURL=MediaReadMode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZG9jdW1lbnRzL01lZGlhUmVhZE1vZGUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvZG9jdW1lbnRzL01lZGlhUmVhZE1vZGUuanM/YzkzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKlxuICogRW51bSBmb3IgbWVkaWEgcmVhZCBtb2RlIHZhbHVlcy5cbiAqL1xudmFyIE1lZGlhUmVhZE1vZGU7XG4oZnVuY3Rpb24gKE1lZGlhUmVhZE1vZGUpIHtcbiAgICAvKipcbiAgICAgKiBDb250ZW50IGlzIGJ1ZmZlcmVkIGF0IHRoZSBjbGllbnQgYW5kIG5vdCBkaXJlY3RseSBzdHJlYW1lZCBmcm9tIHRoZSBjb250ZW50IHN0b3JlLlxuICAgICAqIDxwPlVzZSBCdWZmZXJlZCB0byByZWR1Y2UgdGhlIHRpbWUgdGFrZW4gdG8gcmVhZCBhbmQgd3JpdGUgbWVkaWEgZmlsZXMuPC9wPlxuICAgICAqL1xuICAgIE1lZGlhUmVhZE1vZGVbXCJCdWZmZXJlZFwiXSA9IFwiQnVmZmVyZWRcIjtcbiAgICAvKipcbiAgICAgKiBDb250ZW50IGlzIGRpcmVjdGx5IHN0cmVhbWVkIGZyb20gdGhlIGNvbnRlbnQgc3RvcmUgd2l0aG91dCBhbnkgYnVmZmVyaW5nIGF0IHRoZSBjbGllbnQuXG4gICAgICogPHA+VXNlIFN0cmVhbWVkIHRvIHJlZHVjZSB0aGUgY2xpZW50IG1lbW9yeSBvdmVyaGVhZCBvZiByZWFkaW5nIGFuZCB3cml0aW5nIG1lZGlhIGZpbGVzLiA8L3A+XG4gICAgICovXG4gICAgTWVkaWFSZWFkTW9kZVtcIlN0cmVhbWVkXCJdID0gXCJTdHJlYW1lZFwiO1xufSkoTWVkaWFSZWFkTW9kZSA9IGV4cG9ydHMuTWVkaWFSZWFkTW9kZSB8fCAoZXhwb3J0cy5NZWRpYVJlYWRNb2RlID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1lZGlhUmVhZE1vZGUuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/documents/MediaReadMode.js\n");

/***/ }),

/***/ "./lib/documents/PartitionKind.js":
/*!****************************************!*\
  !*** ./lib/documents/PartitionKind.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PartitionKind;\n(function (PartitionKind) {\n    PartitionKind[\"Hash\"] = \"Hash\";\n})(PartitionKind = exports.PartitionKind || (exports.PartitionKind = {}));\n//# sourceMappingURL=PartitionKind.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZG9jdW1lbnRzL1BhcnRpdGlvbktpbmQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvZG9jdW1lbnRzL1BhcnRpdGlvbktpbmQuanM/ODk1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBQYXJ0aXRpb25LaW5kO1xuKGZ1bmN0aW9uIChQYXJ0aXRpb25LaW5kKSB7XG4gICAgUGFydGl0aW9uS2luZFtcIkhhc2hcIl0gPSBcIkhhc2hcIjtcbn0pKFBhcnRpdGlvbktpbmQgPSBleHBvcnRzLlBhcnRpdGlvbktpbmQgfHwgKGV4cG9ydHMuUGFydGl0aW9uS2luZCA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1QYXJ0aXRpb25LaW5kLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/documents/PartitionKind.js\n");

/***/ }),

/***/ "./lib/documents/PermissionMode.js":
/*!*****************************************!*\
  !*** ./lib/documents/PermissionMode.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Enum for permission mode values.\n */\nvar PermissionMode;\n(function (PermissionMode) {\n    /** Permission not valid. */\n    PermissionMode[\"None\"] = \"none\";\n    /** Permission applicable for read operations only. */\n    PermissionMode[\"Read\"] = \"read\";\n    /** Permission applicable for all operations. */\n    PermissionMode[\"All\"] = \"all\";\n})(PermissionMode = exports.PermissionMode || (exports.PermissionMode = {}));\n//# sourceMappingURL=PermissionMode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZG9jdW1lbnRzL1Blcm1pc3Npb25Nb2RlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2RvY3VtZW50cy9QZXJtaXNzaW9uTW9kZS5qcz8yOTBiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqXG4gKiBFbnVtIGZvciBwZXJtaXNzaW9uIG1vZGUgdmFsdWVzLlxuICovXG52YXIgUGVybWlzc2lvbk1vZGU7XG4oZnVuY3Rpb24gKFBlcm1pc3Npb25Nb2RlKSB7XG4gICAgLyoqIFBlcm1pc3Npb24gbm90IHZhbGlkLiAqL1xuICAgIFBlcm1pc3Npb25Nb2RlW1wiTm9uZVwiXSA9IFwibm9uZVwiO1xuICAgIC8qKiBQZXJtaXNzaW9uIGFwcGxpY2FibGUgZm9yIHJlYWQgb3BlcmF0aW9ucyBvbmx5LiAqL1xuICAgIFBlcm1pc3Npb25Nb2RlW1wiUmVhZFwiXSA9IFwicmVhZFwiO1xuICAgIC8qKiBQZXJtaXNzaW9uIGFwcGxpY2FibGUgZm9yIGFsbCBvcGVyYXRpb25zLiAqL1xuICAgIFBlcm1pc3Npb25Nb2RlW1wiQWxsXCJdID0gXCJhbGxcIjtcbn0pKFBlcm1pc3Npb25Nb2RlID0gZXhwb3J0cy5QZXJtaXNzaW9uTW9kZSB8fCAoZXhwb3J0cy5QZXJtaXNzaW9uTW9kZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1QZXJtaXNzaW9uTW9kZS5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/documents/PermissionMode.js\n");

/***/ }),

/***/ "./lib/documents/QueryCompatibilityMode.js":
/*!*************************************************!*\
  !*** ./lib/documents/QueryCompatibilityMode.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// TODO: Should we remove this?\nvar QueryCompatibilityMode;\n(function (QueryCompatibilityMode) {\n    QueryCompatibilityMode[QueryCompatibilityMode[\"Default\"] = 0] = \"Default\";\n    QueryCompatibilityMode[QueryCompatibilityMode[\"Query\"] = 1] = \"Query\";\n    QueryCompatibilityMode[QueryCompatibilityMode[\"SqlQuery\"] = 2] = \"SqlQuery\";\n})(QueryCompatibilityMode = exports.QueryCompatibilityMode || (exports.QueryCompatibilityMode = {}));\n//# sourceMappingURL=QueryCompatibilityMode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZG9jdW1lbnRzL1F1ZXJ5Q29tcGF0aWJpbGl0eU1vZGUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvZG9jdW1lbnRzL1F1ZXJ5Q29tcGF0aWJpbGl0eU1vZGUuanM/MWQ5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIFRPRE86IFNob3VsZCB3ZSByZW1vdmUgdGhpcz9cbnZhciBRdWVyeUNvbXBhdGliaWxpdHlNb2RlO1xuKGZ1bmN0aW9uIChRdWVyeUNvbXBhdGliaWxpdHlNb2RlKSB7XG4gICAgUXVlcnlDb21wYXRpYmlsaXR5TW9kZVtRdWVyeUNvbXBhdGliaWxpdHlNb2RlW1wiRGVmYXVsdFwiXSA9IDBdID0gXCJEZWZhdWx0XCI7XG4gICAgUXVlcnlDb21wYXRpYmlsaXR5TW9kZVtRdWVyeUNvbXBhdGliaWxpdHlNb2RlW1wiUXVlcnlcIl0gPSAxXSA9IFwiUXVlcnlcIjtcbiAgICBRdWVyeUNvbXBhdGliaWxpdHlNb2RlW1F1ZXJ5Q29tcGF0aWJpbGl0eU1vZGVbXCJTcWxRdWVyeVwiXSA9IDJdID0gXCJTcWxRdWVyeVwiO1xufSkoUXVlcnlDb21wYXRpYmlsaXR5TW9kZSA9IGV4cG9ydHMuUXVlcnlDb21wYXRpYmlsaXR5TW9kZSB8fCAoZXhwb3J0cy5RdWVyeUNvbXBhdGliaWxpdHlNb2RlID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVF1ZXJ5Q29tcGF0aWJpbGl0eU1vZGUuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/documents/QueryCompatibilityMode.js\n");

/***/ }),

/***/ "./lib/documents/TriggerOperation.js":
/*!*******************************************!*\
  !*** ./lib/documents/TriggerOperation.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Enum for trigger operation values.\n * specifies the operations on which a trigger should be executed.\n */\nvar TriggerOperation;\n(function (TriggerOperation) {\n    /** All operations. */\n    TriggerOperation[\"All\"] = \"all\";\n    /** Create operations only. */\n    TriggerOperation[\"Create\"] = \"create\";\n    /** Update operations only. */\n    TriggerOperation[\"Update\"] = \"update\";\n    /** Delete operations only. */\n    TriggerOperation[\"Delete\"] = \"delete\";\n    /** Replace operations only. */\n    TriggerOperation[\"Replace\"] = \"replace\";\n})(TriggerOperation = exports.TriggerOperation || (exports.TriggerOperation = {}));\n//# sourceMappingURL=TriggerOperation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZG9jdW1lbnRzL1RyaWdnZXJPcGVyYXRpb24uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvZG9jdW1lbnRzL1RyaWdnZXJPcGVyYXRpb24uanM/ZmNmYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKlxuICogRW51bSBmb3IgdHJpZ2dlciBvcGVyYXRpb24gdmFsdWVzLlxuICogc3BlY2lmaWVzIHRoZSBvcGVyYXRpb25zIG9uIHdoaWNoIGEgdHJpZ2dlciBzaG91bGQgYmUgZXhlY3V0ZWQuXG4gKi9cbnZhciBUcmlnZ2VyT3BlcmF0aW9uO1xuKGZ1bmN0aW9uIChUcmlnZ2VyT3BlcmF0aW9uKSB7XG4gICAgLyoqIEFsbCBvcGVyYXRpb25zLiAqL1xuICAgIFRyaWdnZXJPcGVyYXRpb25bXCJBbGxcIl0gPSBcImFsbFwiO1xuICAgIC8qKiBDcmVhdGUgb3BlcmF0aW9ucyBvbmx5LiAqL1xuICAgIFRyaWdnZXJPcGVyYXRpb25bXCJDcmVhdGVcIl0gPSBcImNyZWF0ZVwiO1xuICAgIC8qKiBVcGRhdGUgb3BlcmF0aW9ucyBvbmx5LiAqL1xuICAgIFRyaWdnZXJPcGVyYXRpb25bXCJVcGRhdGVcIl0gPSBcInVwZGF0ZVwiO1xuICAgIC8qKiBEZWxldGUgb3BlcmF0aW9ucyBvbmx5LiAqL1xuICAgIFRyaWdnZXJPcGVyYXRpb25bXCJEZWxldGVcIl0gPSBcImRlbGV0ZVwiO1xuICAgIC8qKiBSZXBsYWNlIG9wZXJhdGlvbnMgb25seS4gKi9cbiAgICBUcmlnZ2VyT3BlcmF0aW9uW1wiUmVwbGFjZVwiXSA9IFwicmVwbGFjZVwiO1xufSkoVHJpZ2dlck9wZXJhdGlvbiA9IGV4cG9ydHMuVHJpZ2dlck9wZXJhdGlvbiB8fCAoZXhwb3J0cy5UcmlnZ2VyT3BlcmF0aW9uID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRyaWdnZXJPcGVyYXRpb24uanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/documents/TriggerOperation.js\n");

/***/ }),

/***/ "./lib/documents/TriggerType.js":
/*!**************************************!*\
  !*** ./lib/documents/TriggerType.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Enum for trigger type values.\n * Specifies the type of the trigger.\n */\nvar TriggerType;\n(function (TriggerType) {\n    /** Trigger should be executed before the associated operation(s). */\n    TriggerType[\"Pre\"] = \"pre\";\n    /** Trigger should be executed after the associated operation(s). */\n    TriggerType[\"Post\"] = \"post\";\n})(TriggerType = exports.TriggerType || (exports.TriggerType = {}));\n//# sourceMappingURL=TriggerType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZG9jdW1lbnRzL1RyaWdnZXJUeXBlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2RvY3VtZW50cy9UcmlnZ2VyVHlwZS5qcz8wNTY0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqXG4gKiBFbnVtIGZvciB0cmlnZ2VyIHR5cGUgdmFsdWVzLlxuICogU3BlY2lmaWVzIHRoZSB0eXBlIG9mIHRoZSB0cmlnZ2VyLlxuICovXG52YXIgVHJpZ2dlclR5cGU7XG4oZnVuY3Rpb24gKFRyaWdnZXJUeXBlKSB7XG4gICAgLyoqIFRyaWdnZXIgc2hvdWxkIGJlIGV4ZWN1dGVkIGJlZm9yZSB0aGUgYXNzb2NpYXRlZCBvcGVyYXRpb24ocykuICovXG4gICAgVHJpZ2dlclR5cGVbXCJQcmVcIl0gPSBcInByZVwiO1xuICAgIC8qKiBUcmlnZ2VyIHNob3VsZCBiZSBleGVjdXRlZCBhZnRlciB0aGUgYXNzb2NpYXRlZCBvcGVyYXRpb24ocykuICovXG4gICAgVHJpZ2dlclR5cGVbXCJQb3N0XCJdID0gXCJwb3N0XCI7XG59KShUcmlnZ2VyVHlwZSA9IGV4cG9ydHMuVHJpZ2dlclR5cGUgfHwgKGV4cG9ydHMuVHJpZ2dlclR5cGUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VHJpZ2dlclR5cGUuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/documents/TriggerType.js\n");

/***/ }),

/***/ "./lib/documents/UserDefinedFunctionType.js":
/*!**************************************************!*\
  !*** ./lib/documents/UserDefinedFunctionType.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Enum for udf type values.\n * Specifies the types of user defined functions.\n */\nvar UserDefinedFunctionType;\n(function (UserDefinedFunctionType) {\n    /** The User Defined Function is written in JavaScript. This is currently the only option. */\n    UserDefinedFunctionType[\"Javascript\"] = \"Javascript\";\n})(UserDefinedFunctionType = exports.UserDefinedFunctionType || (exports.UserDefinedFunctionType = {}));\n//# sourceMappingURL=UserDefinedFunctionType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZG9jdW1lbnRzL1VzZXJEZWZpbmVkRnVuY3Rpb25UeXBlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2RvY3VtZW50cy9Vc2VyRGVmaW5lZEZ1bmN0aW9uVHlwZS5qcz83ZmNmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqXG4gKiBFbnVtIGZvciB1ZGYgdHlwZSB2YWx1ZXMuXG4gKiBTcGVjaWZpZXMgdGhlIHR5cGVzIG9mIHVzZXIgZGVmaW5lZCBmdW5jdGlvbnMuXG4gKi9cbnZhciBVc2VyRGVmaW5lZEZ1bmN0aW9uVHlwZTtcbihmdW5jdGlvbiAoVXNlckRlZmluZWRGdW5jdGlvblR5cGUpIHtcbiAgICAvKiogVGhlIFVzZXIgRGVmaW5lZCBGdW5jdGlvbiBpcyB3cml0dGVuIGluIEphdmFTY3JpcHQuIFRoaXMgaXMgY3VycmVudGx5IHRoZSBvbmx5IG9wdGlvbi4gKi9cbiAgICBVc2VyRGVmaW5lZEZ1bmN0aW9uVHlwZVtcIkphdmFzY3JpcHRcIl0gPSBcIkphdmFzY3JpcHRcIjtcbn0pKFVzZXJEZWZpbmVkRnVuY3Rpb25UeXBlID0gZXhwb3J0cy5Vc2VyRGVmaW5lZEZ1bmN0aW9uVHlwZSB8fCAoZXhwb3J0cy5Vc2VyRGVmaW5lZEZ1bmN0aW9uVHlwZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Vc2VyRGVmaW5lZEZ1bmN0aW9uVHlwZS5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/documents/UserDefinedFunctionType.js\n");

/***/ }),

/***/ "./lib/documents/index.js":
/*!********************************!*\
  !*** ./lib/documents/index.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./ConnectionMode */ \"./lib/documents/ConnectionMode.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./ConnectionPolicy */ \"./lib/documents/ConnectionPolicy.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./ConsistencyLevel */ \"./lib/documents/ConsistencyLevel.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./DatabaseAccount */ \"./lib/documents/DatabaseAccount.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./DataType */ \"./lib/documents/DataType.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./IndexingMode */ \"./lib/documents/IndexingMode.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./IndexKind */ \"./lib/documents/IndexKind.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./MediaReadMode */ \"./lib/documents/MediaReadMode.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./PartitionKind */ \"./lib/documents/PartitionKind.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./PermissionMode */ \"./lib/documents/PermissionMode.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./QueryCompatibilityMode */ \"./lib/documents/QueryCompatibilityMode.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./TriggerOperation */ \"./lib/documents/TriggerOperation.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./TriggerType */ \"./lib/documents/TriggerType.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./UserDefinedFunctionType */ \"./lib/documents/UserDefinedFunctionType.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvZG9jdW1lbnRzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL2RvY3VtZW50cy9pbmRleC5qcz85Y2NlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0Nvbm5lY3Rpb25Nb2RlXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0Nvbm5lY3Rpb25Qb2xpY3lcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQ29uc2lzdGVuY3lMZXZlbFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9EYXRhYmFzZUFjY291bnRcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vRGF0YVR5cGVcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vSW5kZXhpbmdNb2RlXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0luZGV4S2luZFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9NZWRpYVJlYWRNb2RlXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1BhcnRpdGlvbktpbmRcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vUGVybWlzc2lvbk1vZGVcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vUXVlcnlDb21wYXRpYmlsaXR5TW9kZVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9UcmlnZ2VyT3BlcmF0aW9uXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1RyaWdnZXJUeXBlXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1VzZXJEZWZpbmVkRnVuY3Rpb25UeXBlXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/documents/index.js\n");

/***/ }),

/***/ "./lib/globalEndpointManager.js":
/*!**************************************!*\
  !*** ./lib/globalEndpointManager.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst url = tslib_1.__importStar(__webpack_require__(/*! url */ \"./node_modules/url/url.js\"));\nconst common_1 = __webpack_require__(/*! ./common */ \"./lib/common/index.js\");\nconst LocationCache_1 = __webpack_require__(/*! ./LocationCache */ \"./lib/LocationCache.js\");\n/**\n * @hidden\n * This internal class implements the logic for endpoint management for geo-replicated database accounts.\n * @property {object} client                       - The document client instance.\n * @property {string} defaultEndpoint              - The endpoint used to create the client instance.\n * @property {bool} enableEndpointDiscovery        - Flag to enable/disable automatic redirecting of requests\n *                                                   based on read/write operations.\n * @property {Array} preferredLocations            - List of azure regions to be used as preferred locations\n *                                                   for read requests.\n * @property {bool} isEndpointCacheInitialized     - Flag to determine whether the endpoint cache is initialized or not.\n */\nclass GlobalEndpointManager {\n    /**\n     * @constructor GlobalEndpointManager\n     * @param {object} options                          - The document client instance.\n     */\n    constructor(options, readDatabaseAccount) {\n        this.readDatabaseAccount = readDatabaseAccount;\n        this.defaultEndpoint = options.endpoint;\n        this.enableEndpointDiscovery = options.connectionPolicy.EnableEndpointDiscovery;\n        this.isEndpointCacheInitialized = false;\n        this.locationCache = new LocationCache_1.LocationCache(options);\n        this.isRefreshing = false;\n        this.backgroundRefreshTimeIntervalInMS = common_1.Constants.DefaultUnavailableLocationExpirationTimeMS;\n    }\n    /**\n     * Gets the current read endpoint from the endpoint cache.\n     */\n    getReadEndpoint() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this.isEndpointCacheInitialized) {\n                yield this.refreshEndpointList();\n            }\n            return this.locationCache.getReadEndpoint();\n        });\n    }\n    /**\n     * Gets the current write endpoint from the endpoint cache.\n     */\n    getWriteEndpoint() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this.isEndpointCacheInitialized) {\n                yield this.refreshEndpointList();\n            }\n            return this.locationCache.getWriteEndpoint();\n        });\n    }\n    getReadEndpoints() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this.isEndpointCacheInitialized) {\n                yield this.refreshEndpointList();\n            }\n            return this.locationCache.getReadEndpoints();\n        });\n    }\n    getWriteEndpoints() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this.isEndpointCacheInitialized) {\n                yield this.refreshEndpointList();\n            }\n            return this.locationCache.getWriteEndpoints();\n        });\n    }\n    markCurrentLocationUnavailableForRead(endpoint) {\n        this.locationCache.markCurrentLocationUnavailableForRead(endpoint);\n    }\n    markCurrentLocationUnavailableForWrite(endpoint) {\n        this.locationCache.markCurrentLocationUnavailableForWrite(endpoint);\n    }\n    canUseMultipleWriteLocations(request) {\n        return this.locationCache.canUseMultipleWriteLocations(request);\n    }\n    resolveServiceEndpoint(request) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this.isEndpointCacheInitialized) {\n                yield this.refreshEndpointList();\n            }\n            return this.locationCache.resolveServiceEndpoint(request);\n        });\n    }\n    /**\n     * Refreshes the endpoint list by retrieving the writable and readable locations\n     *  from the geo-replicated database account and then updating the locations cache.\n     *   We skip the refreshing if EnableEndpointDiscovery is set to False\n     */\n    refreshEndpointList() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this.isRefreshing) {\n                this.isRefreshing = true;\n                let shouldRefresh = false;\n                const databaseAccount = yield this.getDatabaseAccountFromAnyEndpoint();\n                if (databaseAccount) {\n                    this.locationCache.onDatabaseAccountRead(databaseAccount);\n                }\n                ({ shouldRefresh } = this.locationCache.shouldRefreshEndpoints());\n                if (shouldRefresh) {\n                    this.backgroundRefresh();\n                    return;\n                }\n                else {\n                    this.isRefreshing = false;\n                    this.isEndpointCacheInitialized = true;\n                }\n            }\n        });\n    }\n    backgroundRefresh() {\n        process.nextTick(() => tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this.isRefreshing = true;\n            let shouldRefresh = false;\n            try {\n                do {\n                    const databaseAccount = yield this.getDatabaseAccountFromAnyEndpoint();\n                    if (databaseAccount) {\n                        this.locationCache.onDatabaseAccountRead(databaseAccount);\n                    }\n                    ({ shouldRefresh } = this.locationCache.shouldRefreshEndpoints());\n                    if (!shouldRefresh) {\n                        break;\n                    }\n                    yield common_1.Helper.sleep(this.backgroundRefreshTimeIntervalInMS);\n                } while (shouldRefresh);\n            }\n            catch (err) {\n                /* swallow error */\n                // TODO: Tracing\n            }\n            this.isRefreshing = false;\n            this.isEndpointCacheInitialized = true;\n        }));\n    }\n    /**\n     * Gets the database account first by using the default endpoint, and if that doesn't returns\n     * use the endpoints for the preferred locations in the order they are specified to get\n     * the database account.\n     * @memberof GlobalEndpointManager\n     * @instance\n     * @param {function} callback        - The callback function which takes databaseAccount(object) as an argument.\n     */\n    getDatabaseAccountFromAnyEndpoint() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                const options = { urlConnection: this.defaultEndpoint };\n                const { body: databaseAccount } = yield this.readDatabaseAccount(options);\n                return databaseAccount;\n                // If for any reason(non - globaldb related), we are not able to get the database\n                // account from the above call to readDatabaseAccount,\n                // we would try to get this information from any of the preferred locations that the user\n                // might have specified (by creating a locational endpoint)\n                // and keeping eating the exception until we get the database account and return None at the end,\n                // if we are not able to get that info from any endpoints\n            }\n            catch (err) {\n                // TODO: Tracing\n            }\n            if (this.locationCache.prefferredLocations) {\n                for (const location of this.locationCache.prefferredLocations) {\n                    try {\n                        const locationalEndpoint = GlobalEndpointManager.getLocationalEndpoint(this.defaultEndpoint, location);\n                        const options = { urlConnection: locationalEndpoint };\n                        const { body: databaseAccount } = yield this.readDatabaseAccount(options);\n                        if (databaseAccount) {\n                            return databaseAccount;\n                        }\n                    }\n                    catch (err) {\n                        // TODO: Tracing\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * Gets the locational endpoint using the location name passed to it using the default endpoint.\n     * @memberof GlobalEndpointManager\n     * @instance\n     * @param {string} defaultEndpoint - The default endpoint to use for teh endpoint.\n     * @param {string} locationName    - The location name for the azure region like \"East US\".\n     */\n    static getLocationalEndpoint(defaultEndpoint, locationName) {\n        // For defaultEndpoint like 'https://contoso.documents.azure.com:443/' parse it to generate URL format\n        // This defaultEndpoint should be global endpoint(and cannot be a locational endpoint)\n        // and we agreed to document that\n        const endpointUrl = url.parse(defaultEndpoint, true, true);\n        // hostname attribute in endpointUrl will return 'contoso.documents.azure.com'\n        if (endpointUrl.hostname) {\n            const hostnameParts = endpointUrl.hostname\n                .toString()\n                .toLowerCase()\n                .split(\".\");\n            if (hostnameParts) {\n                // globalDatabaseAccountName will return 'contoso'\n                const globalDatabaseAccountName = hostnameParts[0];\n                // Prepare the locationalDatabaseAccountName as contoso-EastUS for location_name 'East US'\n                const locationalDatabaseAccountName = globalDatabaseAccountName + \"-\" + locationName.replace(\" \", \"\");\n                // Replace 'contoso' with 'contoso-EastUS' and\n                // return locationalEndpoint as https://contoso-EastUS.documents.azure.com:443/\n                const locationalEndpoint = defaultEndpoint\n                    .toLowerCase()\n                    .replace(globalDatabaseAccountName, locationalDatabaseAccountName);\n                return locationalEndpoint;\n            }\n        }\n        return null;\n    }\n}\nexports.GlobalEndpointManager = GlobalEndpointManager;\n//# sourceMappingURL=globalEndpointManager.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/globalEndpointManager.js\n");

/***/ }),

/***/ "./lib/index.js":
/*!**********************!*\
  !*** ./lib/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst DocumentBase = tslib_1.__importStar(__webpack_require__(/*! ./documents */ \"./lib/documents/index.js\"));\nexports.DocumentBase = DocumentBase;\nexports.AzureDocuments = DocumentBase;\nvar documents_1 = __webpack_require__(/*! ./documents */ \"./lib/documents/index.js\");\nexports.ConnectionMode = documents_1.ConnectionMode;\nexports.ConsistencyLevel = documents_1.ConsistencyLevel;\nexports.ConnectionPolicy = documents_1.ConnectionPolicy;\nexports.DatabaseAccount = documents_1.DatabaseAccount;\nexports.DataType = documents_1.DataType;\nexports.IndexingMode = documents_1.IndexingMode;\nexports.IndexKind = documents_1.IndexKind;\nexports.MediaReadMode = documents_1.MediaReadMode;\nexports.PartitionKind = documents_1.PartitionKind;\nexports.PermissionMode = documents_1.PermissionMode;\nexports.QueryCompatibilityMode = documents_1.QueryCompatibilityMode;\nexports.TriggerOperation = documents_1.TriggerOperation;\nexports.TriggerType = documents_1.TriggerType;\nexports.UserDefinedFunctionType = documents_1.UserDefinedFunctionType;\nvar common_1 = __webpack_require__(/*! ./common */ \"./lib/common/index.js\");\nexports.Constants = common_1.Constants;\nexports.UriFactory = common_1.UriFactory;\nvar retry_1 = __webpack_require__(/*! ./retry */ \"./lib/retry/index.js\");\nexports.RetryOptions = retry_1.RetryOptions;\nvar queryIterator_1 = __webpack_require__(/*! ./queryIterator */ \"./lib/queryIterator.js\");\nexports.QueryIterator = queryIterator_1.QueryIterator;\ntslib_1.__exportStar(__webpack_require__(/*! ./queryMetrics */ \"./lib/queryMetrics/index.js\"), exports);\nvar CosmosClient_1 = __webpack_require__(/*! ./CosmosClient */ \"./lib/CosmosClient.js\");\nexports.CosmosClient = CosmosClient_1.CosmosClient;\ntslib_1.__exportStar(__webpack_require__(/*! ./client */ \"./lib/client/index.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvaW5kZXguanM/OWIwYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBEb2N1bWVudEJhc2UgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9kb2N1bWVudHNcIikpO1xuZXhwb3J0cy5Eb2N1bWVudEJhc2UgPSBEb2N1bWVudEJhc2U7XG5leHBvcnRzLkF6dXJlRG9jdW1lbnRzID0gRG9jdW1lbnRCYXNlO1xudmFyIGRvY3VtZW50c18xID0gcmVxdWlyZShcIi4vZG9jdW1lbnRzXCIpO1xuZXhwb3J0cy5Db25uZWN0aW9uTW9kZSA9IGRvY3VtZW50c18xLkNvbm5lY3Rpb25Nb2RlO1xuZXhwb3J0cy5Db25zaXN0ZW5jeUxldmVsID0gZG9jdW1lbnRzXzEuQ29uc2lzdGVuY3lMZXZlbDtcbmV4cG9ydHMuQ29ubmVjdGlvblBvbGljeSA9IGRvY3VtZW50c18xLkNvbm5lY3Rpb25Qb2xpY3k7XG5leHBvcnRzLkRhdGFiYXNlQWNjb3VudCA9IGRvY3VtZW50c18xLkRhdGFiYXNlQWNjb3VudDtcbmV4cG9ydHMuRGF0YVR5cGUgPSBkb2N1bWVudHNfMS5EYXRhVHlwZTtcbmV4cG9ydHMuSW5kZXhpbmdNb2RlID0gZG9jdW1lbnRzXzEuSW5kZXhpbmdNb2RlO1xuZXhwb3J0cy5JbmRleEtpbmQgPSBkb2N1bWVudHNfMS5JbmRleEtpbmQ7XG5leHBvcnRzLk1lZGlhUmVhZE1vZGUgPSBkb2N1bWVudHNfMS5NZWRpYVJlYWRNb2RlO1xuZXhwb3J0cy5QYXJ0aXRpb25LaW5kID0gZG9jdW1lbnRzXzEuUGFydGl0aW9uS2luZDtcbmV4cG9ydHMuUGVybWlzc2lvbk1vZGUgPSBkb2N1bWVudHNfMS5QZXJtaXNzaW9uTW9kZTtcbmV4cG9ydHMuUXVlcnlDb21wYXRpYmlsaXR5TW9kZSA9IGRvY3VtZW50c18xLlF1ZXJ5Q29tcGF0aWJpbGl0eU1vZGU7XG5leHBvcnRzLlRyaWdnZXJPcGVyYXRpb24gPSBkb2N1bWVudHNfMS5UcmlnZ2VyT3BlcmF0aW9uO1xuZXhwb3J0cy5UcmlnZ2VyVHlwZSA9IGRvY3VtZW50c18xLlRyaWdnZXJUeXBlO1xuZXhwb3J0cy5Vc2VyRGVmaW5lZEZ1bmN0aW9uVHlwZSA9IGRvY3VtZW50c18xLlVzZXJEZWZpbmVkRnVuY3Rpb25UeXBlO1xudmFyIGNvbW1vbl8xID0gcmVxdWlyZShcIi4vY29tbW9uXCIpO1xuZXhwb3J0cy5Db25zdGFudHMgPSBjb21tb25fMS5Db25zdGFudHM7XG5leHBvcnRzLlVyaUZhY3RvcnkgPSBjb21tb25fMS5VcmlGYWN0b3J5O1xudmFyIHJldHJ5XzEgPSByZXF1aXJlKFwiLi9yZXRyeVwiKTtcbmV4cG9ydHMuUmV0cnlPcHRpb25zID0gcmV0cnlfMS5SZXRyeU9wdGlvbnM7XG52YXIgcXVlcnlJdGVyYXRvcl8xID0gcmVxdWlyZShcIi4vcXVlcnlJdGVyYXRvclwiKTtcbmV4cG9ydHMuUXVlcnlJdGVyYXRvciA9IHF1ZXJ5SXRlcmF0b3JfMS5RdWVyeUl0ZXJhdG9yO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcXVlcnlNZXRyaWNzXCIpLCBleHBvcnRzKTtcbnZhciBDb3Ntb3NDbGllbnRfMSA9IHJlcXVpcmUoXCIuL0Nvc21vc0NsaWVudFwiKTtcbmV4cG9ydHMuQ29zbW9zQ2xpZW50ID0gQ29zbW9zQ2xpZW50XzEuQ29zbW9zQ2xpZW50O1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY2xpZW50XCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/index.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/Aggregators/AverageAggregator.js":
/*!********************************************************************!*\
  !*** ./lib/queryExecutionContext/Aggregators/AverageAggregator.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @hidden */\nclass AverageAggregator {\n    /**\n     * Add the provided item to aggregation result.\n     * @memberof AverageAggregator\n     * @instance\n     * @param other\n     */\n    aggregate(other) {\n        if (other == null || other.sum == null) {\n            return;\n        }\n        if (this.sum == null) {\n            this.sum = 0.0;\n            this.count = 0;\n        }\n        this.sum += other.sum;\n        this.count += other.count;\n    }\n    /**\n     * Get the aggregation result.\n     * @memberof AverageAggregator\n     * @instance\n     */\n    getResult() {\n        if (this.sum == null || this.count <= 0) {\n            return undefined;\n        }\n        return this.sum / this.count;\n    }\n}\nexports.AverageAggregator = AverageAggregator;\n//# sourceMappingURL=AverageAggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L0FnZ3JlZ2F0b3JzL0F2ZXJhZ2VBZ2dyZWdhdG9yLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9BZ2dyZWdhdG9ycy9BdmVyYWdlQWdncmVnYXRvci5qcz9kMWY5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqIEBoaWRkZW4gKi9cbmNsYXNzIEF2ZXJhZ2VBZ2dyZWdhdG9yIHtcbiAgICAvKipcbiAgICAgKiBBZGQgdGhlIHByb3ZpZGVkIGl0ZW0gdG8gYWdncmVnYXRpb24gcmVzdWx0LlxuICAgICAqIEBtZW1iZXJvZiBBdmVyYWdlQWdncmVnYXRvclxuICAgICAqIEBpbnN0YW5jZVxuICAgICAqIEBwYXJhbSBvdGhlclxuICAgICAqL1xuICAgIGFnZ3JlZ2F0ZShvdGhlcikge1xuICAgICAgICBpZiAob3RoZXIgPT0gbnVsbCB8fCBvdGhlci5zdW0gPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnN1bSA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLnN1bSA9IDAuMDtcbiAgICAgICAgICAgIHRoaXMuY291bnQgPSAwO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc3VtICs9IG90aGVyLnN1bTtcbiAgICAgICAgdGhpcy5jb3VudCArPSBvdGhlci5jb3VudDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBhZ2dyZWdhdGlvbiByZXN1bHQuXG4gICAgICogQG1lbWJlcm9mIEF2ZXJhZ2VBZ2dyZWdhdG9yXG4gICAgICogQGluc3RhbmNlXG4gICAgICovXG4gICAgZ2V0UmVzdWx0KCkge1xuICAgICAgICBpZiAodGhpcy5zdW0gPT0gbnVsbCB8fCB0aGlzLmNvdW50IDw9IDApIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuc3VtIC8gdGhpcy5jb3VudDtcbiAgICB9XG59XG5leHBvcnRzLkF2ZXJhZ2VBZ2dyZWdhdG9yID0gQXZlcmFnZUFnZ3JlZ2F0b3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdmVyYWdlQWdncmVnYXRvci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/Aggregators/AverageAggregator.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/Aggregators/CountAggregator.js":
/*!******************************************************************!*\
  !*** ./lib/queryExecutionContext/Aggregators/CountAggregator.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @hidden */\nclass CountAggregator {\n    /**\n     * Represents an aggregator for COUNT operator.\n     * @constructor CountAggregator\n     * @ignore\n     */\n    constructor() {\n        this.value = 0;\n    }\n    /**\n     * Add the provided item to aggregation result.\n     * @memberof CountAggregator\n     * @instance\n     * @param other\n     */\n    aggregate(other) {\n        this.value += other;\n    }\n    /**\n     * Get the aggregation result.\n     * @memberof CountAggregator\n     * @instance\n     */\n    getResult() {\n        return this.value;\n    }\n}\nexports.CountAggregator = CountAggregator;\n//# sourceMappingURL=CountAggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L0FnZ3JlZ2F0b3JzL0NvdW50QWdncmVnYXRvci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvQWdncmVnYXRvcnMvQ291bnRBZ2dyZWdhdG9yLmpzPzM3ZDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKiogQGhpZGRlbiAqL1xuY2xhc3MgQ291bnRBZ2dyZWdhdG9yIHtcbiAgICAvKipcbiAgICAgKiBSZXByZXNlbnRzIGFuIGFnZ3JlZ2F0b3IgZm9yIENPVU5UIG9wZXJhdG9yLlxuICAgICAqIEBjb25zdHJ1Y3RvciBDb3VudEFnZ3JlZ2F0b3JcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMudmFsdWUgPSAwO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBZGQgdGhlIHByb3ZpZGVkIGl0ZW0gdG8gYWdncmVnYXRpb24gcmVzdWx0LlxuICAgICAqIEBtZW1iZXJvZiBDb3VudEFnZ3JlZ2F0b3JcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKiBAcGFyYW0gb3RoZXJcbiAgICAgKi9cbiAgICBhZ2dyZWdhdGUob3RoZXIpIHtcbiAgICAgICAgdGhpcy52YWx1ZSArPSBvdGhlcjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBhZ2dyZWdhdGlvbiByZXN1bHQuXG4gICAgICogQG1lbWJlcm9mIENvdW50QWdncmVnYXRvclxuICAgICAqIEBpbnN0YW5jZVxuICAgICAqL1xuICAgIGdldFJlc3VsdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWU7XG4gICAgfVxufVxuZXhwb3J0cy5Db3VudEFnZ3JlZ2F0b3IgPSBDb3VudEFnZ3JlZ2F0b3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db3VudEFnZ3JlZ2F0b3IuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/Aggregators/CountAggregator.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/Aggregators/MaxAggregator.js":
/*!****************************************************************!*\
  !*** ./lib/queryExecutionContext/Aggregators/MaxAggregator.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst orderByDocumentProducerComparator_1 = __webpack_require__(/*! ../orderByDocumentProducerComparator */ \"./lib/queryExecutionContext/orderByDocumentProducerComparator.js\");\n/** @hidden */\nclass MaxAggregator {\n    /**\n     * Represents an aggregator for MAX operator.\n     * @constructor MaxAggregator\n     * @ignore\n     */\n    constructor() {\n        this.value = undefined;\n        this.comparer = new orderByDocumentProducerComparator_1.OrderByDocumentProducerComparator([\"Ascending\"]);\n    }\n    /**\n     * Add the provided item to aggregation result.\n     * @memberof MaxAggregator\n     * @instance\n     * @param other\n     */\n    aggregate(other) {\n        if (this.value === undefined) {\n            this.value = other;\n        }\n        else if (this.comparer.compareValue(other, typeof other, this.value, typeof this.value) > 0) {\n            this.value = other;\n        }\n    }\n    /**\n     * Get the aggregation result.\n     * @memberof MaxAggregator\n     * @instance\n     */\n    getResult() {\n        return this.value;\n    }\n}\nexports.MaxAggregator = MaxAggregator;\n//# sourceMappingURL=MaxAggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L0FnZ3JlZ2F0b3JzL01heEFnZ3JlZ2F0b3IuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L0FnZ3JlZ2F0b3JzL01heEFnZ3JlZ2F0b3IuanM/MTkwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IG9yZGVyQnlEb2N1bWVudFByb2R1Y2VyQ29tcGFyYXRvcl8xID0gcmVxdWlyZShcIi4uL29yZGVyQnlEb2N1bWVudFByb2R1Y2VyQ29tcGFyYXRvclwiKTtcbi8qKiBAaGlkZGVuICovXG5jbGFzcyBNYXhBZ2dyZWdhdG9yIHtcbiAgICAvKipcbiAgICAgKiBSZXByZXNlbnRzIGFuIGFnZ3JlZ2F0b3IgZm9yIE1BWCBvcGVyYXRvci5cbiAgICAgKiBAY29uc3RydWN0b3IgTWF4QWdncmVnYXRvclxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5jb21wYXJlciA9IG5ldyBvcmRlckJ5RG9jdW1lbnRQcm9kdWNlckNvbXBhcmF0b3JfMS5PcmRlckJ5RG9jdW1lbnRQcm9kdWNlckNvbXBhcmF0b3IoW1wiQXNjZW5kaW5nXCJdKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBwcm92aWRlZCBpdGVtIHRvIGFnZ3JlZ2F0aW9uIHJlc3VsdC5cbiAgICAgKiBAbWVtYmVyb2YgTWF4QWdncmVnYXRvclxuICAgICAqIEBpbnN0YW5jZVxuICAgICAqIEBwYXJhbSBvdGhlclxuICAgICAqL1xuICAgIGFnZ3JlZ2F0ZShvdGhlcikge1xuICAgICAgICBpZiAodGhpcy52YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLnZhbHVlID0gb3RoZXI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5jb21wYXJlci5jb21wYXJlVmFsdWUob3RoZXIsIHR5cGVvZiBvdGhlciwgdGhpcy52YWx1ZSwgdHlwZW9mIHRoaXMudmFsdWUpID4gMCkge1xuICAgICAgICAgICAgdGhpcy52YWx1ZSA9IG90aGVyO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgYWdncmVnYXRpb24gcmVzdWx0LlxuICAgICAqIEBtZW1iZXJvZiBNYXhBZ2dyZWdhdG9yXG4gICAgICogQGluc3RhbmNlXG4gICAgICovXG4gICAgZ2V0UmVzdWx0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTtcbiAgICB9XG59XG5leHBvcnRzLk1heEFnZ3JlZ2F0b3IgPSBNYXhBZ2dyZWdhdG9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TWF4QWdncmVnYXRvci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/Aggregators/MaxAggregator.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/Aggregators/MinAggregator.js":
/*!****************************************************************!*\
  !*** ./lib/queryExecutionContext/Aggregators/MinAggregator.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst orderByDocumentProducerComparator_1 = __webpack_require__(/*! ../orderByDocumentProducerComparator */ \"./lib/queryExecutionContext/orderByDocumentProducerComparator.js\");\n/** @hidden */\nclass MinAggregator {\n    /**\n     * Represents an aggregator for MIN operator.\n     * @constructor MinAggregator\n     * @ignore\n     */\n    constructor() {\n        this.value = undefined;\n        this.comparer = new orderByDocumentProducerComparator_1.OrderByDocumentProducerComparator([\"Ascending\"]);\n    }\n    /**\n     * Add the provided item to aggregation result.\n     * @memberof MinAggregator\n     * @instance\n     * @param other\n     */\n    aggregate(other) {\n        if (this.value === undefined) {\n            this.value = other;\n        }\n        else {\n            const otherType = other == null ? \"NoValue\" : typeof other;\n            if (this.comparer.compareValue(other, otherType, this.value, typeof this.value) < 0) {\n                this.value = other;\n            }\n        }\n    }\n    /**\n     * Get the aggregation result.\n     * @memberof MinAggregator\n     * @instance\n     */\n    getResult() {\n        return this.value;\n    }\n}\nexports.MinAggregator = MinAggregator;\n//# sourceMappingURL=MinAggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L0FnZ3JlZ2F0b3JzL01pbkFnZ3JlZ2F0b3IuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L0FnZ3JlZ2F0b3JzL01pbkFnZ3JlZ2F0b3IuanM/NTIxOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IG9yZGVyQnlEb2N1bWVudFByb2R1Y2VyQ29tcGFyYXRvcl8xID0gcmVxdWlyZShcIi4uL29yZGVyQnlEb2N1bWVudFByb2R1Y2VyQ29tcGFyYXRvclwiKTtcbi8qKiBAaGlkZGVuICovXG5jbGFzcyBNaW5BZ2dyZWdhdG9yIHtcbiAgICAvKipcbiAgICAgKiBSZXByZXNlbnRzIGFuIGFnZ3JlZ2F0b3IgZm9yIE1JTiBvcGVyYXRvci5cbiAgICAgKiBAY29uc3RydWN0b3IgTWluQWdncmVnYXRvclxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5jb21wYXJlciA9IG5ldyBvcmRlckJ5RG9jdW1lbnRQcm9kdWNlckNvbXBhcmF0b3JfMS5PcmRlckJ5RG9jdW1lbnRQcm9kdWNlckNvbXBhcmF0b3IoW1wiQXNjZW5kaW5nXCJdKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBwcm92aWRlZCBpdGVtIHRvIGFnZ3JlZ2F0aW9uIHJlc3VsdC5cbiAgICAgKiBAbWVtYmVyb2YgTWluQWdncmVnYXRvclxuICAgICAqIEBpbnN0YW5jZVxuICAgICAqIEBwYXJhbSBvdGhlclxuICAgICAqL1xuICAgIGFnZ3JlZ2F0ZShvdGhlcikge1xuICAgICAgICBpZiAodGhpcy52YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLnZhbHVlID0gb3RoZXI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBvdGhlclR5cGUgPSBvdGhlciA9PSBudWxsID8gXCJOb1ZhbHVlXCIgOiB0eXBlb2Ygb3RoZXI7XG4gICAgICAgICAgICBpZiAodGhpcy5jb21wYXJlci5jb21wYXJlVmFsdWUob3RoZXIsIG90aGVyVHlwZSwgdGhpcy52YWx1ZSwgdHlwZW9mIHRoaXMudmFsdWUpIDwgMCkge1xuICAgICAgICAgICAgICAgIHRoaXMudmFsdWUgPSBvdGhlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGFnZ3JlZ2F0aW9uIHJlc3VsdC5cbiAgICAgKiBAbWVtYmVyb2YgTWluQWdncmVnYXRvclxuICAgICAqIEBpbnN0YW5jZVxuICAgICAqL1xuICAgIGdldFJlc3VsdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWU7XG4gICAgfVxufVxuZXhwb3J0cy5NaW5BZ2dyZWdhdG9yID0gTWluQWdncmVnYXRvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1pbkFnZ3JlZ2F0b3IuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/Aggregators/MinAggregator.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/Aggregators/SumAggregator.js":
/*!****************************************************************!*\
  !*** ./lib/queryExecutionContext/Aggregators/SumAggregator.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @hidden */\nclass SumAggregator {\n    /**\n     * Add the provided item to aggregation result.\n     * @memberof SumAggregator\n     * @instance\n     * @param other\n     */\n    aggregate(other) {\n        if (other === undefined) {\n            return;\n        }\n        if (this.sum === undefined) {\n            this.sum = other;\n        }\n        else {\n            this.sum += other;\n        }\n    }\n    /**\n     * Get the aggregation result.\n     * @memberof SumAggregator\n     * @instance\n     */\n    getResult() {\n        return this.sum;\n    }\n}\nexports.SumAggregator = SumAggregator;\n//# sourceMappingURL=SumAggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L0FnZ3JlZ2F0b3JzL1N1bUFnZ3JlZ2F0b3IuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L0FnZ3JlZ2F0b3JzL1N1bUFnZ3JlZ2F0b3IuanM/Y2M1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKiBAaGlkZGVuICovXG5jbGFzcyBTdW1BZ2dyZWdhdG9yIHtcbiAgICAvKipcbiAgICAgKiBBZGQgdGhlIHByb3ZpZGVkIGl0ZW0gdG8gYWdncmVnYXRpb24gcmVzdWx0LlxuICAgICAqIEBtZW1iZXJvZiBTdW1BZ2dyZWdhdG9yXG4gICAgICogQGluc3RhbmNlXG4gICAgICogQHBhcmFtIG90aGVyXG4gICAgICovXG4gICAgYWdncmVnYXRlKG90aGVyKSB7XG4gICAgICAgIGlmIChvdGhlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuc3VtID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMuc3VtID0gb3RoZXI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnN1bSArPSBvdGhlcjtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGFnZ3JlZ2F0aW9uIHJlc3VsdC5cbiAgICAgKiBAbWVtYmVyb2YgU3VtQWdncmVnYXRvclxuICAgICAqIEBpbnN0YW5jZVxuICAgICAqL1xuICAgIGdldFJlc3VsdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3VtO1xuICAgIH1cbn1cbmV4cG9ydHMuU3VtQWdncmVnYXRvciA9IFN1bUFnZ3JlZ2F0b3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdW1BZ2dyZWdhdG9yLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/Aggregators/SumAggregator.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/Aggregators/index.js":
/*!********************************************************!*\
  !*** ./lib/queryExecutionContext/Aggregators/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./AverageAggregator */ \"./lib/queryExecutionContext/Aggregators/AverageAggregator.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./CountAggregator */ \"./lib/queryExecutionContext/Aggregators/CountAggregator.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./MaxAggregator */ \"./lib/queryExecutionContext/Aggregators/MaxAggregator.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./MinAggregator */ \"./lib/queryExecutionContext/Aggregators/MinAggregator.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./SumAggregator */ \"./lib/queryExecutionContext/Aggregators/SumAggregator.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L0FnZ3JlZ2F0b3JzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9BZ2dyZWdhdG9ycy9pbmRleC5qcz82N2I2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0F2ZXJhZ2VBZ2dyZWdhdG9yXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0NvdW50QWdncmVnYXRvclwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9NYXhBZ2dyZWdhdG9yXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL01pbkFnZ3JlZ2F0b3JcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vU3VtQWdncmVnYXRvclwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/Aggregators/index.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/EndpointComponent/AggregateEndpointComponent.js":
/*!***********************************************************************************!*\
  !*** ./lib/queryExecutionContext/EndpointComponent/AggregateEndpointComponent.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst Aggregators_1 = __webpack_require__(/*! ../Aggregators */ \"./lib/queryExecutionContext/Aggregators/index.js\");\n/** @hidden */\nclass AggregateEndpointComponent {\n    /**\n     * Represents an endpoint in handling aggregate queries.\n     * @constructor AggregateEndpointComponent\n     * @param { object } executionContext - Underlying Execution Context\n     * @ignore\n     */\n    constructor(executionContext, aggregateOperators) {\n        this.executionContext = executionContext;\n        // TODO: any\n        this.executionContext = executionContext;\n        this.localAggregators = [];\n        aggregateOperators.forEach((aggregateOperator) => {\n            switch (aggregateOperator) {\n                case \"Average\":\n                    this.localAggregators.push(new Aggregators_1.AverageAggregator());\n                    break;\n                case \"Count\":\n                    this.localAggregators.push(new Aggregators_1.CountAggregator());\n                    break;\n                case \"Max\":\n                    this.localAggregators.push(new Aggregators_1.MaxAggregator());\n                    break;\n                case \"Min\":\n                    this.localAggregators.push(new Aggregators_1.MinAggregator());\n                    break;\n                case \"Sum\":\n                    this.localAggregators.push(new Aggregators_1.SumAggregator());\n                    break;\n            }\n        });\n    }\n    /**\n     * Populate the aggregated values\n     * @ignore\n     */\n    _getAggregateResult() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this.toArrayTempResources = [];\n            this.aggregateValues = [];\n            this.aggregateValuesIndex = -1;\n            try {\n                const { result: resources, headers } = yield this._getQueryResults();\n                resources.forEach((resource) => {\n                    // TODO: any\n                    this.localAggregators.forEach(aggregator => {\n                        let itemValue;\n                        // Get the value of the first property if it exists\n                        if (resource && Object.keys(resource).length > 0) {\n                            const key = Object.keys(resource)[0];\n                            itemValue = resource[key];\n                        }\n                        aggregator.aggregate(itemValue);\n                    });\n                });\n                // Get the aggregated results\n                this.localAggregators.forEach(aggregator => {\n                    this.aggregateValues.push(aggregator.getResult());\n                });\n                return { result: this.aggregateValues, headers };\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Get the results of queries from all partitions\n     * @ignore\n     */\n    _getQueryResults() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                const { result: item, headers } = yield this.executionContext.nextItem();\n                if (item === undefined) {\n                    // no more results\n                    return { result: this.toArrayTempResources, headers };\n                }\n                this.toArrayTempResources = this.toArrayTempResources.concat(item);\n                return this._getQueryResults();\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Execute a provided function on the next element in the AggregateEndpointComponent.\n     * @memberof AggregateEndpointComponent\n     * @instance\n     * @param {callback} callback - Function to execute for each element. \\\n     * the function takes two parameters error, element.\n     */\n    nextItem() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                let resHeaders;\n                let resources;\n                if (this.aggregateValues === undefined) {\n                    ({ result: resources, headers: resHeaders } = yield this._getAggregateResult());\n                }\n                const resource = this.aggregateValuesIndex < this.aggregateValues.length\n                    ? this.aggregateValues[++this.aggregateValuesIndex]\n                    : undefined;\n                return { result: resource, headers: resHeaders };\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Retrieve the current element on the AggregateEndpointComponent.\n     * @memberof AggregateEndpointComponent\n     * @instance\n     * @param {callback} callback - Function to execute for the current element. \\\n     * the function takes two parameters error, element.\n     */\n    current() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (this.aggregateValues === undefined) {\n                const { result: resouces, headers } = yield this._getAggregateResult();\n                return {\n                    result: this.aggregateValues[this.aggregateValuesIndex],\n                    headers\n                };\n            }\n            else {\n                return {\n                    result: this.aggregateValues[this.aggregateValuesIndex],\n                    headers: undefined\n                };\n            }\n        });\n    }\n    /**\n     * Determine if there are still remaining resources to processs.\n     * @memberof AggregateEndpointComponent\n     * @instance\n     * @returns {Boolean} true if there is other elements to process in the AggregateEndpointComponent.\n     */\n    hasMoreResults() {\n        return this.aggregateValues != null && this.aggregateValuesIndex < this.aggregateValues.length - 1;\n    }\n}\nexports.AggregateEndpointComponent = AggregateEndpointComponent;\n//# sourceMappingURL=AggregateEndpointComponent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L0VuZHBvaW50Q29tcG9uZW50L0FnZ3JlZ2F0ZUVuZHBvaW50Q29tcG9uZW50LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9FbmRwb2ludENvbXBvbmVudC9BZ2dyZWdhdGVFbmRwb2ludENvbXBvbmVudC5qcz9mYmFiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IEFnZ3JlZ2F0b3JzXzEgPSByZXF1aXJlKFwiLi4vQWdncmVnYXRvcnNcIik7XG4vKiogQGhpZGRlbiAqL1xuY2xhc3MgQWdncmVnYXRlRW5kcG9pbnRDb21wb25lbnQge1xuICAgIC8qKlxuICAgICAqIFJlcHJlc2VudHMgYW4gZW5kcG9pbnQgaW4gaGFuZGxpbmcgYWdncmVnYXRlIHF1ZXJpZXMuXG4gICAgICogQGNvbnN0cnVjdG9yIEFnZ3JlZ2F0ZUVuZHBvaW50Q29tcG9uZW50XG4gICAgICogQHBhcmFtIHsgb2JqZWN0IH0gZXhlY3V0aW9uQ29udGV4dCAtIFVuZGVybHlpbmcgRXhlY3V0aW9uIENvbnRleHRcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXhlY3V0aW9uQ29udGV4dCwgYWdncmVnYXRlT3BlcmF0b3JzKSB7XG4gICAgICAgIHRoaXMuZXhlY3V0aW9uQ29udGV4dCA9IGV4ZWN1dGlvbkNvbnRleHQ7XG4gICAgICAgIC8vIFRPRE86IGFueVxuICAgICAgICB0aGlzLmV4ZWN1dGlvbkNvbnRleHQgPSBleGVjdXRpb25Db250ZXh0O1xuICAgICAgICB0aGlzLmxvY2FsQWdncmVnYXRvcnMgPSBbXTtcbiAgICAgICAgYWdncmVnYXRlT3BlcmF0b3JzLmZvckVhY2goKGFnZ3JlZ2F0ZU9wZXJhdG9yKSA9PiB7XG4gICAgICAgICAgICBzd2l0Y2ggKGFnZ3JlZ2F0ZU9wZXJhdG9yKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBcIkF2ZXJhZ2VcIjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2NhbEFnZ3JlZ2F0b3JzLnB1c2gobmV3IEFnZ3JlZ2F0b3JzXzEuQXZlcmFnZUFnZ3JlZ2F0b3IoKSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJDb3VudFwiOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvY2FsQWdncmVnYXRvcnMucHVzaChuZXcgQWdncmVnYXRvcnNfMS5Db3VudEFnZ3JlZ2F0b3IoKSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJNYXhcIjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2NhbEFnZ3JlZ2F0b3JzLnB1c2gobmV3IEFnZ3JlZ2F0b3JzXzEuTWF4QWdncmVnYXRvcigpKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcIk1pblwiOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvY2FsQWdncmVnYXRvcnMucHVzaChuZXcgQWdncmVnYXRvcnNfMS5NaW5BZ2dyZWdhdG9yKCkpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwiU3VtXCI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubG9jYWxBZ2dyZWdhdG9ycy5wdXNoKG5ldyBBZ2dyZWdhdG9yc18xLlN1bUFnZ3JlZ2F0b3IoKSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUG9wdWxhdGUgdGhlIGFnZ3JlZ2F0ZWQgdmFsdWVzXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIF9nZXRBZ2dyZWdhdGVSZXN1bHQoKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHRoaXMudG9BcnJheVRlbXBSZXNvdXJjZXMgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuYWdncmVnYXRlVmFsdWVzID0gW107XG4gICAgICAgICAgICB0aGlzLmFnZ3JlZ2F0ZVZhbHVlc0luZGV4ID0gLTE7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgcmVzdWx0OiByZXNvdXJjZXMsIGhlYWRlcnMgfSA9IHlpZWxkIHRoaXMuX2dldFF1ZXJ5UmVzdWx0cygpO1xuICAgICAgICAgICAgICAgIHJlc291cmNlcy5mb3JFYWNoKChyZXNvdXJjZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAvLyBUT0RPOiBhbnlcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2NhbEFnZ3JlZ2F0b3JzLmZvckVhY2goYWdncmVnYXRvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgaXRlbVZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gR2V0IHRoZSB2YWx1ZSBvZiB0aGUgZmlyc3QgcHJvcGVydHkgaWYgaXQgZXhpc3RzXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzb3VyY2UgJiYgT2JqZWN0LmtleXMocmVzb3VyY2UpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBPYmplY3Qua2V5cyhyZXNvdXJjZSlbMF07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbVZhbHVlID0gcmVzb3VyY2Vba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGFnZ3JlZ2F0b3IuYWdncmVnYXRlKGl0ZW1WYWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIC8vIEdldCB0aGUgYWdncmVnYXRlZCByZXN1bHRzXG4gICAgICAgICAgICAgICAgdGhpcy5sb2NhbEFnZ3JlZ2F0b3JzLmZvckVhY2goYWdncmVnYXRvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWdncmVnYXRlVmFsdWVzLnB1c2goYWdncmVnYXRvci5nZXRSZXN1bHQoKSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgcmVzdWx0OiB0aGlzLmFnZ3JlZ2F0ZVZhbHVlcywgaGVhZGVycyB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgcmVzdWx0cyBvZiBxdWVyaWVzIGZyb20gYWxsIHBhcnRpdGlvbnNcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgX2dldFF1ZXJ5UmVzdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IHJlc3VsdDogaXRlbSwgaGVhZGVycyB9ID0geWllbGQgdGhpcy5leGVjdXRpb25Db250ZXh0Lm5leHRJdGVtKCk7XG4gICAgICAgICAgICAgICAgaWYgKGl0ZW0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBubyBtb3JlIHJlc3VsdHNcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgcmVzdWx0OiB0aGlzLnRvQXJyYXlUZW1wUmVzb3VyY2VzLCBoZWFkZXJzIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMudG9BcnJheVRlbXBSZXNvdXJjZXMgPSB0aGlzLnRvQXJyYXlUZW1wUmVzb3VyY2VzLmNvbmNhdChpdGVtKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fZ2V0UXVlcnlSZXN1bHRzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRXhlY3V0ZSBhIHByb3ZpZGVkIGZ1bmN0aW9uIG9uIHRoZSBuZXh0IGVsZW1lbnQgaW4gdGhlIEFnZ3JlZ2F0ZUVuZHBvaW50Q29tcG9uZW50LlxuICAgICAqIEBtZW1iZXJvZiBBZ2dyZWdhdGVFbmRwb2ludENvbXBvbmVudFxuICAgICAqIEBpbnN0YW5jZVxuICAgICAqIEBwYXJhbSB7Y2FsbGJhY2t9IGNhbGxiYWNrIC0gRnVuY3Rpb24gdG8gZXhlY3V0ZSBmb3IgZWFjaCBlbGVtZW50LiBcXFxuICAgICAqIHRoZSBmdW5jdGlvbiB0YWtlcyB0d28gcGFyYW1ldGVycyBlcnJvciwgZWxlbWVudC5cbiAgICAgKi9cbiAgICBuZXh0SXRlbSgpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBsZXQgcmVzSGVhZGVycztcbiAgICAgICAgICAgICAgICBsZXQgcmVzb3VyY2VzO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmFnZ3JlZ2F0ZVZhbHVlcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICh7IHJlc3VsdDogcmVzb3VyY2VzLCBoZWFkZXJzOiByZXNIZWFkZXJzIH0gPSB5aWVsZCB0aGlzLl9nZXRBZ2dyZWdhdGVSZXN1bHQoKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHJlc291cmNlID0gdGhpcy5hZ2dyZWdhdGVWYWx1ZXNJbmRleCA8IHRoaXMuYWdncmVnYXRlVmFsdWVzLmxlbmd0aFxuICAgICAgICAgICAgICAgICAgICA/IHRoaXMuYWdncmVnYXRlVmFsdWVzWysrdGhpcy5hZ2dyZWdhdGVWYWx1ZXNJbmRleF1cbiAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgcmVzdWx0OiByZXNvdXJjZSwgaGVhZGVyczogcmVzSGVhZGVycyB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIHRoZSBjdXJyZW50IGVsZW1lbnQgb24gdGhlIEFnZ3JlZ2F0ZUVuZHBvaW50Q29tcG9uZW50LlxuICAgICAqIEBtZW1iZXJvZiBBZ2dyZWdhdGVFbmRwb2ludENvbXBvbmVudFxuICAgICAqIEBpbnN0YW5jZVxuICAgICAqIEBwYXJhbSB7Y2FsbGJhY2t9IGNhbGxiYWNrIC0gRnVuY3Rpb24gdG8gZXhlY3V0ZSBmb3IgdGhlIGN1cnJlbnQgZWxlbWVudC4gXFxcbiAgICAgKiB0aGUgZnVuY3Rpb24gdGFrZXMgdHdvIHBhcmFtZXRlcnMgZXJyb3IsIGVsZW1lbnQuXG4gICAgICovXG4gICAgY3VycmVudCgpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuYWdncmVnYXRlVmFsdWVzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IHJlc3VsdDogcmVzb3VjZXMsIGhlYWRlcnMgfSA9IHlpZWxkIHRoaXMuX2dldEFnZ3JlZ2F0ZVJlc3VsdCgpO1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdDogdGhpcy5hZ2dyZWdhdGVWYWx1ZXNbdGhpcy5hZ2dyZWdhdGVWYWx1ZXNJbmRleF0sXG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnNcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0OiB0aGlzLmFnZ3JlZ2F0ZVZhbHVlc1t0aGlzLmFnZ3JlZ2F0ZVZhbHVlc0luZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERldGVybWluZSBpZiB0aGVyZSBhcmUgc3RpbGwgcmVtYWluaW5nIHJlc291cmNlcyB0byBwcm9jZXNzcy5cbiAgICAgKiBAbWVtYmVyb2YgQWdncmVnYXRlRW5kcG9pbnRDb21wb25lbnRcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0gdHJ1ZSBpZiB0aGVyZSBpcyBvdGhlciBlbGVtZW50cyB0byBwcm9jZXNzIGluIHRoZSBBZ2dyZWdhdGVFbmRwb2ludENvbXBvbmVudC5cbiAgICAgKi9cbiAgICBoYXNNb3JlUmVzdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYWdncmVnYXRlVmFsdWVzICE9IG51bGwgJiYgdGhpcy5hZ2dyZWdhdGVWYWx1ZXNJbmRleCA8IHRoaXMuYWdncmVnYXRlVmFsdWVzLmxlbmd0aCAtIDE7XG4gICAgfVxufVxuZXhwb3J0cy5BZ2dyZWdhdGVFbmRwb2ludENvbXBvbmVudCA9IEFnZ3JlZ2F0ZUVuZHBvaW50Q29tcG9uZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWdncmVnYXRlRW5kcG9pbnRDb21wb25lbnQuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/EndpointComponent/AggregateEndpointComponent.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/EndpointComponent/OrderByEndpointComponent.js":
/*!*********************************************************************************!*\
  !*** ./lib/queryExecutionContext/EndpointComponent/OrderByEndpointComponent.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/** @hidden */\nclass OrderByEndpointComponent {\n    /**\n     * Represents an endpoint in handling an order by query. For each processed orderby \\\n     * result it returns 'payload' item of the result\n     * @constructor OrderByEndpointComponent\n     * @param {object} executionContext              - Underlying Execution Context\n     * @ignore\n     */\n    constructor(executionContext) {\n        this.executionContext = executionContext;\n    }\n    /**\n     * Execute a provided function on the next element in the OrderByEndpointComponent.\n     * @memberof OrderByEndpointComponent\n     * @instance\n     * @param {callback} callback - Function to execute for each element. the function \\\n     * takes two parameters error, element.\n     */\n    nextItem() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                const { result: item, headers } = yield this.executionContext.nextItem();\n                return {\n                    result: item !== undefined ? item.payload : undefined,\n                    headers\n                };\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Retrieve the current element on the OrderByEndpointComponent.\n     * @memberof OrderByEndpointComponent\n     * @instance\n     * @param {callback} callback - Function to execute for the current element. \\\n     * the function takes two parameters error, element.\n     */\n    current() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                const { result: item, headers } = yield this.executionContext.current();\n                return {\n                    result: item !== undefined ? item.payload : undefined,\n                    headers\n                };\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Determine if there are still remaining resources to processs.\n     * @memberof OrderByEndpointComponent\n     * @instance\n     * @returns {Boolean} true if there is other elements to process in the OrderByEndpointComponent.\n     */\n    hasMoreResults() {\n        return this.executionContext.hasMoreResults();\n    }\n}\nexports.OrderByEndpointComponent = OrderByEndpointComponent;\n//# sourceMappingURL=OrderByEndpointComponent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L0VuZHBvaW50Q29tcG9uZW50L09yZGVyQnlFbmRwb2ludENvbXBvbmVudC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvRW5kcG9pbnRDb21wb25lbnQvT3JkZXJCeUVuZHBvaW50Q29tcG9uZW50LmpzPzMzNmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuLyoqIEBoaWRkZW4gKi9cbmNsYXNzIE9yZGVyQnlFbmRwb2ludENvbXBvbmVudCB7XG4gICAgLyoqXG4gICAgICogUmVwcmVzZW50cyBhbiBlbmRwb2ludCBpbiBoYW5kbGluZyBhbiBvcmRlciBieSBxdWVyeS4gRm9yIGVhY2ggcHJvY2Vzc2VkIG9yZGVyYnkgXFxcbiAgICAgKiByZXN1bHQgaXQgcmV0dXJucyAncGF5bG9hZCcgaXRlbSBvZiB0aGUgcmVzdWx0XG4gICAgICogQGNvbnN0cnVjdG9yIE9yZGVyQnlFbmRwb2ludENvbXBvbmVudFxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBleGVjdXRpb25Db250ZXh0ICAgICAgICAgICAgICAtIFVuZGVybHlpbmcgRXhlY3V0aW9uIENvbnRleHRcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXhlY3V0aW9uQ29udGV4dCkge1xuICAgICAgICB0aGlzLmV4ZWN1dGlvbkNvbnRleHQgPSBleGVjdXRpb25Db250ZXh0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBFeGVjdXRlIGEgcHJvdmlkZWQgZnVuY3Rpb24gb24gdGhlIG5leHQgZWxlbWVudCBpbiB0aGUgT3JkZXJCeUVuZHBvaW50Q29tcG9uZW50LlxuICAgICAqIEBtZW1iZXJvZiBPcmRlckJ5RW5kcG9pbnRDb21wb25lbnRcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKiBAcGFyYW0ge2NhbGxiYWNrfSBjYWxsYmFjayAtIEZ1bmN0aW9uIHRvIGV4ZWN1dGUgZm9yIGVhY2ggZWxlbWVudC4gdGhlIGZ1bmN0aW9uIFxcXG4gICAgICogdGFrZXMgdHdvIHBhcmFtZXRlcnMgZXJyb3IsIGVsZW1lbnQuXG4gICAgICovXG4gICAgbmV4dEl0ZW0oKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyByZXN1bHQ6IGl0ZW0sIGhlYWRlcnMgfSA9IHlpZWxkIHRoaXMuZXhlY3V0aW9uQ29udGV4dC5uZXh0SXRlbSgpO1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdDogaXRlbSAhPT0gdW5kZWZpbmVkID8gaXRlbS5wYXlsb2FkIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZSB0aGUgY3VycmVudCBlbGVtZW50IG9uIHRoZSBPcmRlckJ5RW5kcG9pbnRDb21wb25lbnQuXG4gICAgICogQG1lbWJlcm9mIE9yZGVyQnlFbmRwb2ludENvbXBvbmVudFxuICAgICAqIEBpbnN0YW5jZVxuICAgICAqIEBwYXJhbSB7Y2FsbGJhY2t9IGNhbGxiYWNrIC0gRnVuY3Rpb24gdG8gZXhlY3V0ZSBmb3IgdGhlIGN1cnJlbnQgZWxlbWVudC4gXFxcbiAgICAgKiB0aGUgZnVuY3Rpb24gdGFrZXMgdHdvIHBhcmFtZXRlcnMgZXJyb3IsIGVsZW1lbnQuXG4gICAgICovXG4gICAgY3VycmVudCgpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IHJlc3VsdDogaXRlbSwgaGVhZGVycyB9ID0geWllbGQgdGhpcy5leGVjdXRpb25Db250ZXh0LmN1cnJlbnQoKTtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQ6IGl0ZW0gIT09IHVuZGVmaW5lZCA/IGl0ZW0ucGF5bG9hZCA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGV0ZXJtaW5lIGlmIHRoZXJlIGFyZSBzdGlsbCByZW1haW5pbmcgcmVzb3VyY2VzIHRvIHByb2Nlc3NzLlxuICAgICAqIEBtZW1iZXJvZiBPcmRlckJ5RW5kcG9pbnRDb21wb25lbnRcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0gdHJ1ZSBpZiB0aGVyZSBpcyBvdGhlciBlbGVtZW50cyB0byBwcm9jZXNzIGluIHRoZSBPcmRlckJ5RW5kcG9pbnRDb21wb25lbnQuXG4gICAgICovXG4gICAgaGFzTW9yZVJlc3VsdHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmV4ZWN1dGlvbkNvbnRleHQuaGFzTW9yZVJlc3VsdHMoKTtcbiAgICB9XG59XG5leHBvcnRzLk9yZGVyQnlFbmRwb2ludENvbXBvbmVudCA9IE9yZGVyQnlFbmRwb2ludENvbXBvbmVudDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU9yZGVyQnlFbmRwb2ludENvbXBvbmVudC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/EndpointComponent/OrderByEndpointComponent.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/EndpointComponent/TopEndpointComponent.js":
/*!*****************************************************************************!*\
  !*** ./lib/queryExecutionContext/EndpointComponent/TopEndpointComponent.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/** @hidden */\nclass TopEndpointComponent {\n    /**\n     * Represents an endpoint in handling top query. It only returns as many results as top arg specified.\n     * @constructor TopEndpointComponent\n     * @param { object } executionContext - Underlying Execution Context\n     * @ignore\n     */\n    constructor(executionContext, topCount) {\n        this.executionContext = executionContext;\n        this.topCount = topCount;\n    }\n    /**\n     * Execute a provided function on the next element in the TopEndpointComponent.\n     * @memberof TopEndpointComponent\n     * @instance\n     * @param {callback} callback - Function to execute for each element. \\\n     * the function takes two parameters error, element.\n     */\n    nextItem() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (this.topCount <= 0) {\n                return { result: undefined, headers: undefined };\n            }\n            this.topCount--;\n            try {\n                return this.executionContext.nextItem();\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Retrieve the current element on the TopEndpointComponent.\n     * @memberof TopEndpointComponent\n     * @instance\n     * @param {callback} callback - Function to execute for the current element. \\\n     * the function takes two parameters error, element.\n     */\n    current() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (this.topCount <= 0) {\n                return { result: undefined, headers: undefined };\n            }\n            try {\n                return this.executionContext.current();\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Determine if there are still remaining resources to processs.\n     * @memberof TopEndpointComponent\n     * @instance\n     * @returns {Boolean} true if there is other elements to process in the TopEndpointComponent.\n     */\n    hasMoreResults() {\n        return this.topCount > 0 && this.executionContext.hasMoreResults();\n    }\n}\nexports.TopEndpointComponent = TopEndpointComponent;\n//# sourceMappingURL=TopEndpointComponent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L0VuZHBvaW50Q29tcG9uZW50L1RvcEVuZHBvaW50Q29tcG9uZW50LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9FbmRwb2ludENvbXBvbmVudC9Ub3BFbmRwb2ludENvbXBvbmVudC5qcz8wNDk5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbi8qKiBAaGlkZGVuICovXG5jbGFzcyBUb3BFbmRwb2ludENvbXBvbmVudCB7XG4gICAgLyoqXG4gICAgICogUmVwcmVzZW50cyBhbiBlbmRwb2ludCBpbiBoYW5kbGluZyB0b3AgcXVlcnkuIEl0IG9ubHkgcmV0dXJucyBhcyBtYW55IHJlc3VsdHMgYXMgdG9wIGFyZyBzcGVjaWZpZWQuXG4gICAgICogQGNvbnN0cnVjdG9yIFRvcEVuZHBvaW50Q29tcG9uZW50XG4gICAgICogQHBhcmFtIHsgb2JqZWN0IH0gZXhlY3V0aW9uQ29udGV4dCAtIFVuZGVybHlpbmcgRXhlY3V0aW9uIENvbnRleHRcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXhlY3V0aW9uQ29udGV4dCwgdG9wQ291bnQpIHtcbiAgICAgICAgdGhpcy5leGVjdXRpb25Db250ZXh0ID0gZXhlY3V0aW9uQ29udGV4dDtcbiAgICAgICAgdGhpcy50b3BDb3VudCA9IHRvcENvdW50O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBFeGVjdXRlIGEgcHJvdmlkZWQgZnVuY3Rpb24gb24gdGhlIG5leHQgZWxlbWVudCBpbiB0aGUgVG9wRW5kcG9pbnRDb21wb25lbnQuXG4gICAgICogQG1lbWJlcm9mIFRvcEVuZHBvaW50Q29tcG9uZW50XG4gICAgICogQGluc3RhbmNlXG4gICAgICogQHBhcmFtIHtjYWxsYmFja30gY2FsbGJhY2sgLSBGdW5jdGlvbiB0byBleGVjdXRlIGZvciBlYWNoIGVsZW1lbnQuIFxcXG4gICAgICogdGhlIGZ1bmN0aW9uIHRha2VzIHR3byBwYXJhbWV0ZXJzIGVycm9yLCBlbGVtZW50LlxuICAgICAqL1xuICAgIG5leHRJdGVtKCkge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy50b3BDb3VudCA8PSAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgcmVzdWx0OiB1bmRlZmluZWQsIGhlYWRlcnM6IHVuZGVmaW5lZCB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy50b3BDb3VudC0tO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5leGVjdXRpb25Db250ZXh0Lm5leHRJdGVtKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0cmlldmUgdGhlIGN1cnJlbnQgZWxlbWVudCBvbiB0aGUgVG9wRW5kcG9pbnRDb21wb25lbnQuXG4gICAgICogQG1lbWJlcm9mIFRvcEVuZHBvaW50Q29tcG9uZW50XG4gICAgICogQGluc3RhbmNlXG4gICAgICogQHBhcmFtIHtjYWxsYmFja30gY2FsbGJhY2sgLSBGdW5jdGlvbiB0byBleGVjdXRlIGZvciB0aGUgY3VycmVudCBlbGVtZW50LiBcXFxuICAgICAqIHRoZSBmdW5jdGlvbiB0YWtlcyB0d28gcGFyYW1ldGVycyBlcnJvciwgZWxlbWVudC5cbiAgICAgKi9cbiAgICBjdXJyZW50KCkge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy50b3BDb3VudCA8PSAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgcmVzdWx0OiB1bmRlZmluZWQsIGhlYWRlcnM6IHVuZGVmaW5lZCB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5leGVjdXRpb25Db250ZXh0LmN1cnJlbnQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZXRlcm1pbmUgaWYgdGhlcmUgYXJlIHN0aWxsIHJlbWFpbmluZyByZXNvdXJjZXMgdG8gcHJvY2Vzc3MuXG4gICAgICogQG1lbWJlcm9mIFRvcEVuZHBvaW50Q29tcG9uZW50XG4gICAgICogQGluc3RhbmNlXG4gICAgICogQHJldHVybnMge0Jvb2xlYW59IHRydWUgaWYgdGhlcmUgaXMgb3RoZXIgZWxlbWVudHMgdG8gcHJvY2VzcyBpbiB0aGUgVG9wRW5kcG9pbnRDb21wb25lbnQuXG4gICAgICovXG4gICAgaGFzTW9yZVJlc3VsdHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRvcENvdW50ID4gMCAmJiB0aGlzLmV4ZWN1dGlvbkNvbnRleHQuaGFzTW9yZVJlc3VsdHMoKTtcbiAgICB9XG59XG5leHBvcnRzLlRvcEVuZHBvaW50Q29tcG9uZW50ID0gVG9wRW5kcG9pbnRDb21wb25lbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ub3BFbmRwb2ludENvbXBvbmVudC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/EndpointComponent/TopEndpointComponent.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/EndpointComponent/index.js":
/*!**************************************************************!*\
  !*** ./lib/queryExecutionContext/EndpointComponent/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./AggregateEndpointComponent */ \"./lib/queryExecutionContext/EndpointComponent/AggregateEndpointComponent.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./OrderByEndpointComponent */ \"./lib/queryExecutionContext/EndpointComponent/OrderByEndpointComponent.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./TopEndpointComponent */ \"./lib/queryExecutionContext/EndpointComponent/TopEndpointComponent.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L0VuZHBvaW50Q29tcG9uZW50L2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9FbmRwb2ludENvbXBvbmVudC9pbmRleC5qcz9kZDI0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0FnZ3JlZ2F0ZUVuZHBvaW50Q29tcG9uZW50XCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL09yZGVyQnlFbmRwb2ludENvbXBvbmVudFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Ub3BFbmRwb2ludENvbXBvbmVudFwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/EndpointComponent/index.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/FetchResult.js":
/*!**************************************************!*\
  !*** ./lib/queryExecutionContext/FetchResult.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @hidden */\nvar FetchResultType;\n(function (FetchResultType) {\n    FetchResultType[FetchResultType[\"Done\"] = 0] = \"Done\";\n    FetchResultType[FetchResultType[\"Exception\"] = 1] = \"Exception\";\n    FetchResultType[FetchResultType[\"Result\"] = 2] = \"Result\";\n})(FetchResultType = exports.FetchResultType || (exports.FetchResultType = {}));\n/** @hidden */\nclass FetchResult {\n    /**\n     * Wraps fetch results for the document producer.\n     * This allows the document producer to buffer exceptions so that actual results don't get flushed during splits.\n     * @constructor DocumentProducer\n     * @param {object} feedReponse                  - The response the document producer got back on a successful fetch\n     * @param {object} error                        - The exception meant to be buffered on an unsuccessful fetch\n     * @ignore\n     */\n    constructor(feedResponse, error) {\n        // TODO: feedResponse/error\n        if (feedResponse) {\n            this.feedResponse = feedResponse;\n            this.fetchResultType = FetchResultType.Result;\n        }\n        else {\n            this.error = error;\n            this.fetchResultType = FetchResultType.Exception;\n        }\n    }\n}\nexports.FetchResult = FetchResult;\n//# sourceMappingURL=FetchResult.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L0ZldGNoUmVzdWx0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9GZXRjaFJlc3VsdC5qcz9kY2FjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqIEBoaWRkZW4gKi9cbnZhciBGZXRjaFJlc3VsdFR5cGU7XG4oZnVuY3Rpb24gKEZldGNoUmVzdWx0VHlwZSkge1xuICAgIEZldGNoUmVzdWx0VHlwZVtGZXRjaFJlc3VsdFR5cGVbXCJEb25lXCJdID0gMF0gPSBcIkRvbmVcIjtcbiAgICBGZXRjaFJlc3VsdFR5cGVbRmV0Y2hSZXN1bHRUeXBlW1wiRXhjZXB0aW9uXCJdID0gMV0gPSBcIkV4Y2VwdGlvblwiO1xuICAgIEZldGNoUmVzdWx0VHlwZVtGZXRjaFJlc3VsdFR5cGVbXCJSZXN1bHRcIl0gPSAyXSA9IFwiUmVzdWx0XCI7XG59KShGZXRjaFJlc3VsdFR5cGUgPSBleHBvcnRzLkZldGNoUmVzdWx0VHlwZSB8fCAoZXhwb3J0cy5GZXRjaFJlc3VsdFR5cGUgPSB7fSkpO1xuLyoqIEBoaWRkZW4gKi9cbmNsYXNzIEZldGNoUmVzdWx0IHtcbiAgICAvKipcbiAgICAgKiBXcmFwcyBmZXRjaCByZXN1bHRzIGZvciB0aGUgZG9jdW1lbnQgcHJvZHVjZXIuXG4gICAgICogVGhpcyBhbGxvd3MgdGhlIGRvY3VtZW50IHByb2R1Y2VyIHRvIGJ1ZmZlciBleGNlcHRpb25zIHNvIHRoYXQgYWN0dWFsIHJlc3VsdHMgZG9uJ3QgZ2V0IGZsdXNoZWQgZHVyaW5nIHNwbGl0cy5cbiAgICAgKiBAY29uc3RydWN0b3IgRG9jdW1lbnRQcm9kdWNlclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBmZWVkUmVwb25zZSAgICAgICAgICAgICAgICAgIC0gVGhlIHJlc3BvbnNlIHRoZSBkb2N1bWVudCBwcm9kdWNlciBnb3QgYmFjayBvbiBhIHN1Y2Nlc3NmdWwgZmV0Y2hcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gZXJyb3IgICAgICAgICAgICAgICAgICAgICAgICAtIFRoZSBleGNlcHRpb24gbWVhbnQgdG8gYmUgYnVmZmVyZWQgb24gYW4gdW5zdWNjZXNzZnVsIGZldGNoXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGZlZWRSZXNwb25zZSwgZXJyb3IpIHtcbiAgICAgICAgLy8gVE9ETzogZmVlZFJlc3BvbnNlL2Vycm9yXG4gICAgICAgIGlmIChmZWVkUmVzcG9uc2UpIHtcbiAgICAgICAgICAgIHRoaXMuZmVlZFJlc3BvbnNlID0gZmVlZFJlc3BvbnNlO1xuICAgICAgICAgICAgdGhpcy5mZXRjaFJlc3VsdFR5cGUgPSBGZXRjaFJlc3VsdFR5cGUuUmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5lcnJvciA9IGVycm9yO1xuICAgICAgICAgICAgdGhpcy5mZXRjaFJlc3VsdFR5cGUgPSBGZXRjaFJlc3VsdFR5cGUuRXhjZXB0aW9uO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5GZXRjaFJlc3VsdCA9IEZldGNoUmVzdWx0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RmV0Y2hSZXN1bHQuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/FetchResult.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/defaultQueryExecutionContext.js":
/*!*******************************************************************!*\
  !*** ./lib/queryExecutionContext/defaultQueryExecutionContext.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../common */ \"./lib/common/index.js\");\nconst queryMetrics_1 = __webpack_require__(/*! ../queryMetrics */ \"./lib/queryMetrics/index.js\");\n/** @hidden */\nvar STATES;\n(function (STATES) {\n    STATES[\"start\"] = \"start\";\n    STATES[\"inProgress\"] = \"inProgress\";\n    STATES[\"ended\"] = \"ended\";\n})(STATES || (STATES = {}));\n/** @hidden */\nclass DefaultQueryExecutionContext {\n    /**\n     * Provides the basic Query Execution Context.\n     * This wraps the internal logic query execution using provided fetch functions\n     * @constructor DefaultQueryExecutionContext\n     * @param {ClientContext} clientContext          - Is used to read the partitionKeyRanges for split proofing\n     * @param {SqlQuerySpec | string} query          - A SQL query.\n     * @param {FeedOptions} [options]                - Represents the feed options.\n     * @param {callback | callback[]} fetchFunctions - A function to retrieve each page of data.\n     *                          An array of functions may be used to query more than one partition.\n     * @ignore\n     */\n    constructor(clientContext, query, options, fetchFunctions) {\n        this.clientContext = clientContext;\n        // TODO: any options\n        this.query = query;\n        this.resources = [];\n        this.currentIndex = 0;\n        this.currentPartitionIndex = 0;\n        this.fetchFunctions = Array.isArray(fetchFunctions) ? fetchFunctions : [fetchFunctions];\n        this.options = options || {};\n        this.continuation = this.options.continuation || null;\n        this.state = DefaultQueryExecutionContext.STATES.start;\n    }\n    /**\n     * Execute a provided callback on the next element in the execution context.\n     * @memberof DefaultQueryExecutionContext\n     * @instance\n     */\n    nextItem() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const response = yield this.current();\n            ++this.currentIndex;\n            return response;\n        });\n    }\n    /**\n     * Retrieve the current element on the execution context.\n     * @memberof DefaultQueryExecutionContext\n     * @instance\n     */\n    current() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (this.currentIndex < this.resources.length) {\n                return {\n                    result: this.resources[this.currentIndex],\n                    headers: undefined\n                };\n            }\n            if (this._canFetchMore()) {\n                const { result: resources, headers } = yield this.fetchMore();\n                // if (err) {\n                //     return callback(err, undefined, headers);\n                // }\n                // TODO: returning data and error is an anti-pattern\n                this.resources = resources;\n                if (this.resources.length === 0) {\n                    if (!this.continuation && this.currentPartitionIndex >= this.fetchFunctions.length) {\n                        this.state = DefaultQueryExecutionContext.STATES.ended;\n                        return { result: undefined, headers };\n                    }\n                    else {\n                        return this.current();\n                    }\n                }\n                return { result: this.resources[this.currentIndex], headers };\n            }\n            else {\n                this.state = DefaultQueryExecutionContext.STATES.ended;\n                return { result: undefined, headers: undefined };\n            }\n        });\n    }\n    /**\n     * Determine if there are still remaining resources to processs based on\n     * the value of the continuation token or the elements remaining on the current batch in the execution context.\n     * @memberof DefaultQueryExecutionContext\n     * @instance\n     * @returns {Boolean} true if there is other elements to process in the DefaultQueryExecutionContext.\n     */\n    hasMoreResults() {\n        return (this.state === DefaultQueryExecutionContext.STATES.start ||\n            this.continuation !== undefined ||\n            this.currentIndex < this.resources.length ||\n            this.currentPartitionIndex < this.fetchFunctions.length);\n    }\n    /**\n     * Fetches the next batch of the feed and pass them as an array to a callback\n     * @memberof DefaultQueryExecutionContext\n     * @instance\n     */\n    fetchMore() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (this.currentPartitionIndex >= this.fetchFunctions.length) {\n                return { headers: undefined, result: undefined };\n            }\n            // Keep to the original continuation and to restore the value after fetchFunction call\n            const originalContinuation = this.options.continuation;\n            this.options.continuation = this.continuation;\n            // Return undefined if there is no more results\n            if (this.currentPartitionIndex >= this.fetchFunctions.length) {\n                return { headers: undefined, result: undefined };\n            }\n            const fetchFunction = this.fetchFunctions[this.currentPartitionIndex];\n            let resources;\n            let responseHeaders;\n            try {\n                const response = yield fetchFunction(this.options);\n                resources = response.result;\n                responseHeaders = response.headers;\n            }\n            catch (err) {\n                this.state = DefaultQueryExecutionContext.STATES.ended;\n                // return callback(err, undefined, responseHeaders);\n                // TODO: Error and data being returned is an antipattern, this might broken\n                throw err;\n            }\n            this.continuation = responseHeaders[common_1.Constants.HttpHeaders.Continuation];\n            if (!this.continuation) {\n                ++this.currentPartitionIndex;\n            }\n            this.state = DefaultQueryExecutionContext.STATES.inProgress;\n            this.currentIndex = 0;\n            this.options.continuation = originalContinuation;\n            // deserializing query metrics so that we aren't working with delimited strings in the rest of the code base\n            if (common_1.Constants.HttpHeaders.QueryMetrics in responseHeaders) {\n                const delimitedString = responseHeaders[common_1.Constants.HttpHeaders.QueryMetrics];\n                let queryMetrics = queryMetrics_1.QueryMetrics.createFromDelimitedString(delimitedString);\n                // Add the request charge to the query metrics so that we can have per partition request charge.\n                if (common_1.Constants.HttpHeaders.RequestCharge in responseHeaders) {\n                    queryMetrics = new queryMetrics_1.QueryMetrics(queryMetrics.retrievedDocumentCount, queryMetrics.retrievedDocumentSize, queryMetrics.outputDocumentCount, queryMetrics.outputDocumentSize, queryMetrics.indexHitDocumentCount, queryMetrics.totalQueryExecutionTime, queryMetrics.queryPreparationTimes, queryMetrics.indexLookupTime, queryMetrics.documentLoadTime, queryMetrics.vmExecutionTime, queryMetrics.runtimeExecutionTimes, queryMetrics.documentWriteTime, new queryMetrics_1.ClientSideMetrics(responseHeaders[common_1.Constants.HttpHeaders.RequestCharge]));\n                }\n                // Wraping query metrics in a object where the key is '0' just so single partition\n                // and partition queries have the same response schema\n                responseHeaders[common_1.Constants.HttpHeaders.QueryMetrics] = {};\n                responseHeaders[common_1.Constants.HttpHeaders.QueryMetrics][\"0\"] = queryMetrics;\n            }\n            return { result: resources, headers: responseHeaders };\n        });\n    }\n    _canFetchMore() {\n        const res = this.state === DefaultQueryExecutionContext.STATES.start ||\n            (this.continuation && this.state === DefaultQueryExecutionContext.STATES.inProgress) ||\n            (this.currentPartitionIndex < this.fetchFunctions.length &&\n                this.state === DefaultQueryExecutionContext.STATES.inProgress);\n        return res;\n    }\n}\nDefaultQueryExecutionContext.STATES = STATES;\nexports.DefaultQueryExecutionContext = DefaultQueryExecutionContext;\n//# sourceMappingURL=defaultQueryExecutionContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/defaultQueryExecutionContext.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/documentProducer.js":
/*!*******************************************************!*\
  !*** ./lib/queryExecutionContext/documentProducer.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst assert_1 = tslib_1.__importDefault(__webpack_require__(/*! assert */ \"./node_modules/assert/assert.js\"));\nconst common_1 = __webpack_require__(/*! ../common */ \"./lib/common/index.js\");\nconst defaultQueryExecutionContext_1 = __webpack_require__(/*! ./defaultQueryExecutionContext */ \"./lib/queryExecutionContext/defaultQueryExecutionContext.js\");\nconst FetchResult_1 = __webpack_require__(/*! ./FetchResult */ \"./lib/queryExecutionContext/FetchResult.js\");\nconst headerUtils_1 = __webpack_require__(/*! ./headerUtils */ \"./lib/queryExecutionContext/headerUtils.js\");\n/** @hidden */\nconst HttpHeaders = common_1.Constants;\n/** @hidden */\nvar DocumentProducerStates;\n(function (DocumentProducerStates) {\n    DocumentProducerStates[\"started\"] = \"started\";\n    DocumentProducerStates[\"inProgress\"] = \"inProgress\";\n    DocumentProducerStates[\"ended\"] = \"ended\";\n})(DocumentProducerStates || (DocumentProducerStates = {}));\n/** @hidden */\nclass DocumentProducer {\n    /**\n     * Provides the Target Partition Range Query Execution Context.\n     * @constructor DocumentProducer\n     * @param {ClientContext} clientContext        - The service endpoint to use to create the client.\n     * @param {String} collectionLink                - Represents collection link\n     * @param {SqlQuerySpec | string} query          - A SQL query.\n     * @param {object} targetPartitionKeyRange       - Query Target Partition key Range\n     * @ignore\n     */\n    constructor(clientContext, collectionLink, query, targetPartitionKeyRange, // TODO: any partition key range\n    options) {\n        this.clientContext = clientContext;\n        this.fetchFunction = (options) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const path = common_1.Helper.getPathFromLink(this.collectionLink, \"docs\");\n            const id = common_1.Helper.getIdFromLink(this.collectionLink);\n            return this.clientContext.queryFeed(path, \"docs\", id, (result) => result.Documents, // TODO: any\n            this.query, options, this.targetPartitionKeyRange[\"id\"]);\n        });\n        // TODO: any options\n        this.collectionLink = collectionLink;\n        this.query = query;\n        this.targetPartitionKeyRange = targetPartitionKeyRange;\n        this.fetchResults = [];\n        this.state = DocumentProducer.STATES.started;\n        this.allFetched = false;\n        this.err = undefined;\n        this.previousContinuationToken = undefined;\n        this.continuationToken = undefined;\n        this.respHeaders = headerUtils_1.HeaderUtils.getInitialHeader();\n        // tslint:disable-next-line:no-shadowed-variable\n        this.internalExecutionContext = new defaultQueryExecutionContext_1.DefaultQueryExecutionContext(clientContext, query, options, this.fetchFunction);\n        this.state = DocumentProducer.STATES.inProgress;\n    }\n    /**\n     * Synchronously gives the contiguous buffered results (stops at the first non result) if any\n     * @returns {Object}       - buffered current items if any\n     * @ignore\n     */\n    peekBufferedItems() {\n        const bufferedResults = [];\n        for (let i = 0, done = false; i < this.fetchResults.length && !done; i++) {\n            const fetchResult = this.fetchResults[i];\n            switch (fetchResult.fetchResultType) {\n                case FetchResult_1.FetchResultType.Done:\n                    done = true;\n                    break;\n                case FetchResult_1.FetchResultType.Exception:\n                    done = true;\n                    break;\n                case FetchResult_1.FetchResultType.Result:\n                    bufferedResults.push(fetchResult.feedResponse);\n                    break;\n            }\n        }\n        return bufferedResults;\n    }\n    hasMoreResults() {\n        return this.internalExecutionContext.hasMoreResults() || this.fetchResults.length !== 0;\n    }\n    gotSplit() {\n        const fetchResult = this.fetchResults[0];\n        if (fetchResult.fetchResultType === FetchResult_1.FetchResultType.Exception) {\n            if (DocumentProducer._needPartitionKeyRangeCacheRefresh(fetchResult.error)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _getAndResetActiveResponseHeaders() {\n        const ret = this.respHeaders;\n        this.respHeaders = headerUtils_1.HeaderUtils.getInitialHeader();\n        return ret;\n    }\n    _updateStates(err, allFetched) {\n        // TODO: any Error\n        if (err) {\n            this.state = DocumentProducer.STATES.ended;\n            this.err = err;\n            return;\n        }\n        if (allFetched) {\n            this.allFetched = true;\n        }\n        if (this.allFetched && this.peekBufferedItems().length === 0) {\n            this.state = DocumentProducer.STATES.ended;\n        }\n        if (this.internalExecutionContext.continuation === this.continuationToken) {\n            // nothing changed\n            return;\n        }\n        this.previousContinuationToken = this.continuationToken;\n        this.continuationToken = this.internalExecutionContext.continuation;\n    }\n    static _needPartitionKeyRangeCacheRefresh(error) {\n        // TODO: error\n        return (error.code === common_1.StatusCodes.Gone &&\n            \"substatus\" in error &&\n            error[\"substatus\"] === common_1.SubStatusCodes.PartitionKeyRangeGone);\n    }\n    /**\n     * Fetches and bufferes the next page of results and executes the given callback\n     * @memberof DocumentProducer\n     * @instance\n     */\n    bufferMore() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (this.err) {\n                throw this.err;\n            }\n            try {\n                const { result: resources, headers: headerResponse } = yield this.internalExecutionContext.fetchMore();\n                this._updateStates(undefined, resources === undefined);\n                if (resources !== undefined) {\n                    // some more results\n                    resources.forEach((element) => {\n                        // TODO: resources any\n                        this.fetchResults.push(new FetchResult_1.FetchResult(element, undefined));\n                    });\n                }\n                // need to modify the header response so that the query metrics are per partition\n                if (headerResponse != null && common_1.Constants.HttpHeaders.QueryMetrics in headerResponse) {\n                    // \"0\" is the default partition before one is actually assigned.\n                    const queryMetrics = headerResponse[common_1.Constants.HttpHeaders.QueryMetrics][\"0\"];\n                    // Wraping query metrics in a object where the keys are the partition key range.\n                    headerResponse[common_1.Constants.HttpHeaders.QueryMetrics] = {};\n                    headerResponse[common_1.Constants.HttpHeaders.QueryMetrics][this.targetPartitionKeyRange.id] = queryMetrics;\n                }\n                return { result: resources, headers: headerResponse };\n            }\n            catch (err) {\n                // TODO: any error\n                if (DocumentProducer._needPartitionKeyRangeCacheRefresh(err)) {\n                    // Split just happend\n                    // Buffer the error so the execution context can still get the feedResponses in the itemBuffer\n                    const bufferedError = new FetchResult_1.FetchResult(undefined, err);\n                    this.fetchResults.push(bufferedError);\n                    // Putting a dummy result so that the rest of code flows\n                    return { result: [bufferedError], headers: err.headers };\n                }\n                else {\n                    this._updateStates(err, err.resources === undefined);\n                    throw err;\n                }\n            }\n        });\n    }\n    /**\n     * Synchronously gives the bufferend current item if any\n     * @returns {Object}       - buffered current item if any\n     * @ignore\n     */\n    getTargetParitionKeyRange() {\n        return this.targetPartitionKeyRange;\n    }\n    /**\n     * Execute a provided function on the next element in the DocumentProducer.\n     * @memberof DocumentProducer\n     * @instance\n     * @param {callback} callback - Function to execute for each element. the function \\\n     * takes two parameters error, element.\n     */\n    nextItem() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (this.err) {\n                this._updateStates(this.err, undefined);\n                throw this.err;\n            }\n            try {\n                const { result, headers } = yield this.current();\n                const fetchResult = this.fetchResults.shift();\n                this._updateStates(undefined, result === undefined);\n                assert_1.default.equal(fetchResult.feedResponse, result);\n                switch (fetchResult.fetchResultType) {\n                    case FetchResult_1.FetchResultType.Done:\n                        return { result: undefined, headers };\n                    case FetchResult_1.FetchResultType.Exception:\n                        fetchResult.error.headers = headers;\n                        throw fetchResult.error;\n                    case FetchResult_1.FetchResultType.Result:\n                        return { result: fetchResult.feedResponse, headers };\n                }\n            }\n            catch (err) {\n                this._updateStates(err, err.item === undefined);\n                throw err;\n            }\n        });\n    }\n    /**\n     * Retrieve the current element on the DocumentProducer.\n     * @memberof DocumentProducer\n     * @instance\n     * @param {callback} callback - Function to execute for the current element. \\\n     * the function takes two parameters error, element.\n     */\n    current() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            // If something is buffered just give that\n            if (this.fetchResults.length > 0) {\n                const fetchResult = this.fetchResults[0];\n                // Need to unwrap fetch results\n                switch (fetchResult.fetchResultType) {\n                    case FetchResult_1.FetchResultType.Done:\n                        return {\n                            result: undefined,\n                            headers: this._getAndResetActiveResponseHeaders()\n                        };\n                    case FetchResult_1.FetchResultType.Exception:\n                        fetchResult.error.headers = this._getAndResetActiveResponseHeaders();\n                        throw fetchResult.error;\n                    case FetchResult_1.FetchResultType.Result:\n                        return {\n                            result: fetchResult.feedResponse,\n                            headers: this._getAndResetActiveResponseHeaders()\n                        };\n                }\n            }\n            // If there isn't anymore items left to fetch then let the user know.\n            if (this.allFetched) {\n                return {\n                    result: undefined,\n                    headers: this._getAndResetActiveResponseHeaders()\n                };\n            }\n            // If there are no more bufferd items and there are still items to be fetched then buffer more\n            try {\n                const { result, headers } = yield this.bufferMore();\n                if (result === undefined) {\n                    return { result: undefined, headers };\n                }\n                headerUtils_1.HeaderUtils.mergeHeaders(this.respHeaders, headers);\n                return this.current();\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n}\n// // Static Members\n// STATES: Object.freeze({ started: \"started\", inProgress: \"inProgress\", ended: \"ended\" })\nDocumentProducer.STATES = DocumentProducerStates;\nexports.DocumentProducer = DocumentProducer;\n//# sourceMappingURL=documentProducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/documentProducer.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/headerUtils.js":
/*!**************************************************!*\
  !*** ./lib/queryExecutionContext/headerUtils.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common_1 = __webpack_require__(/*! ../common */ \"./lib/common/index.js\");\nconst queryMetrics_1 = __webpack_require__(/*! ../queryMetrics */ \"./lib/queryMetrics/index.js\");\n/** @hidden */\n// TODO: docs\nclass HeaderUtils {\n    static getRequestChargeIfAny(headers) {\n        if (typeof headers === \"number\") {\n            return headers;\n        }\n        else if (typeof headers === \"string\") {\n            return parseFloat(headers);\n        }\n        if (headers) {\n            const rc = headers[common_1.Constants.HttpHeaders.RequestCharge];\n            if (rc) {\n                return parseFloat(rc);\n            }\n            else {\n                return 0;\n            }\n        }\n        else {\n            return 0;\n        }\n    }\n    static getInitialHeader() {\n        const headers = {};\n        headers[common_1.Constants.HttpHeaders.RequestCharge] = 0;\n        headers[common_1.Constants.HttpHeaders.QueryMetrics] = {};\n        return headers;\n    }\n    // TODO: The name of this method isn't very accurate to what it does\n    static mergeHeaders(headers, toBeMergedHeaders) {\n        if (headers[common_1.Constants.HttpHeaders.RequestCharge] === undefined) {\n            headers[common_1.Constants.HttpHeaders.RequestCharge] = 0;\n        }\n        if (headers[common_1.Constants.HttpHeaders.QueryMetrics] === undefined) {\n            headers[common_1.Constants.HttpHeaders.QueryMetrics] = queryMetrics_1.QueryMetrics.zero;\n        }\n        if (!toBeMergedHeaders) {\n            return;\n        }\n        headers[common_1.Constants.HttpHeaders.RequestCharge] += HeaderUtils.getRequestChargeIfAny(toBeMergedHeaders);\n        if (toBeMergedHeaders[common_1.Constants.HttpHeaders.IsRUPerMinuteUsed]) {\n            headers[common_1.Constants.HttpHeaders.IsRUPerMinuteUsed] = toBeMergedHeaders[common_1.Constants.HttpHeaders.IsRUPerMinuteUsed];\n        }\n        if (common_1.Constants.HttpHeaders.QueryMetrics in toBeMergedHeaders) {\n            const headerQueryMetrics = headers[common_1.Constants.HttpHeaders.QueryMetrics];\n            const toBeMergedHeaderQueryMetrics = toBeMergedHeaders[common_1.Constants.HttpHeaders.QueryMetrics];\n            for (const partitionId in toBeMergedHeaderQueryMetrics) {\n                if (partitionId in headerQueryMetrics) {\n                    const combinedQueryMetrics = headerQueryMetrics[partitionId].add(toBeMergedHeaderQueryMetrics[partitionId]);\n                    headerQueryMetrics[partitionId] = combinedQueryMetrics;\n                }\n                else {\n                    headerQueryMetrics[partitionId] = toBeMergedHeaderQueryMetrics[partitionId];\n                }\n            }\n        }\n    }\n}\nexports.HeaderUtils = HeaderUtils;\n//# sourceMappingURL=headerUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L2hlYWRlclV0aWxzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9oZWFkZXJVdGlscy5qcz85OWMyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgY29tbW9uXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uXCIpO1xuY29uc3QgcXVlcnlNZXRyaWNzXzEgPSByZXF1aXJlKFwiLi4vcXVlcnlNZXRyaWNzXCIpO1xuLyoqIEBoaWRkZW4gKi9cbi8vIFRPRE86IGRvY3NcbmNsYXNzIEhlYWRlclV0aWxzIHtcbiAgICBzdGF0aWMgZ2V0UmVxdWVzdENoYXJnZUlmQW55KGhlYWRlcnMpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBoZWFkZXJzID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgICByZXR1cm4gaGVhZGVycztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgaGVhZGVycyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQoaGVhZGVycyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGhlYWRlcnMpIHtcbiAgICAgICAgICAgIGNvbnN0IHJjID0gaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuUmVxdWVzdENoYXJnZV07XG4gICAgICAgICAgICBpZiAocmMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcGFyc2VGbG9hdChyYyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBnZXRJbml0aWFsSGVhZGVyKCkge1xuICAgICAgICBjb25zdCBoZWFkZXJzID0ge307XG4gICAgICAgIGhlYWRlcnNbY29tbW9uXzEuQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlJlcXVlc3RDaGFyZ2VdID0gMDtcbiAgICAgICAgaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuUXVlcnlNZXRyaWNzXSA9IHt9O1xuICAgICAgICByZXR1cm4gaGVhZGVycztcbiAgICB9XG4gICAgLy8gVE9ETzogVGhlIG5hbWUgb2YgdGhpcyBtZXRob2QgaXNuJ3QgdmVyeSBhY2N1cmF0ZSB0byB3aGF0IGl0IGRvZXNcbiAgICBzdGF0aWMgbWVyZ2VIZWFkZXJzKGhlYWRlcnMsIHRvQmVNZXJnZWRIZWFkZXJzKSB7XG4gICAgICAgIGlmIChoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5SZXF1ZXN0Q2hhcmdlXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5SZXF1ZXN0Q2hhcmdlXSA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGhlYWRlcnNbY29tbW9uXzEuQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlF1ZXJ5TWV0cmljc10gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuUXVlcnlNZXRyaWNzXSA9IHF1ZXJ5TWV0cmljc18xLlF1ZXJ5TWV0cmljcy56ZXJvO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdG9CZU1lcmdlZEhlYWRlcnMpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5SZXF1ZXN0Q2hhcmdlXSArPSBIZWFkZXJVdGlscy5nZXRSZXF1ZXN0Q2hhcmdlSWZBbnkodG9CZU1lcmdlZEhlYWRlcnMpO1xuICAgICAgICBpZiAodG9CZU1lcmdlZEhlYWRlcnNbY29tbW9uXzEuQ29uc3RhbnRzLkh0dHBIZWFkZXJzLklzUlVQZXJNaW51dGVVc2VkXSkge1xuICAgICAgICAgICAgaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuSXNSVVBlck1pbnV0ZVVzZWRdID0gdG9CZU1lcmdlZEhlYWRlcnNbY29tbW9uXzEuQ29uc3RhbnRzLkh0dHBIZWFkZXJzLklzUlVQZXJNaW51dGVVc2VkXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY29tbW9uXzEuQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlF1ZXJ5TWV0cmljcyBpbiB0b0JlTWVyZ2VkSGVhZGVycykge1xuICAgICAgICAgICAgY29uc3QgaGVhZGVyUXVlcnlNZXRyaWNzID0gaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuUXVlcnlNZXRyaWNzXTtcbiAgICAgICAgICAgIGNvbnN0IHRvQmVNZXJnZWRIZWFkZXJRdWVyeU1ldHJpY3MgPSB0b0JlTWVyZ2VkSGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuUXVlcnlNZXRyaWNzXTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgcGFydGl0aW9uSWQgaW4gdG9CZU1lcmdlZEhlYWRlclF1ZXJ5TWV0cmljcykge1xuICAgICAgICAgICAgICAgIGlmIChwYXJ0aXRpb25JZCBpbiBoZWFkZXJRdWVyeU1ldHJpY3MpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY29tYmluZWRRdWVyeU1ldHJpY3MgPSBoZWFkZXJRdWVyeU1ldHJpY3NbcGFydGl0aW9uSWRdLmFkZCh0b0JlTWVyZ2VkSGVhZGVyUXVlcnlNZXRyaWNzW3BhcnRpdGlvbklkXSk7XG4gICAgICAgICAgICAgICAgICAgIGhlYWRlclF1ZXJ5TWV0cmljc1twYXJ0aXRpb25JZF0gPSBjb21iaW5lZFF1ZXJ5TWV0cmljcztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGhlYWRlclF1ZXJ5TWV0cmljc1twYXJ0aXRpb25JZF0gPSB0b0JlTWVyZ2VkSGVhZGVyUXVlcnlNZXRyaWNzW3BhcnRpdGlvbklkXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkhlYWRlclV0aWxzID0gSGVhZGVyVXRpbHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWFkZXJVdGlscy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/headerUtils.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/index.js":
/*!********************************************!*\
  !*** ./lib/queryExecutionContext/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./headerUtils */ \"./lib/queryExecutionContext/headerUtils.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./defaultQueryExecutionContext */ \"./lib/queryExecutionContext/defaultQueryExecutionContext.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./Aggregators */ \"./lib/queryExecutionContext/Aggregators/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./EndpointComponent */ \"./lib/queryExecutionContext/EndpointComponent/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./documentProducer */ \"./lib/queryExecutionContext/documentProducer.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./FetchResult */ \"./lib/queryExecutionContext/FetchResult.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./orderByDocumentProducerComparator */ \"./lib/queryExecutionContext/orderByDocumentProducerComparator.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./partitionedQueryExecutionContextInfoParser */ \"./lib/queryExecutionContext/partitionedQueryExecutionContextInfoParser.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./parallelQueryExecutionContextBase */ \"./lib/queryExecutionContext/parallelQueryExecutionContextBase.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./parallelQueryExecutionContext */ \"./lib/queryExecutionContext/parallelQueryExecutionContext.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./orderByQueryExecutionContext */ \"./lib/queryExecutionContext/orderByQueryExecutionContext.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./pipelinedQueryExecutionContext */ \"./lib/queryExecutionContext/pipelinedQueryExecutionContext.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./proxyQueryExecutionContext */ \"./lib/queryExecutionContext/proxyQueryExecutionContext.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9pbmRleC5qcz9hYTdkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2hlYWRlclV0aWxzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2RlZmF1bHRRdWVyeUV4ZWN1dGlvbkNvbnRleHRcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQWdncmVnYXRvcnNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vRW5kcG9pbnRDb21wb25lbnRcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZG9jdW1lbnRQcm9kdWNlclwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9GZXRjaFJlc3VsdFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9vcmRlckJ5RG9jdW1lbnRQcm9kdWNlckNvbXBhcmF0b3JcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkNvbnRleHRJbmZvUGFyc2VyXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3BhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0QmFzZVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9vcmRlckJ5UXVlcnlFeGVjdXRpb25Db250ZXh0XCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3BpcGVsaW5lZFF1ZXJ5RXhlY3V0aW9uQ29udGV4dFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm94eVF1ZXJ5RXhlY3V0aW9uQ29udGV4dFwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/index.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/orderByDocumentProducerComparator.js":
/*!************************************************************************!*\
  !*** ./lib/queryExecutionContext/orderByDocumentProducerComparator.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst assert_1 = tslib_1.__importDefault(__webpack_require__(/*! assert */ \"./node_modules/assert/assert.js\"));\nconst util = tslib_1.__importStar(__webpack_require__(/*! util */ \"./node_modules/util/util.js\"));\n// TODO: this smells funny\n/** @hidden */\nconst TYPEORDCOMPARATOR = Object.freeze({\n    NoValue: {\n        ord: 0\n    },\n    undefined: {\n        ord: 1\n    },\n    boolean: {\n        ord: 2,\n        compFunc: (a, b) => {\n            return a === b ? 0 : a > b ? 1 : -1;\n        }\n    },\n    number: {\n        ord: 4,\n        compFunc: (a, b) => {\n            return a === b ? 0 : a > b ? 1 : -1;\n        }\n    },\n    string: {\n        ord: 5,\n        compFunc: (a, b) => {\n            return a === b ? 0 : a > b ? 1 : -1;\n        }\n    }\n});\n/** @hidden */\nclass OrderByDocumentProducerComparator {\n    constructor(sortOrder) {\n        this.sortOrder = sortOrder;\n    } // TODO: This should be an enum\n    targetPartitionKeyRangeDocProdComparator(docProd1, docProd2) {\n        const a = docProd1.getTargetParitionKeyRange()[\"minInclusive\"];\n        const b = docProd2.getTargetParitionKeyRange()[\"minInclusive\"];\n        return a === b ? 0 : a > b ? 1 : -1;\n    }\n    compare(docProd1, docProd2) {\n        // Need to check for split, since we don't want to dereference \"item\" of undefined / exception\n        if (docProd1.gotSplit()) {\n            return -1;\n        }\n        if (docProd2.gotSplit()) {\n            return 1;\n        }\n        const orderByItemsRes1 = this.getOrderByItems(docProd1.peekBufferedItems()[0]);\n        const orderByItemsRes2 = this.getOrderByItems(docProd2.peekBufferedItems()[0]);\n        // validate order by items and types\n        // TODO: once V1 order by on different types is fixed this need to change\n        this.validateOrderByItems(orderByItemsRes1, orderByItemsRes2);\n        // no async call in the for loop\n        for (let i = 0; i < orderByItemsRes1.length; i++) {\n            // compares the orderby items one by one\n            const compRes = this.compareOrderByItem(orderByItemsRes1[i], orderByItemsRes2[i]);\n            if (compRes !== 0) {\n                if (this.sortOrder[i] === \"Ascending\") {\n                    return compRes;\n                }\n                else if (this.sortOrder[i] === \"Descending\") {\n                    return -compRes;\n                }\n            }\n        }\n        return this.targetPartitionKeyRangeDocProdComparator(docProd1, docProd2);\n    }\n    // TODO: This smells funny\n    compareValue(item1, type1, item2, type2) {\n        const type1Ord = TYPEORDCOMPARATOR[type1].ord;\n        const type2Ord = TYPEORDCOMPARATOR[type2].ord;\n        const typeCmp = type1Ord - type2Ord;\n        if (typeCmp !== 0) {\n            // if the types are different, use type ordinal\n            return typeCmp;\n        }\n        // both are of the same type\n        if (type1Ord === TYPEORDCOMPARATOR[\"undefined\"].ord || type1Ord === TYPEORDCOMPARATOR[\"NoValue\"].ord) {\n            // if both types are undefined or Null they are equal\n            return 0;\n        }\n        const compFunc = TYPEORDCOMPARATOR[type1].compFunc;\n        assert_1.default.notEqual(compFunc, undefined, \"cannot find the comparison function\");\n        // same type and type is defined compare the items\n        return compFunc(item1, item2);\n    }\n    compareOrderByItem(orderByItem1, orderByItem2) {\n        const type1 = this.getType(orderByItem1);\n        const type2 = this.getType(orderByItem2);\n        return this.compareValue(orderByItem1[\"item\"], type1, orderByItem2[\"item\"], type2);\n    }\n    validateOrderByItems(res1, res2) {\n        this._throwIf(res1.length !== res2.length, util.format(\"Expected %s, but got %s.\", res1.length, res2.length));\n        this._throwIf(res1.length !== this.sortOrder.length, \"orderByItems cannot have a different size than sort orders.\");\n        for (let i = 0; i < this.sortOrder.length; i++) {\n            const type1 = this.getType(res1[i]);\n            const type2 = this.getType(res2[i]);\n            this._throwIf(type1 !== type2, util.format(\"Expected %s, but got %s.\", type1, type2));\n        }\n    }\n    getType(orderByItem) {\n        // TODO: any item?\n        if (orderByItem === undefined || orderByItem.item === undefined) {\n            return \"NoValue\";\n        }\n        const type = typeof orderByItem.item;\n        this._throwIf(TYPEORDCOMPARATOR[type] === undefined, util.format(\"unrecognizable type %s\", type));\n        return type;\n    }\n    getOrderByItems(res) {\n        // TODO: any res?\n        return res[\"orderByItems\"];\n    }\n    // TODO: this should be done differently...\n    _throwIf(condition, msg) {\n        if (condition) {\n            throw Error(msg);\n        }\n    }\n}\nexports.OrderByDocumentProducerComparator = OrderByDocumentProducerComparator;\n//# sourceMappingURL=orderByDocumentProducerComparator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L29yZGVyQnlEb2N1bWVudFByb2R1Y2VyQ29tcGFyYXRvci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvb3JkZXJCeURvY3VtZW50UHJvZHVjZXJDb21wYXJhdG9yLmpzPzE4MTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgYXNzZXJ0XzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYXNzZXJ0XCIpKTtcbmNvbnN0IHV0aWwgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwidXRpbFwiKSk7XG4vLyBUT0RPOiB0aGlzIHNtZWxscyBmdW5ueVxuLyoqIEBoaWRkZW4gKi9cbmNvbnN0IFRZUEVPUkRDT01QQVJBVE9SID0gT2JqZWN0LmZyZWV6ZSh7XG4gICAgTm9WYWx1ZToge1xuICAgICAgICBvcmQ6IDBcbiAgICB9LFxuICAgIHVuZGVmaW5lZDoge1xuICAgICAgICBvcmQ6IDFcbiAgICB9LFxuICAgIGJvb2xlYW46IHtcbiAgICAgICAgb3JkOiAyLFxuICAgICAgICBjb21wRnVuYzogKGEsIGIpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBhID09PSBiID8gMCA6IGEgPiBiID8gMSA6IC0xO1xuICAgICAgICB9XG4gICAgfSxcbiAgICBudW1iZXI6IHtcbiAgICAgICAgb3JkOiA0LFxuICAgICAgICBjb21wRnVuYzogKGEsIGIpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBhID09PSBiID8gMCA6IGEgPiBiID8gMSA6IC0xO1xuICAgICAgICB9XG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgICAgb3JkOiA1LFxuICAgICAgICBjb21wRnVuYzogKGEsIGIpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBhID09PSBiID8gMCA6IGEgPiBiID8gMSA6IC0xO1xuICAgICAgICB9XG4gICAgfVxufSk7XG4vKiogQGhpZGRlbiAqL1xuY2xhc3MgT3JkZXJCeURvY3VtZW50UHJvZHVjZXJDb21wYXJhdG9yIHtcbiAgICBjb25zdHJ1Y3Rvcihzb3J0T3JkZXIpIHtcbiAgICAgICAgdGhpcy5zb3J0T3JkZXIgPSBzb3J0T3JkZXI7XG4gICAgfSAvLyBUT0RPOiBUaGlzIHNob3VsZCBiZSBhbiBlbnVtXG4gICAgdGFyZ2V0UGFydGl0aW9uS2V5UmFuZ2VEb2NQcm9kQ29tcGFyYXRvcihkb2NQcm9kMSwgZG9jUHJvZDIpIHtcbiAgICAgICAgY29uc3QgYSA9IGRvY1Byb2QxLmdldFRhcmdldFBhcml0aW9uS2V5UmFuZ2UoKVtcIm1pbkluY2x1c2l2ZVwiXTtcbiAgICAgICAgY29uc3QgYiA9IGRvY1Byb2QyLmdldFRhcmdldFBhcml0aW9uS2V5UmFuZ2UoKVtcIm1pbkluY2x1c2l2ZVwiXTtcbiAgICAgICAgcmV0dXJuIGEgPT09IGIgPyAwIDogYSA+IGIgPyAxIDogLTE7XG4gICAgfVxuICAgIGNvbXBhcmUoZG9jUHJvZDEsIGRvY1Byb2QyKSB7XG4gICAgICAgIC8vIE5lZWQgdG8gY2hlY2sgZm9yIHNwbGl0LCBzaW5jZSB3ZSBkb24ndCB3YW50IHRvIGRlcmVmZXJlbmNlIFwiaXRlbVwiIG9mIHVuZGVmaW5lZCAvIGV4Y2VwdGlvblxuICAgICAgICBpZiAoZG9jUHJvZDEuZ290U3BsaXQoKSkge1xuICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkb2NQcm9kMi5nb3RTcGxpdCgpKSB7XG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvcmRlckJ5SXRlbXNSZXMxID0gdGhpcy5nZXRPcmRlckJ5SXRlbXMoZG9jUHJvZDEucGVla0J1ZmZlcmVkSXRlbXMoKVswXSk7XG4gICAgICAgIGNvbnN0IG9yZGVyQnlJdGVtc1JlczIgPSB0aGlzLmdldE9yZGVyQnlJdGVtcyhkb2NQcm9kMi5wZWVrQnVmZmVyZWRJdGVtcygpWzBdKTtcbiAgICAgICAgLy8gdmFsaWRhdGUgb3JkZXIgYnkgaXRlbXMgYW5kIHR5cGVzXG4gICAgICAgIC8vIFRPRE86IG9uY2UgVjEgb3JkZXIgYnkgb24gZGlmZmVyZW50IHR5cGVzIGlzIGZpeGVkIHRoaXMgbmVlZCB0byBjaGFuZ2VcbiAgICAgICAgdGhpcy52YWxpZGF0ZU9yZGVyQnlJdGVtcyhvcmRlckJ5SXRlbXNSZXMxLCBvcmRlckJ5SXRlbXNSZXMyKTtcbiAgICAgICAgLy8gbm8gYXN5bmMgY2FsbCBpbiB0aGUgZm9yIGxvb3BcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBvcmRlckJ5SXRlbXNSZXMxLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAvLyBjb21wYXJlcyB0aGUgb3JkZXJieSBpdGVtcyBvbmUgYnkgb25lXG4gICAgICAgICAgICBjb25zdCBjb21wUmVzID0gdGhpcy5jb21wYXJlT3JkZXJCeUl0ZW0ob3JkZXJCeUl0ZW1zUmVzMVtpXSwgb3JkZXJCeUl0ZW1zUmVzMltpXSk7XG4gICAgICAgICAgICBpZiAoY29tcFJlcyAhPT0gMCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnNvcnRPcmRlcltpXSA9PT0gXCJBc2NlbmRpbmdcIikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29tcFJlcztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5zb3J0T3JkZXJbaV0gPT09IFwiRGVzY2VuZGluZ1wiKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAtY29tcFJlcztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMudGFyZ2V0UGFydGl0aW9uS2V5UmFuZ2VEb2NQcm9kQ29tcGFyYXRvcihkb2NQcm9kMSwgZG9jUHJvZDIpO1xuICAgIH1cbiAgICAvLyBUT0RPOiBUaGlzIHNtZWxscyBmdW5ueVxuICAgIGNvbXBhcmVWYWx1ZShpdGVtMSwgdHlwZTEsIGl0ZW0yLCB0eXBlMikge1xuICAgICAgICBjb25zdCB0eXBlMU9yZCA9IFRZUEVPUkRDT01QQVJBVE9SW3R5cGUxXS5vcmQ7XG4gICAgICAgIGNvbnN0IHR5cGUyT3JkID0gVFlQRU9SRENPTVBBUkFUT1JbdHlwZTJdLm9yZDtcbiAgICAgICAgY29uc3QgdHlwZUNtcCA9IHR5cGUxT3JkIC0gdHlwZTJPcmQ7XG4gICAgICAgIGlmICh0eXBlQ21wICE9PSAwKSB7XG4gICAgICAgICAgICAvLyBpZiB0aGUgdHlwZXMgYXJlIGRpZmZlcmVudCwgdXNlIHR5cGUgb3JkaW5hbFxuICAgICAgICAgICAgcmV0dXJuIHR5cGVDbXA7XG4gICAgICAgIH1cbiAgICAgICAgLy8gYm90aCBhcmUgb2YgdGhlIHNhbWUgdHlwZVxuICAgICAgICBpZiAodHlwZTFPcmQgPT09IFRZUEVPUkRDT01QQVJBVE9SW1widW5kZWZpbmVkXCJdLm9yZCB8fCB0eXBlMU9yZCA9PT0gVFlQRU9SRENPTVBBUkFUT1JbXCJOb1ZhbHVlXCJdLm9yZCkge1xuICAgICAgICAgICAgLy8gaWYgYm90aCB0eXBlcyBhcmUgdW5kZWZpbmVkIG9yIE51bGwgdGhleSBhcmUgZXF1YWxcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNvbXBGdW5jID0gVFlQRU9SRENPTVBBUkFUT1JbdHlwZTFdLmNvbXBGdW5jO1xuICAgICAgICBhc3NlcnRfMS5kZWZhdWx0Lm5vdEVxdWFsKGNvbXBGdW5jLCB1bmRlZmluZWQsIFwiY2Fubm90IGZpbmQgdGhlIGNvbXBhcmlzb24gZnVuY3Rpb25cIik7XG4gICAgICAgIC8vIHNhbWUgdHlwZSBhbmQgdHlwZSBpcyBkZWZpbmVkIGNvbXBhcmUgdGhlIGl0ZW1zXG4gICAgICAgIHJldHVybiBjb21wRnVuYyhpdGVtMSwgaXRlbTIpO1xuICAgIH1cbiAgICBjb21wYXJlT3JkZXJCeUl0ZW0ob3JkZXJCeUl0ZW0xLCBvcmRlckJ5SXRlbTIpIHtcbiAgICAgICAgY29uc3QgdHlwZTEgPSB0aGlzLmdldFR5cGUob3JkZXJCeUl0ZW0xKTtcbiAgICAgICAgY29uc3QgdHlwZTIgPSB0aGlzLmdldFR5cGUob3JkZXJCeUl0ZW0yKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGFyZVZhbHVlKG9yZGVyQnlJdGVtMVtcIml0ZW1cIl0sIHR5cGUxLCBvcmRlckJ5SXRlbTJbXCJpdGVtXCJdLCB0eXBlMik7XG4gICAgfVxuICAgIHZhbGlkYXRlT3JkZXJCeUl0ZW1zKHJlczEsIHJlczIpIHtcbiAgICAgICAgdGhpcy5fdGhyb3dJZihyZXMxLmxlbmd0aCAhPT0gcmVzMi5sZW5ndGgsIHV0aWwuZm9ybWF0KFwiRXhwZWN0ZWQgJXMsIGJ1dCBnb3QgJXMuXCIsIHJlczEubGVuZ3RoLCByZXMyLmxlbmd0aCkpO1xuICAgICAgICB0aGlzLl90aHJvd0lmKHJlczEubGVuZ3RoICE9PSB0aGlzLnNvcnRPcmRlci5sZW5ndGgsIFwib3JkZXJCeUl0ZW1zIGNhbm5vdCBoYXZlIGEgZGlmZmVyZW50IHNpemUgdGhhbiBzb3J0IG9yZGVycy5cIik7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zb3J0T3JkZXIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHR5cGUxID0gdGhpcy5nZXRUeXBlKHJlczFbaV0pO1xuICAgICAgICAgICAgY29uc3QgdHlwZTIgPSB0aGlzLmdldFR5cGUocmVzMltpXSk7XG4gICAgICAgICAgICB0aGlzLl90aHJvd0lmKHR5cGUxICE9PSB0eXBlMiwgdXRpbC5mb3JtYXQoXCJFeHBlY3RlZCAlcywgYnV0IGdvdCAlcy5cIiwgdHlwZTEsIHR5cGUyKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0VHlwZShvcmRlckJ5SXRlbSkge1xuICAgICAgICAvLyBUT0RPOiBhbnkgaXRlbT9cbiAgICAgICAgaWYgKG9yZGVyQnlJdGVtID09PSB1bmRlZmluZWQgfHwgb3JkZXJCeUl0ZW0uaXRlbSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gXCJOb1ZhbHVlXCI7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdHlwZSA9IHR5cGVvZiBvcmRlckJ5SXRlbS5pdGVtO1xuICAgICAgICB0aGlzLl90aHJvd0lmKFRZUEVPUkRDT01QQVJBVE9SW3R5cGVdID09PSB1bmRlZmluZWQsIHV0aWwuZm9ybWF0KFwidW5yZWNvZ25pemFibGUgdHlwZSAlc1wiLCB0eXBlKSk7XG4gICAgICAgIHJldHVybiB0eXBlO1xuICAgIH1cbiAgICBnZXRPcmRlckJ5SXRlbXMocmVzKSB7XG4gICAgICAgIC8vIFRPRE86IGFueSByZXM/XG4gICAgICAgIHJldHVybiByZXNbXCJvcmRlckJ5SXRlbXNcIl07XG4gICAgfVxuICAgIC8vIFRPRE86IHRoaXMgc2hvdWxkIGJlIGRvbmUgZGlmZmVyZW50bHkuLi5cbiAgICBfdGhyb3dJZihjb25kaXRpb24sIG1zZykge1xuICAgICAgICBpZiAoY29uZGl0aW9uKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihtc2cpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5PcmRlckJ5RG9jdW1lbnRQcm9kdWNlckNvbXBhcmF0b3IgPSBPcmRlckJ5RG9jdW1lbnRQcm9kdWNlckNvbXBhcmF0b3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vcmRlckJ5RG9jdW1lbnRQcm9kdWNlckNvbXBhcmF0b3IuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/orderByDocumentProducerComparator.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/orderByQueryExecutionContext.js":
/*!*******************************************************************!*\
  !*** ./lib/queryExecutionContext/orderByQueryExecutionContext.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _1 = __webpack_require__(/*! . */ \"./lib/queryExecutionContext/index.js\");\n/** @hidden */\nclass OrderByQueryExecutionContext extends _1.ParallelQueryExecutionContextBase {\n    /**\n     * Provides the OrderByQueryExecutionContext.\n     * This class is capable of handling orderby queries and dervives from ParallelQueryExecutionContextBase.\n     *\n     * When handling a parallelized query, it instantiates one instance of\n     * DocumentProcuder per target partition key range and aggregates the result of each.\n     *\n     * @constructor ParallelQueryExecutionContext\n     * @param {ClientContext} clientContext        - The service endpoint to use to create the client.\n     * @param {string} collectionLink                - The Collection Link\n     * @param {FeedOptions} [options]                - Represents the feed options.\n     * @param {object} partitionedQueryExecutionInfo - PartitionedQueryExecutionInfo\n     * @ignore\n     */\n    constructor(clientContext, collectionLink, query, // TODO: any query\n    options, // TODO: any options\n    partitionedQueryExecutionInfo) {\n        // Calling on base class constructor\n        super(clientContext, collectionLink, query, options, partitionedQueryExecutionInfo);\n        this.orderByComparator = new _1.OrderByDocumentProducerComparator(this.sortOrders);\n    }\n    // Instance members are inherited\n    // Overriding documentProducerComparator for OrderByQueryExecutionContexts\n    /**\n     * Provides a Comparator for document producers which respects orderby sort order.\n     * @returns {object}        - Comparator Function\n     * @ignore\n     */\n    documentProducerComparator(docProd1, docProd2) {\n        return this.orderByComparator.compare(docProd1, docProd2);\n    }\n}\nexports.OrderByQueryExecutionContext = OrderByQueryExecutionContext;\n//# sourceMappingURL=orderByQueryExecutionContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L29yZGVyQnlRdWVyeUV4ZWN1dGlvbkNvbnRleHQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L29yZGVyQnlRdWVyeUV4ZWN1dGlvbkNvbnRleHQuanM/ZjU3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IF8xID0gcmVxdWlyZShcIi5cIik7XG4vKiogQGhpZGRlbiAqL1xuY2xhc3MgT3JkZXJCeVF1ZXJ5RXhlY3V0aW9uQ29udGV4dCBleHRlbmRzIF8xLlBhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0QmFzZSB7XG4gICAgLyoqXG4gICAgICogUHJvdmlkZXMgdGhlIE9yZGVyQnlRdWVyeUV4ZWN1dGlvbkNvbnRleHQuXG4gICAgICogVGhpcyBjbGFzcyBpcyBjYXBhYmxlIG9mIGhhbmRsaW5nIG9yZGVyYnkgcXVlcmllcyBhbmQgZGVydml2ZXMgZnJvbSBQYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dEJhc2UuXG4gICAgICpcbiAgICAgKiBXaGVuIGhhbmRsaW5nIGEgcGFyYWxsZWxpemVkIHF1ZXJ5LCBpdCBpbnN0YW50aWF0ZXMgb25lIGluc3RhbmNlIG9mXG4gICAgICogRG9jdW1lbnRQcm9jdWRlciBwZXIgdGFyZ2V0IHBhcnRpdGlvbiBrZXkgcmFuZ2UgYW5kIGFnZ3JlZ2F0ZXMgdGhlIHJlc3VsdCBvZiBlYWNoLlxuICAgICAqXG4gICAgICogQGNvbnN0cnVjdG9yIFBhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0XG4gICAgICogQHBhcmFtIHtDbGllbnRDb250ZXh0fSBjbGllbnRDb250ZXh0ICAgICAgICAtIFRoZSBzZXJ2aWNlIGVuZHBvaW50IHRvIHVzZSB0byBjcmVhdGUgdGhlIGNsaWVudC5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29sbGVjdGlvbkxpbmsgICAgICAgICAgICAgICAgLSBUaGUgQ29sbGVjdGlvbiBMaW5rXG4gICAgICogQHBhcmFtIHtGZWVkT3B0aW9uc30gW29wdGlvbnNdICAgICAgICAgICAgICAgIC0gUmVwcmVzZW50cyB0aGUgZmVlZCBvcHRpb25zLlxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBwYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mbyAtIFBhcnRpdGlvbmVkUXVlcnlFeGVjdXRpb25JbmZvXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudENvbnRleHQsIGNvbGxlY3Rpb25MaW5rLCBxdWVyeSwgLy8gVE9ETzogYW55IHF1ZXJ5XG4gICAgb3B0aW9ucywgLy8gVE9ETzogYW55IG9wdGlvbnNcbiAgICBwYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mbykge1xuICAgICAgICAvLyBDYWxsaW5nIG9uIGJhc2UgY2xhc3MgY29uc3RydWN0b3JcbiAgICAgICAgc3VwZXIoY2xpZW50Q29udGV4dCwgY29sbGVjdGlvbkxpbmssIHF1ZXJ5LCBvcHRpb25zLCBwYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mbyk7XG4gICAgICAgIHRoaXMub3JkZXJCeUNvbXBhcmF0b3IgPSBuZXcgXzEuT3JkZXJCeURvY3VtZW50UHJvZHVjZXJDb21wYXJhdG9yKHRoaXMuc29ydE9yZGVycyk7XG4gICAgfVxuICAgIC8vIEluc3RhbmNlIG1lbWJlcnMgYXJlIGluaGVyaXRlZFxuICAgIC8vIE92ZXJyaWRpbmcgZG9jdW1lbnRQcm9kdWNlckNvbXBhcmF0b3IgZm9yIE9yZGVyQnlRdWVyeUV4ZWN1dGlvbkNvbnRleHRzXG4gICAgLyoqXG4gICAgICogUHJvdmlkZXMgYSBDb21wYXJhdG9yIGZvciBkb2N1bWVudCBwcm9kdWNlcnMgd2hpY2ggcmVzcGVjdHMgb3JkZXJieSBzb3J0IG9yZGVyLlxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9ICAgICAgICAtIENvbXBhcmF0b3IgRnVuY3Rpb25cbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgZG9jdW1lbnRQcm9kdWNlckNvbXBhcmF0b3IoZG9jUHJvZDEsIGRvY1Byb2QyKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm9yZGVyQnlDb21wYXJhdG9yLmNvbXBhcmUoZG9jUHJvZDEsIGRvY1Byb2QyKTtcbiAgICB9XG59XG5leHBvcnRzLk9yZGVyQnlRdWVyeUV4ZWN1dGlvbkNvbnRleHQgPSBPcmRlckJ5UXVlcnlFeGVjdXRpb25Db250ZXh0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3JkZXJCeVF1ZXJ5RXhlY3V0aW9uQ29udGV4dC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/orderByQueryExecutionContext.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/parallelQueryExecutionContext.js":
/*!********************************************************************!*\
  !*** ./lib/queryExecutionContext/parallelQueryExecutionContext.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _1 = __webpack_require__(/*! . */ \"./lib/queryExecutionContext/index.js\");\nconst routing_1 = __webpack_require__(/*! ../routing */ \"./lib/routing/index.js\");\n/** @hidden */\nclass ParallelQueryExecutionContext extends _1.ParallelQueryExecutionContextBase {\n    /**\n     * Provides the ParallelQueryExecutionContext.\n     * This class is capable of handling parallelized queries and dervives from ParallelQueryExecutionContextBase.\n     *\n     * @constructor ParallelQueryExecutionContext\n     * @param {ClientContext} clientContext        - The service endpoint to use to create the client.\n     * @param {string} collectionLink                - The Collection Link\n     * @param {FeedOptions} [options]                - Represents the feed options.\n     * @param {object} partitionedQueryExecutionInfo - PartitionedQueryExecutionInfo\n     * @ignore\n     */\n    constructor(clientContext, collectionLink, query, options, partitionedQueryExecutionInfo) {\n        // Calling on base class constructor\n        super(clientContext, collectionLink, query, options, partitionedQueryExecutionInfo);\n    }\n    // Instance members are inherited\n    // Overriding documentProducerComparator for ParallelQueryExecutionContexts\n    /**\n     * Provides a Comparator for document producers using the min value of the corresponding target partition.\n     * @returns {object}        - Comparator Function\n     * @ignore\n     */\n    documentProducerComparator(docProd1, docProd2) {\n        const a = docProd1.getTargetParitionKeyRange()[\"minInclusive\"];\n        const b = docProd2.getTargetParitionKeyRange()[\"minInclusive\"];\n        return a === b ? 0 : a > b ? 1 : -1;\n    }\n    _buildContinuationTokenFrom(documentProducer) {\n        // given the document producer constructs the continuation token\n        if (documentProducer.allFetched && documentProducer.peekBufferedItems().length === 0) {\n            return undefined;\n        }\n        const min = documentProducer.targetPartitionKeyRange[routing_1.PARITIONKEYRANGE.MinInclusive];\n        const max = documentProducer.targetPartitionKeyRange[routing_1.PARITIONKEYRANGE.MaxExclusive];\n        const range = {\n            min,\n            max,\n            id: documentProducer.targetPartitionKeyRange.id\n        };\n        // TODO: static method\n        const withNullDefault = (token) => {\n            if (token) {\n                return token;\n            }\n            else if (token === null || token === undefined) {\n                return null;\n            }\n        };\n        const documentProducerContinuationToken = documentProducer.peekBufferedItems().length > 0\n            ? documentProducer.previousContinuationToken\n            : documentProducer.continuationToken;\n        return {\n            token: withNullDefault(documentProducerContinuationToken),\n            range\n        };\n    }\n}\nexports.ParallelQueryExecutionContext = ParallelQueryExecutionContext;\n//# sourceMappingURL=parallelQueryExecutionContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L3BhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9wYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dC5qcz9kNGFlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgXzEgPSByZXF1aXJlKFwiLlwiKTtcbmNvbnN0IHJvdXRpbmdfMSA9IHJlcXVpcmUoXCIuLi9yb3V0aW5nXCIpO1xuLyoqIEBoaWRkZW4gKi9cbmNsYXNzIFBhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0IGV4dGVuZHMgXzEuUGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlIHtcbiAgICAvKipcbiAgICAgKiBQcm92aWRlcyB0aGUgUGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHQuXG4gICAgICogVGhpcyBjbGFzcyBpcyBjYXBhYmxlIG9mIGhhbmRsaW5nIHBhcmFsbGVsaXplZCBxdWVyaWVzIGFuZCBkZXJ2aXZlcyBmcm9tIFBhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0QmFzZS5cbiAgICAgKlxuICAgICAqIEBjb25zdHJ1Y3RvciBQYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dFxuICAgICAqIEBwYXJhbSB7Q2xpZW50Q29udGV4dH0gY2xpZW50Q29udGV4dCAgICAgICAgLSBUaGUgc2VydmljZSBlbmRwb2ludCB0byB1c2UgdG8gY3JlYXRlIHRoZSBjbGllbnQuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25MaW5rICAgICAgICAgICAgICAgIC0gVGhlIENvbGxlY3Rpb24gTGlua1xuICAgICAqIEBwYXJhbSB7RmVlZE9wdGlvbnN9IFtvcHRpb25zXSAgICAgICAgICAgICAgICAtIFJlcHJlc2VudHMgdGhlIGZlZWQgb3B0aW9ucy5cbiAgICAgKiBAcGFyYW0ge29iamVjdH0gcGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkluZm8gLSBQYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mb1xuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjbGllbnRDb250ZXh0LCBjb2xsZWN0aW9uTGluaywgcXVlcnksIG9wdGlvbnMsIHBhcnRpdGlvbmVkUXVlcnlFeGVjdXRpb25JbmZvKSB7XG4gICAgICAgIC8vIENhbGxpbmcgb24gYmFzZSBjbGFzcyBjb25zdHJ1Y3RvclxuICAgICAgICBzdXBlcihjbGllbnRDb250ZXh0LCBjb2xsZWN0aW9uTGluaywgcXVlcnksIG9wdGlvbnMsIHBhcnRpdGlvbmVkUXVlcnlFeGVjdXRpb25JbmZvKTtcbiAgICB9XG4gICAgLy8gSW5zdGFuY2UgbWVtYmVycyBhcmUgaW5oZXJpdGVkXG4gICAgLy8gT3ZlcnJpZGluZyBkb2N1bWVudFByb2R1Y2VyQ29tcGFyYXRvciBmb3IgUGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRzXG4gICAgLyoqXG4gICAgICogUHJvdmlkZXMgYSBDb21wYXJhdG9yIGZvciBkb2N1bWVudCBwcm9kdWNlcnMgdXNpbmcgdGhlIG1pbiB2YWx1ZSBvZiB0aGUgY29ycmVzcG9uZGluZyB0YXJnZXQgcGFydGl0aW9uLlxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9ICAgICAgICAtIENvbXBhcmF0b3IgRnVuY3Rpb25cbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgZG9jdW1lbnRQcm9kdWNlckNvbXBhcmF0b3IoZG9jUHJvZDEsIGRvY1Byb2QyKSB7XG4gICAgICAgIGNvbnN0IGEgPSBkb2NQcm9kMS5nZXRUYXJnZXRQYXJpdGlvbktleVJhbmdlKClbXCJtaW5JbmNsdXNpdmVcIl07XG4gICAgICAgIGNvbnN0IGIgPSBkb2NQcm9kMi5nZXRUYXJnZXRQYXJpdGlvbktleVJhbmdlKClbXCJtaW5JbmNsdXNpdmVcIl07XG4gICAgICAgIHJldHVybiBhID09PSBiID8gMCA6IGEgPiBiID8gMSA6IC0xO1xuICAgIH1cbiAgICBfYnVpbGRDb250aW51YXRpb25Ub2tlbkZyb20oZG9jdW1lbnRQcm9kdWNlcikge1xuICAgICAgICAvLyBnaXZlbiB0aGUgZG9jdW1lbnQgcHJvZHVjZXIgY29uc3RydWN0cyB0aGUgY29udGludWF0aW9uIHRva2VuXG4gICAgICAgIGlmIChkb2N1bWVudFByb2R1Y2VyLmFsbEZldGNoZWQgJiYgZG9jdW1lbnRQcm9kdWNlci5wZWVrQnVmZmVyZWRJdGVtcygpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBtaW4gPSBkb2N1bWVudFByb2R1Y2VyLnRhcmdldFBhcnRpdGlvbktleVJhbmdlW3JvdXRpbmdfMS5QQVJJVElPTktFWVJBTkdFLk1pbkluY2x1c2l2ZV07XG4gICAgICAgIGNvbnN0IG1heCA9IGRvY3VtZW50UHJvZHVjZXIudGFyZ2V0UGFydGl0aW9uS2V5UmFuZ2Vbcm91dGluZ18xLlBBUklUSU9OS0VZUkFOR0UuTWF4RXhjbHVzaXZlXTtcbiAgICAgICAgY29uc3QgcmFuZ2UgPSB7XG4gICAgICAgICAgICBtaW4sXG4gICAgICAgICAgICBtYXgsXG4gICAgICAgICAgICBpZDogZG9jdW1lbnRQcm9kdWNlci50YXJnZXRQYXJ0aXRpb25LZXlSYW5nZS5pZFxuICAgICAgICB9O1xuICAgICAgICAvLyBUT0RPOiBzdGF0aWMgbWV0aG9kXG4gICAgICAgIGNvbnN0IHdpdGhOdWxsRGVmYXVsdCA9ICh0b2tlbikgPT4ge1xuICAgICAgICAgICAgaWYgKHRva2VuKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRva2VuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodG9rZW4gPT09IG51bGwgfHwgdG9rZW4gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBkb2N1bWVudFByb2R1Y2VyQ29udGludWF0aW9uVG9rZW4gPSBkb2N1bWVudFByb2R1Y2VyLnBlZWtCdWZmZXJlZEl0ZW1zKCkubGVuZ3RoID4gMFxuICAgICAgICAgICAgPyBkb2N1bWVudFByb2R1Y2VyLnByZXZpb3VzQ29udGludWF0aW9uVG9rZW5cbiAgICAgICAgICAgIDogZG9jdW1lbnRQcm9kdWNlci5jb250aW51YXRpb25Ub2tlbjtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRva2VuOiB3aXRoTnVsbERlZmF1bHQoZG9jdW1lbnRQcm9kdWNlckNvbnRpbnVhdGlvblRva2VuKSxcbiAgICAgICAgICAgIHJhbmdlXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0cy5QYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dCA9IFBhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHQuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/parallelQueryExecutionContext.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/parallelQueryExecutionContextBase.js":
/*!************************************************************************!*\
  !*** ./lib/queryExecutionContext/parallelQueryExecutionContextBase.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst assert_1 = tslib_1.__importDefault(__webpack_require__(/*! assert */ \"./node_modules/assert/assert.js\"));\nconst bs = tslib_1.__importStar(__webpack_require__(/*! binary-search-bounds */ \"./node_modules/binary-search-bounds/search-bounds.js\"));\nconst priorityqueuejs_1 = tslib_1.__importDefault(__webpack_require__(/*! priorityqueuejs */ \"./node_modules/priorityqueuejs/index.js\"));\nconst semaphore_1 = tslib_1.__importDefault(__webpack_require__(/*! semaphore */ \"./node_modules/semaphore/lib/semaphore.js\"));\nconst util = tslib_1.__importStar(__webpack_require__(/*! util */ \"./node_modules/util/util.js\"));\nconst _1 = __webpack_require__(/*! . */ \"./lib/queryExecutionContext/index.js\");\nconst common_1 = __webpack_require__(/*! ../common */ \"./lib/common/index.js\");\nconst routing_1 = __webpack_require__(/*! ../routing */ \"./lib/routing/index.js\");\n/** @hidden */\nvar ParallelQueryExecutionContextBaseStates;\n(function (ParallelQueryExecutionContextBaseStates) {\n    ParallelQueryExecutionContextBaseStates[\"started\"] = \"started\";\n    ParallelQueryExecutionContextBaseStates[\"inProgress\"] = \"inProgress\";\n    ParallelQueryExecutionContextBaseStates[\"ended\"] = \"ended\";\n})(ParallelQueryExecutionContextBaseStates = exports.ParallelQueryExecutionContextBaseStates || (exports.ParallelQueryExecutionContextBaseStates = {}));\n/** @hidden */\nclass ParallelQueryExecutionContextBase {\n    /**\n     * Provides the ParallelQueryExecutionContextBase.\n     * This is the base class that ParallelQueryExecutionContext and OrderByQueryExecutionContext will derive from.\n     *\n     * When handling a parallelized query, it instantiates one instance of\n     * DocumentProcuder per target partition key range and aggregates the result of each.\n     *\n     * @constructor ParallelQueryExecutionContext\n     * @param {ClientContext} clientContext        - The service endpoint to use to create the client.\n     * @param {string} collectionLink                - The Collection Link\n     * @param {FeedOptions} [options]                - Represents the feed options.\n     * @param {object} partitionedQueryExecutionInfo - PartitionedQueryExecutionInfo\n     * @ignore\n     */\n    constructor(clientContext, collectionLink, query, // TODO: any - It's not SQLQuerySpec\n    options, partitionedQueryExecutionInfo) {\n        this.clientContext = clientContext;\n        this.collectionLink = collectionLink;\n        this.query = query;\n        this.options = options;\n        this.partitionedQueryExecutionInfo = partitionedQueryExecutionInfo;\n        this.clientContext = clientContext;\n        this.collectionLink = collectionLink;\n        this.query = query;\n        this.options = options;\n        this.partitionedQueryExecutionInfo = partitionedQueryExecutionInfo;\n        this.err = undefined;\n        this.state = ParallelQueryExecutionContextBase.STATES.started;\n        this.routingProvider = new routing_1.SmartRoutingMapProvider(this.clientContext);\n        this.sortOrders = _1.PartitionedQueryExecutionContextInfoParser.parseOrderBy(this.partitionedQueryExecutionInfo);\n        if (options === undefined || options[\"maxItemCount\"] === undefined) {\n            this.pageSize = ParallelQueryExecutionContextBase.DEFAULT_PAGE_SIZE;\n            this.options[\"maxItemCount\"] = this.pageSize;\n        }\n        else {\n            this.pageSize = options[\"maxItemCount\"];\n        }\n        this.requestContinuation = options ? options.continuation : null;\n        // response headers of undergoing operation\n        this.respHeaders = _1.HeaderUtils.getInitialHeader();\n        // Make priority queue for documentProducers\n        // The comparator is supplied by the derived class\n        this.orderByPQ = new priorityqueuejs_1.default((a, b) => this.documentProducerComparator(b, a));\n        // Creating the documentProducers\n        this.sem = semaphore_1.default(1);\n        // Creating callback for semaphore\n        // TODO: Code smell\n        const createDocumentProducersAndFillUpPriorityQueueFunc = () => tslib_1.__awaiter(this, void 0, void 0, function* () {\n            // ensure the lock is released after finishing up\n            try {\n                const targetPartitionRanges = yield this._onTargetPartitionRanges();\n                this.waitingForInternalExecutionContexts = targetPartitionRanges.length;\n                // default to 1 if none is provided.\n                const maxDegreeOfParallelism = options.maxDegreeOfParallelism > 0\n                    ? Math.min(options.maxDegreeOfParallelism, targetPartitionRanges.length)\n                    : targetPartitionRanges.length;\n                const parallelismSem = semaphore_1.default(maxDegreeOfParallelism);\n                let filteredPartitionKeyRanges = [];\n                // The document producers generated from filteredPartitionKeyRanges\n                const targetPartitionQueryExecutionContextList = [];\n                if (this.requestContinuation) {\n                    // Need to create the first documentProducer with the suppliedCompositeContinuationToken\n                    try {\n                        const suppliedCompositeContinuationToken = JSON.parse(this.requestContinuation);\n                        filteredPartitionKeyRanges = this.getPartitionKeyRangesForContinuation(suppliedCompositeContinuationToken, targetPartitionRanges);\n                        if (filteredPartitionKeyRanges.length > 0) {\n                            targetPartitionQueryExecutionContextList.push(this._createTargetPartitionQueryExecutionContext(filteredPartitionKeyRanges[0], suppliedCompositeContinuationToken.token));\n                            // Slicing the first element off, since we already made a documentProducer for it\n                            filteredPartitionKeyRanges = filteredPartitionKeyRanges.slice(1);\n                        }\n                    }\n                    catch (e) {\n                        this.err = e;\n                        this.sem.leave();\n                    }\n                }\n                else {\n                    filteredPartitionKeyRanges = targetPartitionRanges;\n                }\n                // Create one documentProducer for each partitionTargetRange\n                filteredPartitionKeyRanges.forEach((partitionTargetRange) => {\n                    // TODO: any partitionTargetRange\n                    // no async callback\n                    targetPartitionQueryExecutionContextList.push(this._createTargetPartitionQueryExecutionContext(partitionTargetRange));\n                });\n                // Fill up our priority queue with documentProducers\n                targetPartitionQueryExecutionContextList.forEach(documentProducer => {\n                    // has async callback\n                    const throttledFunc = () => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                        try {\n                            const { result: document, headers } = yield documentProducer.current();\n                            this._mergeWithActiveResponseHeaders(headers);\n                            if (document === undefined) {\n                                // no results on this one\n                                return;\n                            }\n                            // if there are matching results in the target ex range add it to the priority queue\n                            try {\n                                this.orderByPQ.enq(documentProducer);\n                            }\n                            catch (e) {\n                                this.err = e;\n                            }\n                        }\n                        catch (err) {\n                            this._mergeWithActiveResponseHeaders(err.headers);\n                            this.err = err;\n                        }\n                        finally {\n                            parallelismSem.leave();\n                            this._decrementInitiationLock();\n                        }\n                    });\n                    parallelismSem.take(throttledFunc);\n                });\n            }\n            catch (err) {\n                this.err = err;\n                // release the lock\n                this.sem.leave();\n                return;\n            }\n        });\n        this.sem.take(createDocumentProducersAndFillUpPriorityQueueFunc);\n    }\n    //                                          TODO: any                                TODO: any\n    getPartitionKeyRangesForContinuation(suppliedCompositeContinuationToken, partitionKeyRanges) {\n        const startRange = {}; // TODO: any\n        startRange[routing_1.PARITIONKEYRANGE.MinInclusive] = suppliedCompositeContinuationToken.range.min;\n        startRange[routing_1.PARITIONKEYRANGE.MaxExclusive] = suppliedCompositeContinuationToken.range.max;\n        const vbCompareFunction = (x, y) => {\n            // TODO: any\n            if (x[routing_1.PARITIONKEYRANGE.MinInclusive] > y[routing_1.PARITIONKEYRANGE.MinInclusive]) {\n                return 1;\n            }\n            if (x[routing_1.PARITIONKEYRANGE.MinInclusive] < y[routing_1.PARITIONKEYRANGE.MinInclusive]) {\n                return -1;\n            }\n            return 0;\n        };\n        const minIndex = bs.le(partitionKeyRanges, startRange, vbCompareFunction);\n        // that's an error\n        if (minIndex > 0) {\n            throw new Error(\"BadRequestException: InvalidContinuationToken\");\n        }\n        // return slice of the partition key ranges\n        return partitionKeyRanges.slice(minIndex, partitionKeyRanges.length - minIndex);\n    }\n    _decrementInitiationLock() {\n        // decrements waitingForInternalExecutionContexts\n        // if waitingForInternalExecutionContexts reaches 0 releases the semaphore and changes the state\n        this.waitingForInternalExecutionContexts = this.waitingForInternalExecutionContexts - 1;\n        if (this.waitingForInternalExecutionContexts === 0) {\n            this.sem.leave();\n            if (this.orderByPQ.size() === 0) {\n                this.state = ParallelQueryExecutionContextBase.STATES.inProgress;\n            }\n        }\n    }\n    _mergeWithActiveResponseHeaders(headers) {\n        _1.HeaderUtils.mergeHeaders(this.respHeaders, headers);\n    }\n    _getAndResetActiveResponseHeaders() {\n        const ret = this.respHeaders;\n        this.respHeaders = _1.HeaderUtils.getInitialHeader();\n        return ret;\n    }\n    _onTargetPartitionRanges() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            // invokes the callback when the target partition ranges are ready\n            const parsedRanges = _1.PartitionedQueryExecutionContextInfoParser.parseQueryRanges(this.partitionedQueryExecutionInfo);\n            const queryRanges = parsedRanges.map((item) => routing_1.QueryRange.parseFromDict(item)); // TODO: any\n            return this.routingProvider.getOverlappingRanges(this.collectionLink, queryRanges);\n        });\n    }\n    /**\n     * Gets the replacement ranges for a partitionkeyrange that has been split\n     * @memberof ParallelQueryExecutionContextBase\n     * @instance\n     */\n    _getReplacementPartitionKeyRanges(documentProducer) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const routingMapProvider = this.clientContext.partitionKeyDefinitionCache;\n            const partitionKeyRange = documentProducer.targetPartitionKeyRange;\n            // Download the new routing map\n            this.routingProvider = new routing_1.SmartRoutingMapProvider(this.clientContext);\n            // Get the queryRange that relates to this partitionKeyRange\n            const queryRange = routing_1.QueryRange.parsePartitionKeyRange(partitionKeyRange);\n            return this.routingProvider.getOverlappingRanges(this.collectionLink, [queryRange]);\n        });\n    }\n    // TODO: P0 Code smell - can barely tell what this is doing\n    /**\n     * Removes the current document producer from the priqueue,\n     * replaces that document producer with child document producers,\n     * then reexecutes the originFunction with the corrrected executionContext\n     * @memberof ParallelQueryExecutionContextBase\n     * @instance\n     */\n    _repairExecutionContext(originFunction) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            // TODO: any\n            // Get the replacement ranges\n            // Removing the invalid documentProducer from the orderByPQ\n            const parentDocumentProducer = this.orderByPQ.deq();\n            try {\n                const replacementPartitionKeyRanges = yield this._getReplacementPartitionKeyRanges(parentDocumentProducer);\n                const replacementDocumentProducers = [];\n                // Create the replacement documentProducers\n                replacementPartitionKeyRanges.forEach(partitionKeyRange => {\n                    // Create replacment document producers with the parent's continuationToken\n                    const replacementDocumentProducer = this._createTargetPartitionQueryExecutionContext(partitionKeyRange, parentDocumentProducer.continuationToken);\n                    replacementDocumentProducers.push(replacementDocumentProducer);\n                });\n                // We need to check if the documentProducers even has anything left to fetch from before enqueing them\n                const checkAndEnqueueDocumentProducer = (documentProducerToCheck, checkNextDocumentProducerCallback) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                    try {\n                        const { result: afterItem, headers } = yield documentProducerToCheck.current();\n                        if (afterItem === undefined) {\n                            // no more results left in this document producer, so we don't enqueue it\n                        }\n                        else {\n                            // Safe to put document producer back in the queue\n                            this.orderByPQ.enq(documentProducerToCheck);\n                        }\n                        yield checkNextDocumentProducerCallback();\n                    }\n                    catch (err) {\n                        this.err = err;\n                        return;\n                    }\n                });\n                const checkAndEnqueueDocumentProducers = (rdp) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                    if (rdp.length > 0) {\n                        // We still have a replacementDocumentProducer to check\n                        const replacementDocumentProducer = rdp.shift();\n                        yield checkAndEnqueueDocumentProducer(replacementDocumentProducer, () => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                            yield checkAndEnqueueDocumentProducers(rdp);\n                        }));\n                    }\n                    else {\n                        // reexecutes the originFunction with the corrrected executionContext\n                        return originFunction();\n                    }\n                });\n                // Invoke the recursive function to get the ball rolling\n                yield checkAndEnqueueDocumentProducers(replacementDocumentProducers);\n            }\n            catch (err) {\n                this.err = err;\n                throw err;\n            }\n        });\n    }\n    static _needPartitionKeyRangeCacheRefresh(error) {\n        // TODO: any error\n        return (error.code === common_1.StatusCodes.Gone &&\n            \"substatus\" in error &&\n            error[\"substatus\"] === common_1.SubStatusCodes.PartitionKeyRangeGone);\n    }\n    /**\n     * Checks to see if the executionContext needs to be repaired.\n     * if so it repairs the execution context and executes the ifCallback,\n     * else it continues with the current execution context and executes the elseCallback\n     * @memberof ParallelQueryExecutionContextBase\n     * @instance\n     */\n    _repairExecutionContextIfNeeded(ifCallback, elseCallback) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const documentProducer = this.orderByPQ.peek();\n            // Check if split happened\n            try {\n                const { result: element, headers } = yield documentProducer.current();\n                elseCallback();\n            }\n            catch (err) {\n                if (ParallelQueryExecutionContextBase._needPartitionKeyRangeCacheRefresh(err)) {\n                    // Split has happened so we need to repair execution context before continueing\n                    return this._repairExecutionContext(ifCallback);\n                }\n                else {\n                    // Something actually bad happened ...\n                    this.err = err;\n                    throw err;\n                }\n            }\n        });\n    }\n    /**\n     * Execute a provided function on the next element in the ParallelQueryExecutionContextBase.\n     * @memberof ParallelQueryExecutionContextBase\n     * @instance\n     * @param {callback} callback - Function to execute for each element. the function takes two \\\n     * parameters error, element.\n     */\n    nextItem() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (this.err) {\n                // if there is a prior error return error\n                throw this.err;\n            }\n            return new Promise((resolve, reject) => {\n                this.sem.take(() => {\n                    // NOTE: lock must be released before invoking quitting\n                    if (this.err) {\n                        // release the lock before invoking callback\n                        this.sem.leave();\n                        // if there is a prior error return error\n                        this.err.headers = this._getAndResetActiveResponseHeaders();\n                        reject(this.err);\n                        return;\n                    }\n                    if (this.orderByPQ.size() === 0) {\n                        // there is no more results\n                        this.state = ParallelQueryExecutionContextBase.STATES.ended;\n                        // release the lock before invoking callback\n                        this.sem.leave();\n                        return resolve({\n                            result: undefined,\n                            headers: this._getAndResetActiveResponseHeaders()\n                        });\n                    }\n                    const ifCallback = () => {\n                        // Release the semaphore to avoid deadlock\n                        this.sem.leave();\n                        // Reexcute the function\n                        return resolve(this.nextItem());\n                    };\n                    const elseCallback = () => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                        let documentProducer;\n                        try {\n                            documentProducer = this.orderByPQ.deq();\n                        }\n                        catch (e) {\n                            // if comparing elements of the priority queue throws exception\n                            // set that error and return error\n                            this.err = e;\n                            // release the lock before invoking callback\n                            this.sem.leave();\n                            this.err.headers = this._getAndResetActiveResponseHeaders();\n                            reject(this.err);\n                            return;\n                        }\n                        let item;\n                        let headers;\n                        try {\n                            const response = yield documentProducer.nextItem();\n                            item = response.result;\n                            headers = response.headers;\n                            this._mergeWithActiveResponseHeaders(headers);\n                            if (item === undefined) {\n                                // this should never happen\n                                // because the documentProducer already has buffered an item\n                                // assert item !== undefined\n                                this.err = new Error(util.format(`Extracted DocumentProducer from the priority queue \\\n                                            doesn't have any buffered item!`));\n                                // release the lock before invoking callback\n                                this.sem.leave();\n                                return resolve({\n                                    result: undefined,\n                                    headers: this._getAndResetActiveResponseHeaders()\n                                });\n                            }\n                        }\n                        catch (err) {\n                            this.err = new Error(`Extracted DocumentProducer from the priority queue fails to get the \\\n                                    buffered item. Due to ${JSON.stringify(err)}`);\n                            this.err.headers = this._getAndResetActiveResponseHeaders();\n                            // release the lock before invoking callback\n                            this.sem.leave();\n                            reject(this.err);\n                            return;\n                        }\n                        // we need to put back the document producer to the queue if it has more elements.\n                        // the lock will be released after we know document producer must be put back in the queue or not\n                        try {\n                            const { result: afterItem, headers: currentHeaders } = yield documentProducer.current();\n                            if (afterItem === undefined) {\n                                // no more results is left in this document producer\n                            }\n                            else {\n                                try {\n                                    const headItem = documentProducer.fetchResults[0];\n                                    assert_1.default.notStrictEqual(headItem, undefined, \"Extracted DocumentProducer from PQ is invalid state with no result!\");\n                                    this.orderByPQ.enq(documentProducer);\n                                }\n                                catch (e) {\n                                    // if comparing elements in priority queue throws exception\n                                    // set error\n                                    this.err = e;\n                                }\n                            }\n                        }\n                        catch (err) {\n                            if (ParallelQueryExecutionContextBase._needPartitionKeyRangeCacheRefresh(err)) {\n                                // We want the document producer enqueued\n                                // So that later parts of the code can repair the execution context\n                                this.orderByPQ.enq(documentProducer);\n                            }\n                            else {\n                                // Something actually bad happened\n                                this.err = err;\n                                reject(this.err);\n                            }\n                        }\n                        finally {\n                            // release the lock before returning\n                            this.sem.leave();\n                        }\n                        // invoke the callback on the item\n                        return resolve({\n                            result: item,\n                            headers: this._getAndResetActiveResponseHeaders()\n                        });\n                    });\n                    this._repairExecutionContextIfNeeded(ifCallback, elseCallback).catch(reject);\n                });\n            });\n        });\n    }\n    /**\n     * Retrieve the current element on the ParallelQueryExecutionContextBase.\n     * @memberof ParallelQueryExecutionContextBase\n     * @instance\n     * @param {callback} callback - Function to execute for the current element. \\\n     * the function takes two parameters error, element.\n     */\n    current() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (this.err) {\n                this.err.headerse = this._getAndResetActiveResponseHeaders();\n                throw this.err;\n            }\n            return new Promise((resolve, reject) => {\n                this.sem.take(() => {\n                    try {\n                        if (this.err) {\n                            this.err = this._getAndResetActiveResponseHeaders();\n                            throw this.err;\n                        }\n                        if (this.orderByPQ.size() === 0) {\n                            return resolve({\n                                result: undefined,\n                                headers: this._getAndResetActiveResponseHeaders()\n                            });\n                        }\n                        const ifCallback = () => {\n                            // Reexcute the function\n                            return resolve(this.current());\n                        };\n                        const elseCallback = () => {\n                            const documentProducer = this.orderByPQ.peek();\n                            return resolve(documentProducer.current());\n                        };\n                        this._repairExecutionContextIfNeeded(ifCallback, elseCallback).catch(reject);\n                    }\n                    finally {\n                        this.sem.leave();\n                    }\n                });\n            });\n        });\n    }\n    /**\n     * Determine if there are still remaining resources to processs based on the value of the continuation \\\n     * token or the elements remaining on the current batch in the QueryIterator.\n     * @memberof ParallelQueryExecutionContextBase\n     * @instance\n     * @returns {Boolean} true if there is other elements to process in the ParallelQueryExecutionContextBase.\n     */\n    hasMoreResults() {\n        return !(this.state === ParallelQueryExecutionContextBase.STATES.ended || this.err !== undefined);\n    }\n    /**\n     * Creates document producers\n     */\n    _createTargetPartitionQueryExecutionContext(partitionKeyTargetRange, continuationToken) {\n        // TODO: any\n        // creates target partition range Query Execution Context\n        let rewrittenQuery = _1.PartitionedQueryExecutionContextInfoParser.parseRewrittenQuery(this.partitionedQueryExecutionInfo);\n        let query = this.query;\n        if (typeof query === \"string\") {\n            query = { query };\n        }\n        const formatPlaceHolder = \"{documentdb-formattableorderbyquery-filter}\";\n        if (rewrittenQuery) {\n            query = JSON.parse(JSON.stringify(query));\n            // We hardcode the formattable filter to true for now\n            rewrittenQuery = rewrittenQuery.replace(formatPlaceHolder, \"true\");\n            query[\"query\"] = rewrittenQuery;\n        }\n        const options = JSON.parse(JSON.stringify(this.options));\n        options.continuationToken = continuationToken;\n        return new _1.DocumentProducer(this.clientContext, this.collectionLink, query, partitionKeyTargetRange, options);\n    }\n}\nParallelQueryExecutionContextBase.DEFAULT_PAGE_SIZE = 10;\nParallelQueryExecutionContextBase.STATES = ParallelQueryExecutionContextBaseStates;\nexports.ParallelQueryExecutionContextBase = ParallelQueryExecutionContextBase;\n//# sourceMappingURL=parallelQueryExecutionContextBase.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/parallelQueryExecutionContextBase.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/partitionedQueryExecutionContextInfoParser.js":
/*!*********************************************************************************!*\
  !*** ./lib/queryExecutionContext/partitionedQueryExecutionContextInfoParser.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst assert_1 = tslib_1.__importDefault(__webpack_require__(/*! assert */ \"./node_modules/assert/assert.js\"));\nconst util = tslib_1.__importStar(__webpack_require__(/*! util */ \"./node_modules/util/util.js\"));\n/** @hidden */\nconst PartitionedQueryContants = {\n    QueryInfoPath: \"queryInfo\",\n    TopPath: [\"queryInfo\", \"top\"],\n    OrderByPath: [\"queryInfo\", \"orderBy\"],\n    AggregatePath: [\"queryInfo\", \"aggregates\"],\n    QueryRangesPath: \"queryRanges\",\n    RewrittenQueryPath: [\"queryInfo\", \"rewrittenQuery\"]\n};\n// TODO: any partitionedQueryExecutionInfo\n/** @hidden */\nclass PartitionedQueryExecutionContextInfoParser {\n    static parseRewrittenQuery(partitionedQueryExecutionInfo) {\n        return this._extract(partitionedQueryExecutionInfo, PartitionedQueryContants.RewrittenQueryPath);\n    }\n    static parseQueryRanges(partitionedQueryExecutionInfo) {\n        return this._extract(partitionedQueryExecutionInfo, PartitionedQueryContants.QueryRangesPath);\n    }\n    static parseOrderBy(partitionedQueryExecutionInfo) {\n        return this._extract(partitionedQueryExecutionInfo, PartitionedQueryContants.OrderByPath);\n    }\n    static parseAggregates(partitionedQueryExecutionInfo) {\n        return this._extract(partitionedQueryExecutionInfo, PartitionedQueryContants.AggregatePath);\n    }\n    static parseTop(partitionedQueryExecutionInfo) {\n        return this._extract(partitionedQueryExecutionInfo, PartitionedQueryContants.TopPath);\n    }\n    static _extract(partitionedQueryExecutionInfo, path) {\n        let item = partitionedQueryExecutionInfo;\n        if (typeof path === \"string\") {\n            return item[path];\n        }\n        assert_1.default.ok(Array.isArray(path), util.format(\"%s is expected to be an array\", JSON.stringify(path)));\n        for (const p of path) {\n            item = item[p];\n            if (item === undefined) {\n                return;\n            }\n        }\n        return item;\n    }\n}\nexports.PartitionedQueryExecutionContextInfoParser = PartitionedQueryExecutionContextInfoParser;\n//# sourceMappingURL=partitionedQueryExecutionContextInfoParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L3BhcnRpdGlvbmVkUXVlcnlFeGVjdXRpb25Db250ZXh0SW5mb1BhcnNlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvcGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkNvbnRleHRJbmZvUGFyc2VyLmpzPzgzMzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgYXNzZXJ0XzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYXNzZXJ0XCIpKTtcbmNvbnN0IHV0aWwgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwidXRpbFwiKSk7XG4vKiogQGhpZGRlbiAqL1xuY29uc3QgUGFydGl0aW9uZWRRdWVyeUNvbnRhbnRzID0ge1xuICAgIFF1ZXJ5SW5mb1BhdGg6IFwicXVlcnlJbmZvXCIsXG4gICAgVG9wUGF0aDogW1wicXVlcnlJbmZvXCIsIFwidG9wXCJdLFxuICAgIE9yZGVyQnlQYXRoOiBbXCJxdWVyeUluZm9cIiwgXCJvcmRlckJ5XCJdLFxuICAgIEFnZ3JlZ2F0ZVBhdGg6IFtcInF1ZXJ5SW5mb1wiLCBcImFnZ3JlZ2F0ZXNcIl0sXG4gICAgUXVlcnlSYW5nZXNQYXRoOiBcInF1ZXJ5UmFuZ2VzXCIsXG4gICAgUmV3cml0dGVuUXVlcnlQYXRoOiBbXCJxdWVyeUluZm9cIiwgXCJyZXdyaXR0ZW5RdWVyeVwiXVxufTtcbi8vIFRPRE86IGFueSBwYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mb1xuLyoqIEBoaWRkZW4gKi9cbmNsYXNzIFBhcnRpdGlvbmVkUXVlcnlFeGVjdXRpb25Db250ZXh0SW5mb1BhcnNlciB7XG4gICAgc3RhdGljIHBhcnNlUmV3cml0dGVuUXVlcnkocGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkluZm8pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2V4dHJhY3QocGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkluZm8sIFBhcnRpdGlvbmVkUXVlcnlDb250YW50cy5SZXdyaXR0ZW5RdWVyeVBhdGgpO1xuICAgIH1cbiAgICBzdGF0aWMgcGFyc2VRdWVyeVJhbmdlcyhwYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mbykge1xuICAgICAgICByZXR1cm4gdGhpcy5fZXh0cmFjdChwYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mbywgUGFydGl0aW9uZWRRdWVyeUNvbnRhbnRzLlF1ZXJ5UmFuZ2VzUGF0aCk7XG4gICAgfVxuICAgIHN0YXRpYyBwYXJzZU9yZGVyQnkocGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkluZm8pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2V4dHJhY3QocGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkluZm8sIFBhcnRpdGlvbmVkUXVlcnlDb250YW50cy5PcmRlckJ5UGF0aCk7XG4gICAgfVxuICAgIHN0YXRpYyBwYXJzZUFnZ3JlZ2F0ZXMocGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkluZm8pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2V4dHJhY3QocGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkluZm8sIFBhcnRpdGlvbmVkUXVlcnlDb250YW50cy5BZ2dyZWdhdGVQYXRoKTtcbiAgICB9XG4gICAgc3RhdGljIHBhcnNlVG9wKHBhcnRpdGlvbmVkUXVlcnlFeGVjdXRpb25JbmZvKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9leHRyYWN0KHBhcnRpdGlvbmVkUXVlcnlFeGVjdXRpb25JbmZvLCBQYXJ0aXRpb25lZFF1ZXJ5Q29udGFudHMuVG9wUGF0aCk7XG4gICAgfVxuICAgIHN0YXRpYyBfZXh0cmFjdChwYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mbywgcGF0aCkge1xuICAgICAgICBsZXQgaXRlbSA9IHBhcnRpdGlvbmVkUXVlcnlFeGVjdXRpb25JbmZvO1xuICAgICAgICBpZiAodHlwZW9mIHBhdGggPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBpdGVtW3BhdGhdO1xuICAgICAgICB9XG4gICAgICAgIGFzc2VydF8xLmRlZmF1bHQub2soQXJyYXkuaXNBcnJheShwYXRoKSwgdXRpbC5mb3JtYXQoXCIlcyBpcyBleHBlY3RlZCB0byBiZSBhbiBhcnJheVwiLCBKU09OLnN0cmluZ2lmeShwYXRoKSkpO1xuICAgICAgICBmb3IgKGNvbnN0IHAgb2YgcGF0aCkge1xuICAgICAgICAgICAgaXRlbSA9IGl0ZW1bcF07XG4gICAgICAgICAgICBpZiAoaXRlbSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpdGVtO1xuICAgIH1cbn1cbmV4cG9ydHMuUGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkNvbnRleHRJbmZvUGFyc2VyID0gUGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkNvbnRleHRJbmZvUGFyc2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkNvbnRleHRJbmZvUGFyc2VyLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/partitionedQueryExecutionContextInfoParser.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/pipelinedQueryExecutionContext.js":
/*!*********************************************************************!*\
  !*** ./lib/queryExecutionContext/pipelinedQueryExecutionContext.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst _1 = __webpack_require__(/*! . */ \"./lib/queryExecutionContext/index.js\");\nconst EndpointComponent_1 = __webpack_require__(/*! ./EndpointComponent */ \"./lib/queryExecutionContext/EndpointComponent/index.js\");\n/** @hidden */\nclass PipelinedQueryExecutionContext {\n    constructor(clientContext, collectionLink, query, // TODO: any query\n    options, // TODO: any options\n    partitionedQueryExecutionInfo) {\n        this.clientContext = clientContext;\n        this.collectionLink = collectionLink;\n        this.query = query;\n        this.options = options;\n        this.partitionedQueryExecutionInfo = partitionedQueryExecutionInfo;\n        this.endpoint = null;\n        this.pageSize = options[\"maxItemCount\"];\n        if (this.pageSize === undefined) {\n            this.pageSize = PipelinedQueryExecutionContext.DEFAULT_PAGE_SIZE;\n        }\n        // Pick between parallel vs order by execution context\n        const sortOrders = _1.PartitionedQueryExecutionContextInfoParser.parseOrderBy(partitionedQueryExecutionInfo);\n        if (Array.isArray(sortOrders) && sortOrders.length > 0) {\n            // Need to wrap orderby execution context in endpoint component, since the data is nested as a \\\n            //      \"payload\" property.\n            this.endpoint = new EndpointComponent_1.OrderByEndpointComponent(new _1.OrderByQueryExecutionContext(this.clientContext, this.collectionLink, this.query, this.options, this.partitionedQueryExecutionInfo));\n        }\n        else {\n            this.endpoint = new _1.ParallelQueryExecutionContext(this.clientContext, this.collectionLink, this.query, this.options, this.partitionedQueryExecutionInfo);\n        }\n        // If aggregate then add that to the pipeline\n        const aggregates = _1.PartitionedQueryExecutionContextInfoParser.parseAggregates(partitionedQueryExecutionInfo);\n        if (Array.isArray(aggregates) && aggregates.length > 0) {\n            this.endpoint = new EndpointComponent_1.AggregateEndpointComponent(this.endpoint, aggregates);\n        }\n        // If top then add that to the pipeline\n        const top = _1.PartitionedQueryExecutionContextInfoParser.parseTop(partitionedQueryExecutionInfo);\n        if (typeof top === \"number\") {\n            this.endpoint = new EndpointComponent_1.TopEndpointComponent(this.endpoint, top);\n        }\n    }\n    nextItem() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            return this.endpoint.nextItem();\n        });\n    }\n    current() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            return this.endpoint.current();\n        });\n    }\n    // Removed callback here beacuse it wouldn't have ever worked...\n    hasMoreResults() {\n        return this.endpoint.hasMoreResults();\n    }\n    fetchMore() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            // if the wrapped endpoint has different implementation for fetchMore use that\n            // otherwise use the default implementation\n            if (typeof this.endpoint.fetchMore === \"function\") {\n                return this.endpoint.fetchMore();\n            }\n            else {\n                this.fetchBuffer = [];\n                this.fetchMoreRespHeaders = _1.HeaderUtils.getInitialHeader();\n                return this._fetchMoreImplementation();\n            }\n        });\n    }\n    _fetchMoreImplementation() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                const { result: item, headers } = yield this.endpoint.nextItem();\n                _1.HeaderUtils.mergeHeaders(this.fetchMoreRespHeaders, headers);\n                if (item === undefined) {\n                    // no more results\n                    if (this.fetchBuffer.length === 0) {\n                        return {\n                            result: undefined,\n                            headers: this.fetchMoreRespHeaders\n                        };\n                    }\n                    else {\n                        // Just give what we have\n                        const temp = this.fetchBuffer;\n                        this.fetchBuffer = [];\n                        return { result: temp, headers: this.fetchMoreRespHeaders };\n                    }\n                }\n                else {\n                    // append the result\n                    this.fetchBuffer.push(item);\n                    if (this.fetchBuffer.length >= this.pageSize) {\n                        // fetched enough results\n                        const temp = this.fetchBuffer.slice(0, this.pageSize);\n                        this.fetchBuffer = this.fetchBuffer.splice(this.pageSize);\n                        return { result: temp, headers: this.fetchMoreRespHeaders };\n                    }\n                    else {\n                        // recursively fetch more\n                        // TODO: is recursion a good idea?\n                        return this._fetchMoreImplementation();\n                    }\n                }\n            }\n            catch (err) {\n                _1.HeaderUtils.mergeHeaders(this.fetchMoreRespHeaders, err.headers);\n                err.headers = this.fetchMoreRespHeaders;\n                if (err) {\n                    throw err;\n                }\n            }\n        });\n    }\n}\nPipelinedQueryExecutionContext.DEFAULT_PAGE_SIZE = 10;\nexports.PipelinedQueryExecutionContext = PipelinedQueryExecutionContext;\n//# sourceMappingURL=pipelinedQueryExecutionContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlFeGVjdXRpb25Db250ZXh0L3BpcGVsaW5lZFF1ZXJ5RXhlY3V0aW9uQ29udGV4dC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvcGlwZWxpbmVkUXVlcnlFeGVjdXRpb25Db250ZXh0LmpzPzdiYmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgXzEgPSByZXF1aXJlKFwiLlwiKTtcbmNvbnN0IEVuZHBvaW50Q29tcG9uZW50XzEgPSByZXF1aXJlKFwiLi9FbmRwb2ludENvbXBvbmVudFwiKTtcbi8qKiBAaGlkZGVuICovXG5jbGFzcyBQaXBlbGluZWRRdWVyeUV4ZWN1dGlvbkNvbnRleHQge1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudENvbnRleHQsIGNvbGxlY3Rpb25MaW5rLCBxdWVyeSwgLy8gVE9ETzogYW55IHF1ZXJ5XG4gICAgb3B0aW9ucywgLy8gVE9ETzogYW55IG9wdGlvbnNcbiAgICBwYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mbykge1xuICAgICAgICB0aGlzLmNsaWVudENvbnRleHQgPSBjbGllbnRDb250ZXh0O1xuICAgICAgICB0aGlzLmNvbGxlY3Rpb25MaW5rID0gY29sbGVjdGlvbkxpbms7XG4gICAgICAgIHRoaXMucXVlcnkgPSBxdWVyeTtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICAgICAgdGhpcy5wYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mbyA9IHBhcnRpdGlvbmVkUXVlcnlFeGVjdXRpb25JbmZvO1xuICAgICAgICB0aGlzLmVuZHBvaW50ID0gbnVsbDtcbiAgICAgICAgdGhpcy5wYWdlU2l6ZSA9IG9wdGlvbnNbXCJtYXhJdGVtQ291bnRcIl07XG4gICAgICAgIGlmICh0aGlzLnBhZ2VTaXplID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMucGFnZVNpemUgPSBQaXBlbGluZWRRdWVyeUV4ZWN1dGlvbkNvbnRleHQuREVGQVVMVF9QQUdFX1NJWkU7XG4gICAgICAgIH1cbiAgICAgICAgLy8gUGljayBiZXR3ZWVuIHBhcmFsbGVsIHZzIG9yZGVyIGJ5IGV4ZWN1dGlvbiBjb250ZXh0XG4gICAgICAgIGNvbnN0IHNvcnRPcmRlcnMgPSBfMS5QYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uQ29udGV4dEluZm9QYXJzZXIucGFyc2VPcmRlckJ5KHBhcnRpdGlvbmVkUXVlcnlFeGVjdXRpb25JbmZvKTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoc29ydE9yZGVycykgJiYgc29ydE9yZGVycy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAvLyBOZWVkIHRvIHdyYXAgb3JkZXJieSBleGVjdXRpb24gY29udGV4dCBpbiBlbmRwb2ludCBjb21wb25lbnQsIHNpbmNlIHRoZSBkYXRhIGlzIG5lc3RlZCBhcyBhIFxcXG4gICAgICAgICAgICAvLyAgICAgIFwicGF5bG9hZFwiIHByb3BlcnR5LlxuICAgICAgICAgICAgdGhpcy5lbmRwb2ludCA9IG5ldyBFbmRwb2ludENvbXBvbmVudF8xLk9yZGVyQnlFbmRwb2ludENvbXBvbmVudChuZXcgXzEuT3JkZXJCeVF1ZXJ5RXhlY3V0aW9uQ29udGV4dCh0aGlzLmNsaWVudENvbnRleHQsIHRoaXMuY29sbGVjdGlvbkxpbmssIHRoaXMucXVlcnksIHRoaXMub3B0aW9ucywgdGhpcy5wYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mbykpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5lbmRwb2ludCA9IG5ldyBfMS5QYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dCh0aGlzLmNsaWVudENvbnRleHQsIHRoaXMuY29sbGVjdGlvbkxpbmssIHRoaXMucXVlcnksIHRoaXMub3B0aW9ucywgdGhpcy5wYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mbyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgYWdncmVnYXRlIHRoZW4gYWRkIHRoYXQgdG8gdGhlIHBpcGVsaW5lXG4gICAgICAgIGNvbnN0IGFnZ3JlZ2F0ZXMgPSBfMS5QYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uQ29udGV4dEluZm9QYXJzZXIucGFyc2VBZ2dyZWdhdGVzKHBhcnRpdGlvbmVkUXVlcnlFeGVjdXRpb25JbmZvKTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoYWdncmVnYXRlcykgJiYgYWdncmVnYXRlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLmVuZHBvaW50ID0gbmV3IEVuZHBvaW50Q29tcG9uZW50XzEuQWdncmVnYXRlRW5kcG9pbnRDb21wb25lbnQodGhpcy5lbmRwb2ludCwgYWdncmVnYXRlcyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgdG9wIHRoZW4gYWRkIHRoYXQgdG8gdGhlIHBpcGVsaW5lXG4gICAgICAgIGNvbnN0IHRvcCA9IF8xLlBhcnRpdGlvbmVkUXVlcnlFeGVjdXRpb25Db250ZXh0SW5mb1BhcnNlci5wYXJzZVRvcChwYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mbyk7XG4gICAgICAgIGlmICh0eXBlb2YgdG9wID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgICB0aGlzLmVuZHBvaW50ID0gbmV3IEVuZHBvaW50Q29tcG9uZW50XzEuVG9wRW5kcG9pbnRDb21wb25lbnQodGhpcy5lbmRwb2ludCwgdG9wKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBuZXh0SXRlbSgpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZW5kcG9pbnQubmV4dEl0ZW0oKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGN1cnJlbnQoKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmVuZHBvaW50LmN1cnJlbnQoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8vIFJlbW92ZWQgY2FsbGJhY2sgaGVyZSBiZWFjdXNlIGl0IHdvdWxkbid0IGhhdmUgZXZlciB3b3JrZWQuLi5cbiAgICBoYXNNb3JlUmVzdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZW5kcG9pbnQuaGFzTW9yZVJlc3VsdHMoKTtcbiAgICB9XG4gICAgZmV0Y2hNb3JlKCkge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICAvLyBpZiB0aGUgd3JhcHBlZCBlbmRwb2ludCBoYXMgZGlmZmVyZW50IGltcGxlbWVudGF0aW9uIGZvciBmZXRjaE1vcmUgdXNlIHRoYXRcbiAgICAgICAgICAgIC8vIG90aGVyd2lzZSB1c2UgdGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb25cbiAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5lbmRwb2ludC5mZXRjaE1vcmUgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmVuZHBvaW50LmZldGNoTW9yZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5mZXRjaEJ1ZmZlciA9IFtdO1xuICAgICAgICAgICAgICAgIHRoaXMuZmV0Y2hNb3JlUmVzcEhlYWRlcnMgPSBfMS5IZWFkZXJVdGlscy5nZXRJbml0aWFsSGVhZGVyKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2ZldGNoTW9yZUltcGxlbWVudGF0aW9uKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBfZmV0Y2hNb3JlSW1wbGVtZW50YXRpb24oKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyByZXN1bHQ6IGl0ZW0sIGhlYWRlcnMgfSA9IHlpZWxkIHRoaXMuZW5kcG9pbnQubmV4dEl0ZW0oKTtcbiAgICAgICAgICAgICAgICBfMS5IZWFkZXJVdGlscy5tZXJnZUhlYWRlcnModGhpcy5mZXRjaE1vcmVSZXNwSGVhZGVycywgaGVhZGVycyk7XG4gICAgICAgICAgICAgICAgaWYgKGl0ZW0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBubyBtb3JlIHJlc3VsdHNcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZmV0Y2hCdWZmZXIubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuZmV0Y2hNb3JlUmVzcEhlYWRlcnNcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBKdXN0IGdpdmUgd2hhdCB3ZSBoYXZlXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0ZW1wID0gdGhpcy5mZXRjaEJ1ZmZlcjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZmV0Y2hCdWZmZXIgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IHJlc3VsdDogdGVtcCwgaGVhZGVyczogdGhpcy5mZXRjaE1vcmVSZXNwSGVhZGVycyB9O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBhcHBlbmQgdGhlIHJlc3VsdFxuICAgICAgICAgICAgICAgICAgICB0aGlzLmZldGNoQnVmZmVyLnB1c2goaXRlbSk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmZldGNoQnVmZmVyLmxlbmd0aCA+PSB0aGlzLnBhZ2VTaXplKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBmZXRjaGVkIGVub3VnaCByZXN1bHRzXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0ZW1wID0gdGhpcy5mZXRjaEJ1ZmZlci5zbGljZSgwLCB0aGlzLnBhZ2VTaXplKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZmV0Y2hCdWZmZXIgPSB0aGlzLmZldGNoQnVmZmVyLnNwbGljZSh0aGlzLnBhZ2VTaXplKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IHJlc3VsdDogdGVtcCwgaGVhZGVyczogdGhpcy5mZXRjaE1vcmVSZXNwSGVhZGVycyB9O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmVjdXJzaXZlbHkgZmV0Y2ggbW9yZVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gVE9ETzogaXMgcmVjdXJzaW9uIGEgZ29vZCBpZGVhP1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2ZldGNoTW9yZUltcGxlbWVudGF0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgXzEuSGVhZGVyVXRpbHMubWVyZ2VIZWFkZXJzKHRoaXMuZmV0Y2hNb3JlUmVzcEhlYWRlcnMsIGVyci5oZWFkZXJzKTtcbiAgICAgICAgICAgICAgICBlcnIuaGVhZGVycyA9IHRoaXMuZmV0Y2hNb3JlUmVzcEhlYWRlcnM7XG4gICAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG5QaXBlbGluZWRRdWVyeUV4ZWN1dGlvbkNvbnRleHQuREVGQVVMVF9QQUdFX1NJWkUgPSAxMDtcbmV4cG9ydHMuUGlwZWxpbmVkUXVlcnlFeGVjdXRpb25Db250ZXh0ID0gUGlwZWxpbmVkUXVlcnlFeGVjdXRpb25Db250ZXh0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGlwZWxpbmVkUXVlcnlFeGVjdXRpb25Db250ZXh0LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/pipelinedQueryExecutionContext.js\n");

/***/ }),

/***/ "./lib/queryExecutionContext/proxyQueryExecutionContext.js":
/*!*****************************************************************!*\
  !*** ./lib/queryExecutionContext/proxyQueryExecutionContext.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst assert_1 = tslib_1.__importDefault(__webpack_require__(/*! assert */ \"./node_modules/assert/assert.js\"));\nconst _1 = __webpack_require__(/*! . */ \"./lib/queryExecutionContext/index.js\");\nconst common_1 = __webpack_require__(/*! ../common */ \"./lib/common/index.js\");\n/** @hidden */\nclass ProxyQueryExecutionContext {\n    constructor(clientContext, query, options, // TODO: any options\n    fetchFunctions, resourceLink) {\n        this.clientContext = clientContext;\n        this.query = query;\n        this.options = options;\n        this.fetchFunctions = fetchFunctions;\n        this.resourceLink = resourceLink;\n        this.query = query;\n        this.fetchFunctions = fetchFunctions;\n        // clone options\n        this.options = JSON.parse(JSON.stringify(options || {}));\n        this.resourceLink = resourceLink;\n        this.queryExecutionContext = new _1.DefaultQueryExecutionContext(this.clientContext, this.query, this.options, this.fetchFunctions);\n    }\n    /**\n     * Execute a provided function on the next element in the ProxyQueryExecutionContext.\n     * @memberof ProxyQueryExecutionContext\n     * @instance\n     * @param {callback} callback - Function to execute for each element. \\\n     * the function takes two parameters error, element.\n     */\n    nextItem() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                const r = yield this.queryExecutionContext.nextItem();\n                return r;\n            }\n            catch (err) {\n                if (this._hasPartitionedExecutionInfo(err)) {\n                    // if this's a partitioned execution info switches the execution context\n                    const partitionedExecutionInfo = this._getParitionedExecutionInfo(err);\n                    this.queryExecutionContext = this._createPipelinedExecutionContext(partitionedExecutionInfo);\n                    try {\n                        // TODO: recusion might be bad...\n                        return this.nextItem();\n                    }\n                    catch (e) {\n                        throw e;\n                    }\n                }\n                else {\n                    throw err;\n                }\n            }\n        });\n    }\n    _createPipelinedExecutionContext(partitionedExecutionInfo) {\n        assert_1.default.notStrictEqual(this.resourceLink, undefined, \"for top/orderby resourceLink is required.\");\n        assert_1.default.ok(!Array.isArray(this.resourceLink) || this.resourceLink.length === 1, \"for top/orderby exactly one collectionLink is required\");\n        const collectionLink = Array.isArray(this.resourceLink) ? this.resourceLink[0] : this.resourceLink;\n        return new _1.PipelinedQueryExecutionContext(this.clientContext, collectionLink, this.query, this.options, partitionedExecutionInfo);\n    }\n    /**\n     * Retrieve the current element on the ProxyQueryExecutionContext.\n     * @memberof ProxyQueryExecutionContext\n     * @instance\n     * @param {callback} callback - Function to execute for the current element. \\\n     * the function takes two parameters error, element.\n     */\n    current() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield this.queryExecutionContext.current();\n            }\n            catch (err) {\n                if (this._hasPartitionedExecutionInfo(err)) {\n                    // if this's a partitioned execution info switches the execution context\n                    const partitionedExecutionInfo = this._getParitionedExecutionInfo(err);\n                    this.queryExecutionContext = this._createPipelinedExecutionContext(partitionedExecutionInfo);\n                    // TODO: recursion\n                    try {\n                        return this.current();\n                    }\n                    catch (e) {\n                        throw e;\n                    }\n                }\n                else {\n                    throw err;\n                }\n            }\n        });\n    }\n    /**\n     * Determine if there are still remaining resources to process.\n     * @memberof ProxyQueryExecutionContext\n     * @instance\n     * @returns {Boolean} true if there is other elements to process in the ProxyQueryExecutionContext.\n     */\n    hasMoreResults() {\n        return this.queryExecutionContext.hasMoreResults();\n    }\n    fetchMore() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield this.queryExecutionContext.fetchMore();\n            }\n            catch (err) {\n                if (this._hasPartitionedExecutionInfo(err)) {\n                    // if this's a partitioned execution info switches the execution context\n                    const partitionedExecutionInfo = this._getParitionedExecutionInfo(err);\n                    this.queryExecutionContext = this._createPipelinedExecutionContext(partitionedExecutionInfo);\n                    try {\n                        // TODO: maybe should move the others to use this pattern as it avoid the recursion issue.\n                        return this.queryExecutionContext.fetchMore();\n                    }\n                    catch (e) {\n                        throw e;\n                    }\n                }\n                else {\n                    throw err;\n                }\n            }\n        });\n    }\n    _hasPartitionedExecutionInfo(error) {\n        // TODO: any error\n        return (error.code === common_1.StatusCodes.BadRequest &&\n            \"substatus\" in error &&\n            error[\"substatus\"] === common_1.SubStatusCodes.CrossPartitionQueryNotServable);\n    }\n    _getParitionedExecutionInfo(error) {\n        // TODO: any error\n        return JSON.parse(JSON.parse(error.body).additionalErrorInfo);\n    }\n}\nexports.ProxyQueryExecutionContext = ProxyQueryExecutionContext;\n//# sourceMappingURL=proxyQueryExecutionContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/queryExecutionContext/proxyQueryExecutionContext.js\n");

/***/ }),

/***/ "./lib/queryIterator.js":
/*!******************************!*\
  !*** ./lib/queryIterator.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst queryExecutionContext_1 = __webpack_require__(/*! ./queryExecutionContext */ \"./lib/queryExecutionContext/index.js\");\n/**\n * Represents a QueryIterator Object, an implmenetation of feed or query response that enables\n * traversal and iterating over the response\n * in the Azure Cosmos DB database service.\n */\nclass QueryIterator {\n    /**\n     * @hidden\n     */\n    constructor(clientContext, query, options, // TODO: any options\n    fetchFunctions, resourceLink) {\n        this.clientContext = clientContext;\n        this.query = query;\n        this.options = options;\n        this.fetchFunctions = fetchFunctions;\n        this.resourceLink = resourceLink;\n        this.query = query;\n        this.fetchFunctions = fetchFunctions;\n        this.options = options;\n        this.resourceLink = resourceLink;\n        this.queryExecutionContext = this._createQueryExecutionContext();\n    }\n    /**\n     * Calls a specified callback for each item returned from the query.\n     * Runs serially; each callback blocks the next.\n     *\n     * @param callback Specified callback.\n     * First param is the result,\n     * second param (optional) is the current headers object state,\n     * third param (optional) is current index.\n     * No more callbacks will be called if one of them results false.\n     *\n     * @returns Promise<void> - you should await or .catch the Promise in case there are any errors\n     *\n     * @example Iterate over all databases\n     * ```typescript\n     * await client.databases.readAll().forEach((db, headers, index) => {\n     *   console.log(`Got ${db.id} from forEach`);\n     * })\n     * ```\n     */\n    forEach(callback) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this.reset();\n            let index = 0;\n            while (this.queryExecutionContext.hasMoreResults()) {\n                const result = yield this.queryExecutionContext.nextItem();\n                if (result.result === undefined) {\n                    return;\n                }\n                if (callback(result.result, result.headers, index) === false) {\n                    return;\n                }\n                else {\n                    ++index;\n                }\n            }\n        });\n    }\n    /**\n     * Gets an async iterator that will yield results until completion.\n     *\n     * NOTE: AsyncIterators are a very new feature and you might need to\n     * use polyfils/etc. in order to use them in your code.\n     *\n     * If you're using TypeScript, you can use the following polyfill as long\n     * as you target ES6 or higher and are running on Node 6 or higher.\n     *\n     * ```typescript\n     * if (!Symbol || !Symbol.asyncIterator) {\n     *   (Symbol as any).asyncIterator = Symbol.for(\"Symbol.asyncIterator\");\n     * }\n     * ```\n     *\n     * @see QueryIterator.forEach for very similar functionality.\n     *\n     * @example Iterate over all databases\n     * ```typescript\n     * for await(const {result: db} in client.databases.readAll().getAsyncIterator()) {\n     *   console.log(`Got ${db.id} from AsyncIterator`);\n     * }\n     * ```\n     */\n    getAsyncIterator() {\n        return tslib_1.__asyncGenerator(this, arguments, function* getAsyncIterator_1() {\n            this.reset();\n            while (this.queryExecutionContext.hasMoreResults()) {\n                const result = yield tslib_1.__await(this.queryExecutionContext.nextItem());\n                if (result.result === undefined) {\n                    return yield tslib_1.__await(void 0);\n                }\n                yield yield tslib_1.__await(result);\n            }\n        });\n    }\n    /**\n     * Execute a provided function on the next element in the QueryIterator.\n     */\n    nextItem() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            return this.queryExecutionContext.nextItem();\n        });\n    }\n    /**\n     * Retrieve the current element on the QueryIterator.\n     */\n    current() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            return this.queryExecutionContext.current();\n        });\n    }\n    // TODO: why is has more results deprecated?\n    /**\n     * @deprecated Instead check if nextItem() or current() returns undefined.\n     *\n     * Determine if there are still remaining resources to processs based on the value of the continuation token or the\\\n     * elements remaining on the current batch in the QueryIterator.\n     * @returns {Boolean} true if there is other elements to process in the QueryIterator.\n     */\n    hasMoreResults() {\n        return this.queryExecutionContext.hasMoreResults();\n    }\n    /**\n     * Retrieve all the elements of the feed and pass them as an array to a function\n     */\n    toArray() {\n        return tslib_1.__awaiter(this, arguments, void 0, function* () {\n            if (arguments.length !== 0) {\n                throw new Error(\"toArray takes no arguments\");\n            }\n            this.reset();\n            this.toArrayTempResources = [];\n            return this._toArrayImplementation();\n        });\n    }\n    /**\n     * Retrieve the next batch of the feed and pass them as an array to a function\n     */\n    executeNext() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            return this.queryExecutionContext.fetchMore();\n        });\n    }\n    /**\n     * Reset the QueryIterator to the beginning and clear all the resources inside it\n     */\n    reset() {\n        this.queryExecutionContext = this._createQueryExecutionContext();\n    }\n    _toArrayImplementation() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            while (this.queryExecutionContext.hasMoreResults()) {\n                const { result, headers } = yield this.queryExecutionContext.nextItem();\n                // concatinate the results and fetch more\n                this.toArrayLastResHeaders = headers;\n                if (result === undefined) {\n                    // no more results\n                    break;\n                }\n                this.toArrayTempResources.push(result);\n            }\n            return {\n                result: this.toArrayTempResources,\n                headers: this.toArrayLastResHeaders\n            };\n        });\n    }\n    _createQueryExecutionContext() {\n        return new queryExecutionContext_1.ProxyQueryExecutionContext(this.clientContext, this.query, this.options, this.fetchFunctions, this.resourceLink);\n    }\n}\nexports.QueryIterator = QueryIterator;\n//# sourceMappingURL=queryIterator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/queryIterator.js\n");

/***/ }),

/***/ "./lib/queryMetrics/clientSideMetrics.js":
/*!***********************************************!*\
  !*** ./lib/queryMetrics/clientSideMetrics.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ClientSideMetrics {\n    constructor(requestCharge) {\n        this.requestCharge = requestCharge;\n    }\n    /**\n     * Adds one or more ClientSideMetrics to a copy of this instance and returns the result.\n     */\n    add(...clientSideMetricsArray) {\n        if (arguments == null || arguments.length === 0) {\n            throw new Error(\"arguments was null or empty\");\n        }\n        let requestCharge = this.requestCharge;\n        for (const clientSideMetrics of clientSideMetricsArray) {\n            if (clientSideMetrics == null) {\n                throw new Error(\"clientSideMetrics has null or undefined item(s)\");\n            }\n            requestCharge += clientSideMetrics.requestCharge;\n        }\n        return new ClientSideMetrics(requestCharge);\n    }\n    static createFromArray(...clientSideMetricsArray) {\n        if (clientSideMetricsArray == null) {\n            throw new Error(\"clientSideMetricsArray is null or undefined item(s)\");\n        }\n        return this.zero.add(...clientSideMetricsArray);\n    }\n}\nClientSideMetrics.zero = new ClientSideMetrics(0);\nexports.ClientSideMetrics = ClientSideMetrics;\n//# sourceMappingURL=clientSideMetrics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlNZXRyaWNzL2NsaWVudFNpZGVNZXRyaWNzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3F1ZXJ5TWV0cmljcy9jbGllbnRTaWRlTWV0cmljcy5qcz9kYzk5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY2xhc3MgQ2xpZW50U2lkZU1ldHJpY3Mge1xuICAgIGNvbnN0cnVjdG9yKHJlcXVlc3RDaGFyZ2UpIHtcbiAgICAgICAgdGhpcy5yZXF1ZXN0Q2hhcmdlID0gcmVxdWVzdENoYXJnZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkcyBvbmUgb3IgbW9yZSBDbGllbnRTaWRlTWV0cmljcyB0byBhIGNvcHkgb2YgdGhpcyBpbnN0YW5jZSBhbmQgcmV0dXJucyB0aGUgcmVzdWx0LlxuICAgICAqL1xuICAgIGFkZCguLi5jbGllbnRTaWRlTWV0cmljc0FycmF5KSB7XG4gICAgICAgIGlmIChhcmd1bWVudHMgPT0gbnVsbCB8fCBhcmd1bWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJhcmd1bWVudHMgd2FzIG51bGwgb3IgZW1wdHlcIik7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHJlcXVlc3RDaGFyZ2UgPSB0aGlzLnJlcXVlc3RDaGFyZ2U7XG4gICAgICAgIGZvciAoY29uc3QgY2xpZW50U2lkZU1ldHJpY3Mgb2YgY2xpZW50U2lkZU1ldHJpY3NBcnJheSkge1xuICAgICAgICAgICAgaWYgKGNsaWVudFNpZGVNZXRyaWNzID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJjbGllbnRTaWRlTWV0cmljcyBoYXMgbnVsbCBvciB1bmRlZmluZWQgaXRlbShzKVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlcXVlc3RDaGFyZ2UgKz0gY2xpZW50U2lkZU1ldHJpY3MucmVxdWVzdENoYXJnZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IENsaWVudFNpZGVNZXRyaWNzKHJlcXVlc3RDaGFyZ2UpO1xuICAgIH1cbiAgICBzdGF0aWMgY3JlYXRlRnJvbUFycmF5KC4uLmNsaWVudFNpZGVNZXRyaWNzQXJyYXkpIHtcbiAgICAgICAgaWYgKGNsaWVudFNpZGVNZXRyaWNzQXJyYXkgPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY2xpZW50U2lkZU1ldHJpY3NBcnJheSBpcyBudWxsIG9yIHVuZGVmaW5lZCBpdGVtKHMpXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnplcm8uYWRkKC4uLmNsaWVudFNpZGVNZXRyaWNzQXJyYXkpO1xuICAgIH1cbn1cbkNsaWVudFNpZGVNZXRyaWNzLnplcm8gPSBuZXcgQ2xpZW50U2lkZU1ldHJpY3MoMCk7XG5leHBvcnRzLkNsaWVudFNpZGVNZXRyaWNzID0gQ2xpZW50U2lkZU1ldHJpY3M7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jbGllbnRTaWRlTWV0cmljcy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/queryMetrics/clientSideMetrics.js\n");

/***/ }),

/***/ "./lib/queryMetrics/index.js":
/*!***********************************!*\
  !*** ./lib/queryMetrics/index.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar clientSideMetrics_1 = __webpack_require__(/*! ./clientSideMetrics */ \"./lib/queryMetrics/clientSideMetrics.js\");\nexports.ClientSideMetrics = clientSideMetrics_1.ClientSideMetrics;\nvar queryMetrics_1 = __webpack_require__(/*! ./queryMetrics */ \"./lib/queryMetrics/queryMetrics.js\");\nexports.QueryMetrics = queryMetrics_1.QueryMetrics;\nvar queryMetricsConstants_1 = __webpack_require__(/*! ./queryMetricsConstants */ \"./lib/queryMetrics/queryMetricsConstants.js\");\nexports.QueryMetricsConstants = queryMetricsConstants_1.default;\nvar queryMetricsUtils_1 = __webpack_require__(/*! ./queryMetricsUtils */ \"./lib/queryMetrics/queryMetricsUtils.js\");\nexports.QueryMetricsUtils = queryMetricsUtils_1.QueryMetricsUtils;\nvar queryPreparationTime_1 = __webpack_require__(/*! ./queryPreparationTime */ \"./lib/queryMetrics/queryPreparationTime.js\");\nexports.QueryPreparationTimes = queryPreparationTime_1.QueryPreparationTimes;\nvar runtimeExecutionTimes_1 = __webpack_require__(/*! ./runtimeExecutionTimes */ \"./lib/queryMetrics/runtimeExecutionTimes.js\");\nexports.RuntimeExecutionTimes = runtimeExecutionTimes_1.RuntimeExecutionTimes;\nvar timeSpan_1 = __webpack_require__(/*! ./timeSpan */ \"./lib/queryMetrics/timeSpan.js\");\nexports.TimeSpan = timeSpan_1.TimeSpan;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlNZXRyaWNzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3F1ZXJ5TWV0cmljcy9pbmRleC5qcz83YWYzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGNsaWVudFNpZGVNZXRyaWNzXzEgPSByZXF1aXJlKFwiLi9jbGllbnRTaWRlTWV0cmljc1wiKTtcbmV4cG9ydHMuQ2xpZW50U2lkZU1ldHJpY3MgPSBjbGllbnRTaWRlTWV0cmljc18xLkNsaWVudFNpZGVNZXRyaWNzO1xudmFyIHF1ZXJ5TWV0cmljc18xID0gcmVxdWlyZShcIi4vcXVlcnlNZXRyaWNzXCIpO1xuZXhwb3J0cy5RdWVyeU1ldHJpY3MgPSBxdWVyeU1ldHJpY3NfMS5RdWVyeU1ldHJpY3M7XG52YXIgcXVlcnlNZXRyaWNzQ29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi9xdWVyeU1ldHJpY3NDb25zdGFudHNcIik7XG5leHBvcnRzLlF1ZXJ5TWV0cmljc0NvbnN0YW50cyA9IHF1ZXJ5TWV0cmljc0NvbnN0YW50c18xLmRlZmF1bHQ7XG52YXIgcXVlcnlNZXRyaWNzVXRpbHNfMSA9IHJlcXVpcmUoXCIuL3F1ZXJ5TWV0cmljc1V0aWxzXCIpO1xuZXhwb3J0cy5RdWVyeU1ldHJpY3NVdGlscyA9IHF1ZXJ5TWV0cmljc1V0aWxzXzEuUXVlcnlNZXRyaWNzVXRpbHM7XG52YXIgcXVlcnlQcmVwYXJhdGlvblRpbWVfMSA9IHJlcXVpcmUoXCIuL3F1ZXJ5UHJlcGFyYXRpb25UaW1lXCIpO1xuZXhwb3J0cy5RdWVyeVByZXBhcmF0aW9uVGltZXMgPSBxdWVyeVByZXBhcmF0aW9uVGltZV8xLlF1ZXJ5UHJlcGFyYXRpb25UaW1lcztcbnZhciBydW50aW1lRXhlY3V0aW9uVGltZXNfMSA9IHJlcXVpcmUoXCIuL3J1bnRpbWVFeGVjdXRpb25UaW1lc1wiKTtcbmV4cG9ydHMuUnVudGltZUV4ZWN1dGlvblRpbWVzID0gcnVudGltZUV4ZWN1dGlvblRpbWVzXzEuUnVudGltZUV4ZWN1dGlvblRpbWVzO1xudmFyIHRpbWVTcGFuXzEgPSByZXF1aXJlKFwiLi90aW1lU3BhblwiKTtcbmV4cG9ydHMuVGltZVNwYW4gPSB0aW1lU3Bhbl8xLlRpbWVTcGFuO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/queryMetrics/index.js\n");

/***/ }),

/***/ "./lib/queryMetrics/queryMetrics.js":
/*!******************************************!*\
  !*** ./lib/queryMetrics/queryMetrics.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst clientSideMetrics_1 = __webpack_require__(/*! ./clientSideMetrics */ \"./lib/queryMetrics/clientSideMetrics.js\");\nconst queryMetricsConstants_1 = tslib_1.__importDefault(__webpack_require__(/*! ./queryMetricsConstants */ \"./lib/queryMetrics/queryMetricsConstants.js\"));\nconst queryMetricsUtils_1 = __webpack_require__(/*! ./queryMetricsUtils */ \"./lib/queryMetrics/queryMetricsUtils.js\");\nconst queryPreparationTime_1 = __webpack_require__(/*! ./queryPreparationTime */ \"./lib/queryMetrics/queryPreparationTime.js\");\nconst runtimeExecutionTimes_1 = __webpack_require__(/*! ./runtimeExecutionTimes */ \"./lib/queryMetrics/runtimeExecutionTimes.js\");\nconst timeSpan_1 = __webpack_require__(/*! ./timeSpan */ \"./lib/queryMetrics/timeSpan.js\");\nclass QueryMetrics {\n    constructor(retrievedDocumentCount, retrievedDocumentSize, outputDocumentCount, outputDocumentSize, indexHitDocumentCount, totalQueryExecutionTime, queryPreparationTimes, indexLookupTime, documentLoadTime, vmExecutionTime, runtimeExecutionTimes, documentWriteTime, clientSideMetrics) {\n        this.retrievedDocumentCount = retrievedDocumentCount;\n        this.retrievedDocumentSize = retrievedDocumentSize;\n        this.outputDocumentCount = outputDocumentCount;\n        this.outputDocumentSize = outputDocumentSize;\n        this.indexHitDocumentCount = indexHitDocumentCount;\n        this.totalQueryExecutionTime = totalQueryExecutionTime;\n        this.queryPreparationTimes = queryPreparationTimes;\n        this.indexLookupTime = indexLookupTime;\n        this.documentLoadTime = documentLoadTime;\n        this.vmExecutionTime = vmExecutionTime;\n        this.runtimeExecutionTimes = runtimeExecutionTimes;\n        this.documentWriteTime = documentWriteTime;\n        this.clientSideMetrics = clientSideMetrics;\n    }\n    /**\n     * Gets the IndexHitRatio\n     * @memberof QueryMetrics\n     * @instance\n     * @ignore\n     */\n    get indexHitRatio() {\n        return this.retrievedDocumentCount === 0 ? 1 : this.indexHitDocumentCount / this.retrievedDocumentCount;\n    }\n    /**\n     * returns a new QueryMetrics instance that is the addition of this and the arguments.\n     */\n    add(queryMetricsArray) {\n        if (arguments == null || arguments.length === 0) {\n            throw new Error(\"arguments was null or empty\");\n        }\n        let retrievedDocumentCount = 0;\n        let retrievedDocumentSize = 0;\n        let outputDocumentCount = 0;\n        let outputDocumentSize = 0;\n        let indexHitDocumentCount = 0;\n        let totalQueryExecutionTime = timeSpan_1.TimeSpan.zero;\n        const queryPreparationTimesArray = [];\n        let indexLookupTime = timeSpan_1.TimeSpan.zero;\n        let documentLoadTime = timeSpan_1.TimeSpan.zero;\n        let vmExecutionTime = timeSpan_1.TimeSpan.zero;\n        const runtimeExecutionTimesArray = [];\n        let documentWriteTime = timeSpan_1.TimeSpan.zero;\n        const clientSideQueryMetricsArray = [];\n        queryMetricsArray.push(this);\n        for (const queryMetrics of queryMetricsArray) {\n            if (queryMetrics == null) {\n                throw new Error(\"queryMetricsArray has null or undefined item(s)\");\n            }\n            retrievedDocumentCount += queryMetrics.retrievedDocumentCount;\n            retrievedDocumentSize += queryMetrics.retrievedDocumentSize;\n            outputDocumentCount += queryMetrics.outputDocumentCount;\n            outputDocumentSize += queryMetrics.outputDocumentSize;\n            indexHitDocumentCount += queryMetrics.indexHitDocumentCount;\n            totalQueryExecutionTime = totalQueryExecutionTime.add(queryMetrics.totalQueryExecutionTime);\n            queryPreparationTimesArray.push(queryMetrics.queryPreparationTimes);\n            indexLookupTime = indexLookupTime.add(queryMetrics.indexLookupTime);\n            documentLoadTime = documentLoadTime.add(queryMetrics.documentLoadTime);\n            vmExecutionTime = vmExecutionTime.add(queryMetrics.vmExecutionTime);\n            runtimeExecutionTimesArray.push(queryMetrics.runtimeExecutionTimes);\n            documentWriteTime = documentWriteTime.add(queryMetrics.documentWriteTime);\n            clientSideQueryMetricsArray.push(queryMetrics.clientSideMetrics);\n        }\n        return new QueryMetrics(retrievedDocumentCount, retrievedDocumentSize, outputDocumentCount, outputDocumentSize, indexHitDocumentCount, totalQueryExecutionTime, queryPreparationTime_1.QueryPreparationTimes.createFromArray(queryPreparationTimesArray), indexLookupTime, documentLoadTime, vmExecutionTime, runtimeExecutionTimes_1.RuntimeExecutionTimes.createFromArray(runtimeExecutionTimesArray), documentWriteTime, clientSideMetrics_1.ClientSideMetrics.createFromArray(...clientSideQueryMetricsArray));\n    }\n    /**\n     * Output the QueryMetrics as a delimited string.\n     * @memberof QueryMetrics\n     * @instance\n     * @ignore\n     */\n    toDelimitedString() {\n        return (queryMetricsConstants_1.default.RetrievedDocumentCount +\n            \"=\" +\n            this.retrievedDocumentCount +\n            \";\" +\n            queryMetricsConstants_1.default.RetrievedDocumentSize +\n            \"=\" +\n            this.retrievedDocumentSize +\n            \";\" +\n            queryMetricsConstants_1.default.OutputDocumentCount +\n            \"=\" +\n            this.outputDocumentCount +\n            \";\" +\n            queryMetricsConstants_1.default.OutputDocumentSize +\n            \"=\" +\n            this.outputDocumentSize +\n            \";\" +\n            queryMetricsConstants_1.default.IndexHitRatio +\n            \"=\" +\n            this.indexHitRatio +\n            \";\" +\n            queryMetricsConstants_1.default.TotalQueryExecutionTimeInMs +\n            \"=\" +\n            this.totalQueryExecutionTime.totalMilliseconds() +\n            \";\" +\n            this.queryPreparationTimes.toDelimitedString() +\n            \";\" +\n            queryMetricsConstants_1.default.IndexLookupTimeInMs +\n            \"=\" +\n            this.indexLookupTime.totalMilliseconds() +\n            \";\" +\n            queryMetricsConstants_1.default.DocumentLoadTimeInMs +\n            \"=\" +\n            this.documentLoadTime.totalMilliseconds() +\n            \";\" +\n            queryMetricsConstants_1.default.VMExecutionTimeInMs +\n            \"=\" +\n            this.vmExecutionTime.totalMilliseconds() +\n            \";\" +\n            this.runtimeExecutionTimes.toDelimitedString() +\n            \";\" +\n            queryMetricsConstants_1.default.DocumentWriteTimeInMs +\n            \"=\" +\n            this.documentWriteTime.totalMilliseconds());\n    }\n    /**\n     * Returns a new instance of the QueryMetrics class that is the aggregation of an array of query metrics.\n     * @memberof QueryMetrics\n     * @instance\n     */\n    static createFromArray(queryMetricsArray) {\n        if (queryMetricsArray == null) {\n            throw new Error(\"queryMetricsArray is null or undefined item(s)\");\n        }\n        return QueryMetrics.zero.add(queryMetricsArray);\n    }\n    /**\n     * Returns a new instance of the QueryMetrics class this is deserialized from a delimited string.\n     * @memberof QueryMetrics\n     * @instance\n     */\n    static createFromDelimitedString(delimitedString, clientSideMetrics) {\n        const metrics = queryMetricsUtils_1.QueryMetricsUtils.parseDelimitedString(delimitedString);\n        const indexHitRatio = metrics[queryMetricsConstants_1.default.IndexHitRatio] || 0;\n        const retrievedDocumentCount = metrics[queryMetricsConstants_1.default.RetrievedDocumentCount] || 0;\n        const indexHitCount = indexHitRatio * retrievedDocumentCount;\n        const outputDocumentCount = metrics[queryMetricsConstants_1.default.OutputDocumentCount] || 0;\n        const outputDocumentSize = metrics[queryMetricsConstants_1.default.OutputDocumentSize] || 0;\n        const retrievedDocumentSize = metrics[queryMetricsConstants_1.default.RetrievedDocumentSize] || 0;\n        const totalQueryExecutionTime = queryMetricsUtils_1.QueryMetricsUtils.timeSpanFromMetrics(metrics, queryMetricsConstants_1.default.TotalQueryExecutionTimeInMs);\n        return new QueryMetrics(retrievedDocumentCount, retrievedDocumentSize, outputDocumentCount, outputDocumentSize, indexHitCount, totalQueryExecutionTime, queryPreparationTime_1.QueryPreparationTimes.createFromDelimitedString(delimitedString), queryMetricsUtils_1.QueryMetricsUtils.timeSpanFromMetrics(metrics, queryMetricsConstants_1.default.IndexLookupTimeInMs), queryMetricsUtils_1.QueryMetricsUtils.timeSpanFromMetrics(metrics, queryMetricsConstants_1.default.DocumentLoadTimeInMs), queryMetricsUtils_1.QueryMetricsUtils.timeSpanFromMetrics(metrics, queryMetricsConstants_1.default.VMExecutionTimeInMs), runtimeExecutionTimes_1.RuntimeExecutionTimes.createFromDelimitedString(delimitedString), queryMetricsUtils_1.QueryMetricsUtils.timeSpanFromMetrics(metrics, queryMetricsConstants_1.default.DocumentWriteTimeInMs), clientSideMetrics || clientSideMetrics_1.ClientSideMetrics.zero);\n    }\n}\nQueryMetrics.zero = new QueryMetrics(0, 0, 0, 0, 0, timeSpan_1.TimeSpan.zero, queryPreparationTime_1.QueryPreparationTimes.zero, timeSpan_1.TimeSpan.zero, timeSpan_1.TimeSpan.zero, timeSpan_1.TimeSpan.zero, runtimeExecutionTimes_1.RuntimeExecutionTimes.zero, timeSpan_1.TimeSpan.zero, clientSideMetrics_1.ClientSideMetrics.zero);\nexports.QueryMetrics = QueryMetrics;\n//# sourceMappingURL=queryMetrics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlNZXRyaWNzL3F1ZXJ5TWV0cmljcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9xdWVyeU1ldHJpY3MvcXVlcnlNZXRyaWNzLmpzPzk2MzMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgY2xpZW50U2lkZU1ldHJpY3NfMSA9IHJlcXVpcmUoXCIuL2NsaWVudFNpZGVNZXRyaWNzXCIpO1xuY29uc3QgcXVlcnlNZXRyaWNzQ29uc3RhbnRzXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9xdWVyeU1ldHJpY3NDb25zdGFudHNcIikpO1xuY29uc3QgcXVlcnlNZXRyaWNzVXRpbHNfMSA9IHJlcXVpcmUoXCIuL3F1ZXJ5TWV0cmljc1V0aWxzXCIpO1xuY29uc3QgcXVlcnlQcmVwYXJhdGlvblRpbWVfMSA9IHJlcXVpcmUoXCIuL3F1ZXJ5UHJlcGFyYXRpb25UaW1lXCIpO1xuY29uc3QgcnVudGltZUV4ZWN1dGlvblRpbWVzXzEgPSByZXF1aXJlKFwiLi9ydW50aW1lRXhlY3V0aW9uVGltZXNcIik7XG5jb25zdCB0aW1lU3Bhbl8xID0gcmVxdWlyZShcIi4vdGltZVNwYW5cIik7XG5jbGFzcyBRdWVyeU1ldHJpY3Mge1xuICAgIGNvbnN0cnVjdG9yKHJldHJpZXZlZERvY3VtZW50Q291bnQsIHJldHJpZXZlZERvY3VtZW50U2l6ZSwgb3V0cHV0RG9jdW1lbnRDb3VudCwgb3V0cHV0RG9jdW1lbnRTaXplLCBpbmRleEhpdERvY3VtZW50Q291bnQsIHRvdGFsUXVlcnlFeGVjdXRpb25UaW1lLCBxdWVyeVByZXBhcmF0aW9uVGltZXMsIGluZGV4TG9va3VwVGltZSwgZG9jdW1lbnRMb2FkVGltZSwgdm1FeGVjdXRpb25UaW1lLCBydW50aW1lRXhlY3V0aW9uVGltZXMsIGRvY3VtZW50V3JpdGVUaW1lLCBjbGllbnRTaWRlTWV0cmljcykge1xuICAgICAgICB0aGlzLnJldHJpZXZlZERvY3VtZW50Q291bnQgPSByZXRyaWV2ZWREb2N1bWVudENvdW50O1xuICAgICAgICB0aGlzLnJldHJpZXZlZERvY3VtZW50U2l6ZSA9IHJldHJpZXZlZERvY3VtZW50U2l6ZTtcbiAgICAgICAgdGhpcy5vdXRwdXREb2N1bWVudENvdW50ID0gb3V0cHV0RG9jdW1lbnRDb3VudDtcbiAgICAgICAgdGhpcy5vdXRwdXREb2N1bWVudFNpemUgPSBvdXRwdXREb2N1bWVudFNpemU7XG4gICAgICAgIHRoaXMuaW5kZXhIaXREb2N1bWVudENvdW50ID0gaW5kZXhIaXREb2N1bWVudENvdW50O1xuICAgICAgICB0aGlzLnRvdGFsUXVlcnlFeGVjdXRpb25UaW1lID0gdG90YWxRdWVyeUV4ZWN1dGlvblRpbWU7XG4gICAgICAgIHRoaXMucXVlcnlQcmVwYXJhdGlvblRpbWVzID0gcXVlcnlQcmVwYXJhdGlvblRpbWVzO1xuICAgICAgICB0aGlzLmluZGV4TG9va3VwVGltZSA9IGluZGV4TG9va3VwVGltZTtcbiAgICAgICAgdGhpcy5kb2N1bWVudExvYWRUaW1lID0gZG9jdW1lbnRMb2FkVGltZTtcbiAgICAgICAgdGhpcy52bUV4ZWN1dGlvblRpbWUgPSB2bUV4ZWN1dGlvblRpbWU7XG4gICAgICAgIHRoaXMucnVudGltZUV4ZWN1dGlvblRpbWVzID0gcnVudGltZUV4ZWN1dGlvblRpbWVzO1xuICAgICAgICB0aGlzLmRvY3VtZW50V3JpdGVUaW1lID0gZG9jdW1lbnRXcml0ZVRpbWU7XG4gICAgICAgIHRoaXMuY2xpZW50U2lkZU1ldHJpY3MgPSBjbGllbnRTaWRlTWV0cmljcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgSW5kZXhIaXRSYXRpb1xuICAgICAqIEBtZW1iZXJvZiBRdWVyeU1ldHJpY3NcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgZ2V0IGluZGV4SGl0UmF0aW8oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJldHJpZXZlZERvY3VtZW50Q291bnQgPT09IDAgPyAxIDogdGhpcy5pbmRleEhpdERvY3VtZW50Q291bnQgLyB0aGlzLnJldHJpZXZlZERvY3VtZW50Q291bnQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHJldHVybnMgYSBuZXcgUXVlcnlNZXRyaWNzIGluc3RhbmNlIHRoYXQgaXMgdGhlIGFkZGl0aW9uIG9mIHRoaXMgYW5kIHRoZSBhcmd1bWVudHMuXG4gICAgICovXG4gICAgYWRkKHF1ZXJ5TWV0cmljc0FycmF5KSB7XG4gICAgICAgIGlmIChhcmd1bWVudHMgPT0gbnVsbCB8fCBhcmd1bWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJhcmd1bWVudHMgd2FzIG51bGwgb3IgZW1wdHlcIik7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHJldHJpZXZlZERvY3VtZW50Q291bnQgPSAwO1xuICAgICAgICBsZXQgcmV0cmlldmVkRG9jdW1lbnRTaXplID0gMDtcbiAgICAgICAgbGV0IG91dHB1dERvY3VtZW50Q291bnQgPSAwO1xuICAgICAgICBsZXQgb3V0cHV0RG9jdW1lbnRTaXplID0gMDtcbiAgICAgICAgbGV0IGluZGV4SGl0RG9jdW1lbnRDb3VudCA9IDA7XG4gICAgICAgIGxldCB0b3RhbFF1ZXJ5RXhlY3V0aW9uVGltZSA9IHRpbWVTcGFuXzEuVGltZVNwYW4uemVybztcbiAgICAgICAgY29uc3QgcXVlcnlQcmVwYXJhdGlvblRpbWVzQXJyYXkgPSBbXTtcbiAgICAgICAgbGV0IGluZGV4TG9va3VwVGltZSA9IHRpbWVTcGFuXzEuVGltZVNwYW4uemVybztcbiAgICAgICAgbGV0IGRvY3VtZW50TG9hZFRpbWUgPSB0aW1lU3Bhbl8xLlRpbWVTcGFuLnplcm87XG4gICAgICAgIGxldCB2bUV4ZWN1dGlvblRpbWUgPSB0aW1lU3Bhbl8xLlRpbWVTcGFuLnplcm87XG4gICAgICAgIGNvbnN0IHJ1bnRpbWVFeGVjdXRpb25UaW1lc0FycmF5ID0gW107XG4gICAgICAgIGxldCBkb2N1bWVudFdyaXRlVGltZSA9IHRpbWVTcGFuXzEuVGltZVNwYW4uemVybztcbiAgICAgICAgY29uc3QgY2xpZW50U2lkZVF1ZXJ5TWV0cmljc0FycmF5ID0gW107XG4gICAgICAgIHF1ZXJ5TWV0cmljc0FycmF5LnB1c2godGhpcyk7XG4gICAgICAgIGZvciAoY29uc3QgcXVlcnlNZXRyaWNzIG9mIHF1ZXJ5TWV0cmljc0FycmF5KSB7XG4gICAgICAgICAgICBpZiAocXVlcnlNZXRyaWNzID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJxdWVyeU1ldHJpY3NBcnJheSBoYXMgbnVsbCBvciB1bmRlZmluZWQgaXRlbShzKVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHJpZXZlZERvY3VtZW50Q291bnQgKz0gcXVlcnlNZXRyaWNzLnJldHJpZXZlZERvY3VtZW50Q291bnQ7XG4gICAgICAgICAgICByZXRyaWV2ZWREb2N1bWVudFNpemUgKz0gcXVlcnlNZXRyaWNzLnJldHJpZXZlZERvY3VtZW50U2l6ZTtcbiAgICAgICAgICAgIG91dHB1dERvY3VtZW50Q291bnQgKz0gcXVlcnlNZXRyaWNzLm91dHB1dERvY3VtZW50Q291bnQ7XG4gICAgICAgICAgICBvdXRwdXREb2N1bWVudFNpemUgKz0gcXVlcnlNZXRyaWNzLm91dHB1dERvY3VtZW50U2l6ZTtcbiAgICAgICAgICAgIGluZGV4SGl0RG9jdW1lbnRDb3VudCArPSBxdWVyeU1ldHJpY3MuaW5kZXhIaXREb2N1bWVudENvdW50O1xuICAgICAgICAgICAgdG90YWxRdWVyeUV4ZWN1dGlvblRpbWUgPSB0b3RhbFF1ZXJ5RXhlY3V0aW9uVGltZS5hZGQocXVlcnlNZXRyaWNzLnRvdGFsUXVlcnlFeGVjdXRpb25UaW1lKTtcbiAgICAgICAgICAgIHF1ZXJ5UHJlcGFyYXRpb25UaW1lc0FycmF5LnB1c2gocXVlcnlNZXRyaWNzLnF1ZXJ5UHJlcGFyYXRpb25UaW1lcyk7XG4gICAgICAgICAgICBpbmRleExvb2t1cFRpbWUgPSBpbmRleExvb2t1cFRpbWUuYWRkKHF1ZXJ5TWV0cmljcy5pbmRleExvb2t1cFRpbWUpO1xuICAgICAgICAgICAgZG9jdW1lbnRMb2FkVGltZSA9IGRvY3VtZW50TG9hZFRpbWUuYWRkKHF1ZXJ5TWV0cmljcy5kb2N1bWVudExvYWRUaW1lKTtcbiAgICAgICAgICAgIHZtRXhlY3V0aW9uVGltZSA9IHZtRXhlY3V0aW9uVGltZS5hZGQocXVlcnlNZXRyaWNzLnZtRXhlY3V0aW9uVGltZSk7XG4gICAgICAgICAgICBydW50aW1lRXhlY3V0aW9uVGltZXNBcnJheS5wdXNoKHF1ZXJ5TWV0cmljcy5ydW50aW1lRXhlY3V0aW9uVGltZXMpO1xuICAgICAgICAgICAgZG9jdW1lbnRXcml0ZVRpbWUgPSBkb2N1bWVudFdyaXRlVGltZS5hZGQocXVlcnlNZXRyaWNzLmRvY3VtZW50V3JpdGVUaW1lKTtcbiAgICAgICAgICAgIGNsaWVudFNpZGVRdWVyeU1ldHJpY3NBcnJheS5wdXNoKHF1ZXJ5TWV0cmljcy5jbGllbnRTaWRlTWV0cmljcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBRdWVyeU1ldHJpY3MocmV0cmlldmVkRG9jdW1lbnRDb3VudCwgcmV0cmlldmVkRG9jdW1lbnRTaXplLCBvdXRwdXREb2N1bWVudENvdW50LCBvdXRwdXREb2N1bWVudFNpemUsIGluZGV4SGl0RG9jdW1lbnRDb3VudCwgdG90YWxRdWVyeUV4ZWN1dGlvblRpbWUsIHF1ZXJ5UHJlcGFyYXRpb25UaW1lXzEuUXVlcnlQcmVwYXJhdGlvblRpbWVzLmNyZWF0ZUZyb21BcnJheShxdWVyeVByZXBhcmF0aW9uVGltZXNBcnJheSksIGluZGV4TG9va3VwVGltZSwgZG9jdW1lbnRMb2FkVGltZSwgdm1FeGVjdXRpb25UaW1lLCBydW50aW1lRXhlY3V0aW9uVGltZXNfMS5SdW50aW1lRXhlY3V0aW9uVGltZXMuY3JlYXRlRnJvbUFycmF5KHJ1bnRpbWVFeGVjdXRpb25UaW1lc0FycmF5KSwgZG9jdW1lbnRXcml0ZVRpbWUsIGNsaWVudFNpZGVNZXRyaWNzXzEuQ2xpZW50U2lkZU1ldHJpY3MuY3JlYXRlRnJvbUFycmF5KC4uLmNsaWVudFNpZGVRdWVyeU1ldHJpY3NBcnJheSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBPdXRwdXQgdGhlIFF1ZXJ5TWV0cmljcyBhcyBhIGRlbGltaXRlZCBzdHJpbmcuXG4gICAgICogQG1lbWJlcm9mIFF1ZXJ5TWV0cmljc1xuICAgICAqIEBpbnN0YW5jZVxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICB0b0RlbGltaXRlZFN0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIChxdWVyeU1ldHJpY3NDb25zdGFudHNfMS5kZWZhdWx0LlJldHJpZXZlZERvY3VtZW50Q291bnQgK1xuICAgICAgICAgICAgXCI9XCIgK1xuICAgICAgICAgICAgdGhpcy5yZXRyaWV2ZWREb2N1bWVudENvdW50ICtcbiAgICAgICAgICAgIFwiO1wiICtcbiAgICAgICAgICAgIHF1ZXJ5TWV0cmljc0NvbnN0YW50c18xLmRlZmF1bHQuUmV0cmlldmVkRG9jdW1lbnRTaXplICtcbiAgICAgICAgICAgIFwiPVwiICtcbiAgICAgICAgICAgIHRoaXMucmV0cmlldmVkRG9jdW1lbnRTaXplICtcbiAgICAgICAgICAgIFwiO1wiICtcbiAgICAgICAgICAgIHF1ZXJ5TWV0cmljc0NvbnN0YW50c18xLmRlZmF1bHQuT3V0cHV0RG9jdW1lbnRDb3VudCArXG4gICAgICAgICAgICBcIj1cIiArXG4gICAgICAgICAgICB0aGlzLm91dHB1dERvY3VtZW50Q291bnQgK1xuICAgICAgICAgICAgXCI7XCIgK1xuICAgICAgICAgICAgcXVlcnlNZXRyaWNzQ29uc3RhbnRzXzEuZGVmYXVsdC5PdXRwdXREb2N1bWVudFNpemUgK1xuICAgICAgICAgICAgXCI9XCIgK1xuICAgICAgICAgICAgdGhpcy5vdXRwdXREb2N1bWVudFNpemUgK1xuICAgICAgICAgICAgXCI7XCIgK1xuICAgICAgICAgICAgcXVlcnlNZXRyaWNzQ29uc3RhbnRzXzEuZGVmYXVsdC5JbmRleEhpdFJhdGlvICtcbiAgICAgICAgICAgIFwiPVwiICtcbiAgICAgICAgICAgIHRoaXMuaW5kZXhIaXRSYXRpbyArXG4gICAgICAgICAgICBcIjtcIiArXG4gICAgICAgICAgICBxdWVyeU1ldHJpY3NDb25zdGFudHNfMS5kZWZhdWx0LlRvdGFsUXVlcnlFeGVjdXRpb25UaW1lSW5NcyArXG4gICAgICAgICAgICBcIj1cIiArXG4gICAgICAgICAgICB0aGlzLnRvdGFsUXVlcnlFeGVjdXRpb25UaW1lLnRvdGFsTWlsbGlzZWNvbmRzKCkgK1xuICAgICAgICAgICAgXCI7XCIgK1xuICAgICAgICAgICAgdGhpcy5xdWVyeVByZXBhcmF0aW9uVGltZXMudG9EZWxpbWl0ZWRTdHJpbmcoKSArXG4gICAgICAgICAgICBcIjtcIiArXG4gICAgICAgICAgICBxdWVyeU1ldHJpY3NDb25zdGFudHNfMS5kZWZhdWx0LkluZGV4TG9va3VwVGltZUluTXMgK1xuICAgICAgICAgICAgXCI9XCIgK1xuICAgICAgICAgICAgdGhpcy5pbmRleExvb2t1cFRpbWUudG90YWxNaWxsaXNlY29uZHMoKSArXG4gICAgICAgICAgICBcIjtcIiArXG4gICAgICAgICAgICBxdWVyeU1ldHJpY3NDb25zdGFudHNfMS5kZWZhdWx0LkRvY3VtZW50TG9hZFRpbWVJbk1zICtcbiAgICAgICAgICAgIFwiPVwiICtcbiAgICAgICAgICAgIHRoaXMuZG9jdW1lbnRMb2FkVGltZS50b3RhbE1pbGxpc2Vjb25kcygpICtcbiAgICAgICAgICAgIFwiO1wiICtcbiAgICAgICAgICAgIHF1ZXJ5TWV0cmljc0NvbnN0YW50c18xLmRlZmF1bHQuVk1FeGVjdXRpb25UaW1lSW5NcyArXG4gICAgICAgICAgICBcIj1cIiArXG4gICAgICAgICAgICB0aGlzLnZtRXhlY3V0aW9uVGltZS50b3RhbE1pbGxpc2Vjb25kcygpICtcbiAgICAgICAgICAgIFwiO1wiICtcbiAgICAgICAgICAgIHRoaXMucnVudGltZUV4ZWN1dGlvblRpbWVzLnRvRGVsaW1pdGVkU3RyaW5nKCkgK1xuICAgICAgICAgICAgXCI7XCIgK1xuICAgICAgICAgICAgcXVlcnlNZXRyaWNzQ29uc3RhbnRzXzEuZGVmYXVsdC5Eb2N1bWVudFdyaXRlVGltZUluTXMgK1xuICAgICAgICAgICAgXCI9XCIgK1xuICAgICAgICAgICAgdGhpcy5kb2N1bWVudFdyaXRlVGltZS50b3RhbE1pbGxpc2Vjb25kcygpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgUXVlcnlNZXRyaWNzIGNsYXNzIHRoYXQgaXMgdGhlIGFnZ3JlZ2F0aW9uIG9mIGFuIGFycmF5IG9mIHF1ZXJ5IG1ldHJpY3MuXG4gICAgICogQG1lbWJlcm9mIFF1ZXJ5TWV0cmljc1xuICAgICAqIEBpbnN0YW5jZVxuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVGcm9tQXJyYXkocXVlcnlNZXRyaWNzQXJyYXkpIHtcbiAgICAgICAgaWYgKHF1ZXJ5TWV0cmljc0FycmF5ID09IG51bGwpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInF1ZXJ5TWV0cmljc0FycmF5IGlzIG51bGwgb3IgdW5kZWZpbmVkIGl0ZW0ocylcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFF1ZXJ5TWV0cmljcy56ZXJvLmFkZChxdWVyeU1ldHJpY3NBcnJheSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBuZXcgaW5zdGFuY2Ugb2YgdGhlIFF1ZXJ5TWV0cmljcyBjbGFzcyB0aGlzIGlzIGRlc2VyaWFsaXplZCBmcm9tIGEgZGVsaW1pdGVkIHN0cmluZy5cbiAgICAgKiBAbWVtYmVyb2YgUXVlcnlNZXRyaWNzXG4gICAgICogQGluc3RhbmNlXG4gICAgICovXG4gICAgc3RhdGljIGNyZWF0ZUZyb21EZWxpbWl0ZWRTdHJpbmcoZGVsaW1pdGVkU3RyaW5nLCBjbGllbnRTaWRlTWV0cmljcykge1xuICAgICAgICBjb25zdCBtZXRyaWNzID0gcXVlcnlNZXRyaWNzVXRpbHNfMS5RdWVyeU1ldHJpY3NVdGlscy5wYXJzZURlbGltaXRlZFN0cmluZyhkZWxpbWl0ZWRTdHJpbmcpO1xuICAgICAgICBjb25zdCBpbmRleEhpdFJhdGlvID0gbWV0cmljc1txdWVyeU1ldHJpY3NDb25zdGFudHNfMS5kZWZhdWx0LkluZGV4SGl0UmF0aW9dIHx8IDA7XG4gICAgICAgIGNvbnN0IHJldHJpZXZlZERvY3VtZW50Q291bnQgPSBtZXRyaWNzW3F1ZXJ5TWV0cmljc0NvbnN0YW50c18xLmRlZmF1bHQuUmV0cmlldmVkRG9jdW1lbnRDb3VudF0gfHwgMDtcbiAgICAgICAgY29uc3QgaW5kZXhIaXRDb3VudCA9IGluZGV4SGl0UmF0aW8gKiByZXRyaWV2ZWREb2N1bWVudENvdW50O1xuICAgICAgICBjb25zdCBvdXRwdXREb2N1bWVudENvdW50ID0gbWV0cmljc1txdWVyeU1ldHJpY3NDb25zdGFudHNfMS5kZWZhdWx0Lk91dHB1dERvY3VtZW50Q291bnRdIHx8IDA7XG4gICAgICAgIGNvbnN0IG91dHB1dERvY3VtZW50U2l6ZSA9IG1ldHJpY3NbcXVlcnlNZXRyaWNzQ29uc3RhbnRzXzEuZGVmYXVsdC5PdXRwdXREb2N1bWVudFNpemVdIHx8IDA7XG4gICAgICAgIGNvbnN0IHJldHJpZXZlZERvY3VtZW50U2l6ZSA9IG1ldHJpY3NbcXVlcnlNZXRyaWNzQ29uc3RhbnRzXzEuZGVmYXVsdC5SZXRyaWV2ZWREb2N1bWVudFNpemVdIHx8IDA7XG4gICAgICAgIGNvbnN0IHRvdGFsUXVlcnlFeGVjdXRpb25UaW1lID0gcXVlcnlNZXRyaWNzVXRpbHNfMS5RdWVyeU1ldHJpY3NVdGlscy50aW1lU3BhbkZyb21NZXRyaWNzKG1ldHJpY3MsIHF1ZXJ5TWV0cmljc0NvbnN0YW50c18xLmRlZmF1bHQuVG90YWxRdWVyeUV4ZWN1dGlvblRpbWVJbk1zKTtcbiAgICAgICAgcmV0dXJuIG5ldyBRdWVyeU1ldHJpY3MocmV0cmlldmVkRG9jdW1lbnRDb3VudCwgcmV0cmlldmVkRG9jdW1lbnRTaXplLCBvdXRwdXREb2N1bWVudENvdW50LCBvdXRwdXREb2N1bWVudFNpemUsIGluZGV4SGl0Q291bnQsIHRvdGFsUXVlcnlFeGVjdXRpb25UaW1lLCBxdWVyeVByZXBhcmF0aW9uVGltZV8xLlF1ZXJ5UHJlcGFyYXRpb25UaW1lcy5jcmVhdGVGcm9tRGVsaW1pdGVkU3RyaW5nKGRlbGltaXRlZFN0cmluZyksIHF1ZXJ5TWV0cmljc1V0aWxzXzEuUXVlcnlNZXRyaWNzVXRpbHMudGltZVNwYW5Gcm9tTWV0cmljcyhtZXRyaWNzLCBxdWVyeU1ldHJpY3NDb25zdGFudHNfMS5kZWZhdWx0LkluZGV4TG9va3VwVGltZUluTXMpLCBxdWVyeU1ldHJpY3NVdGlsc18xLlF1ZXJ5TWV0cmljc1V0aWxzLnRpbWVTcGFuRnJvbU1ldHJpY3MobWV0cmljcywgcXVlcnlNZXRyaWNzQ29uc3RhbnRzXzEuZGVmYXVsdC5Eb2N1bWVudExvYWRUaW1lSW5NcyksIHF1ZXJ5TWV0cmljc1V0aWxzXzEuUXVlcnlNZXRyaWNzVXRpbHMudGltZVNwYW5Gcm9tTWV0cmljcyhtZXRyaWNzLCBxdWVyeU1ldHJpY3NDb25zdGFudHNfMS5kZWZhdWx0LlZNRXhlY3V0aW9uVGltZUluTXMpLCBydW50aW1lRXhlY3V0aW9uVGltZXNfMS5SdW50aW1lRXhlY3V0aW9uVGltZXMuY3JlYXRlRnJvbURlbGltaXRlZFN0cmluZyhkZWxpbWl0ZWRTdHJpbmcpLCBxdWVyeU1ldHJpY3NVdGlsc18xLlF1ZXJ5TWV0cmljc1V0aWxzLnRpbWVTcGFuRnJvbU1ldHJpY3MobWV0cmljcywgcXVlcnlNZXRyaWNzQ29uc3RhbnRzXzEuZGVmYXVsdC5Eb2N1bWVudFdyaXRlVGltZUluTXMpLCBjbGllbnRTaWRlTWV0cmljcyB8fCBjbGllbnRTaWRlTWV0cmljc18xLkNsaWVudFNpZGVNZXRyaWNzLnplcm8pO1xuICAgIH1cbn1cblF1ZXJ5TWV0cmljcy56ZXJvID0gbmV3IFF1ZXJ5TWV0cmljcygwLCAwLCAwLCAwLCAwLCB0aW1lU3Bhbl8xLlRpbWVTcGFuLnplcm8sIHF1ZXJ5UHJlcGFyYXRpb25UaW1lXzEuUXVlcnlQcmVwYXJhdGlvblRpbWVzLnplcm8sIHRpbWVTcGFuXzEuVGltZVNwYW4uemVybywgdGltZVNwYW5fMS5UaW1lU3Bhbi56ZXJvLCB0aW1lU3Bhbl8xLlRpbWVTcGFuLnplcm8sIHJ1bnRpbWVFeGVjdXRpb25UaW1lc18xLlJ1bnRpbWVFeGVjdXRpb25UaW1lcy56ZXJvLCB0aW1lU3Bhbl8xLlRpbWVTcGFuLnplcm8sIGNsaWVudFNpZGVNZXRyaWNzXzEuQ2xpZW50U2lkZU1ldHJpY3MuemVybyk7XG5leHBvcnRzLlF1ZXJ5TWV0cmljcyA9IFF1ZXJ5TWV0cmljcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXF1ZXJ5TWV0cmljcy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/queryMetrics/queryMetrics.js\n");

/***/ }),

/***/ "./lib/queryMetrics/queryMetricsConstants.js":
/*!***************************************************!*\
  !*** ./lib/queryMetrics/queryMetricsConstants.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    // QueryMetrics\n    RetrievedDocumentCount: \"retrievedDocumentCount\",\n    RetrievedDocumentSize: \"retrievedDocumentSize\",\n    OutputDocumentCount: \"outputDocumentCount\",\n    OutputDocumentSize: \"outputDocumentSize\",\n    IndexHitRatio: \"indexUtilizationRatio\",\n    IndexHitDocumentCount: \"indexHitDocumentCount\",\n    TotalQueryExecutionTimeInMs: \"totalExecutionTimeInMs\",\n    // QueryPreparationTimes\n    QueryCompileTimeInMs: \"queryCompileTimeInMs\",\n    LogicalPlanBuildTimeInMs: \"queryLogicalPlanBuildTimeInMs\",\n    PhysicalPlanBuildTimeInMs: \"queryPhysicalPlanBuildTimeInMs\",\n    QueryOptimizationTimeInMs: \"queryOptimizationTimeInMs\",\n    // QueryTimes\n    IndexLookupTimeInMs: \"indexLookupTimeInMs\",\n    DocumentLoadTimeInMs: \"documentLoadTimeInMs\",\n    VMExecutionTimeInMs: \"VMExecutionTimeInMs\",\n    DocumentWriteTimeInMs: \"writeOutputTimeInMs\",\n    // RuntimeExecutionTimes\n    QueryEngineTimes: \"queryEngineTimes\",\n    SystemFunctionExecuteTimeInMs: \"systemFunctionExecuteTimeInMs\",\n    UserDefinedFunctionExecutionTimeInMs: \"userFunctionExecuteTimeInMs\",\n    // QueryMetrics Text\n    RetrievedDocumentCountText: \"Retrieved Document Count\",\n    RetrievedDocumentSizeText: \"Retrieved Document Size\",\n    OutputDocumentCountText: \"Output Document Count\",\n    OutputDocumentSizeText: \"Output Document Size\",\n    IndexUtilizationText: \"Index Utilization\",\n    TotalQueryExecutionTimeText: \"Total Query Execution Time\",\n    // QueryPreparationTimes Text\n    QueryPreparationTimesText: \"Query Preparation Times\",\n    QueryCompileTimeText: \"Query Compilation Time\",\n    LogicalPlanBuildTimeText: \"Logical Plan Build Time\",\n    PhysicalPlanBuildTimeText: \"Physical Plan Build Time\",\n    QueryOptimizationTimeText: \"Query Optimization Time\",\n    // QueryTimes Text\n    QueryEngineTimesText: \"Query Engine Times\",\n    IndexLookupTimeText: \"Index Lookup Time\",\n    DocumentLoadTimeText: \"Document Load Time\",\n    WriteOutputTimeText: \"Document Write Time\",\n    // RuntimeExecutionTimes Text\n    RuntimeExecutionTimesText: \"Runtime Execution Times\",\n    TotalExecutionTimeText: \"Query Engine Execution Time\",\n    SystemFunctionExecuteTimeText: \"System Function Execution Time\",\n    UserDefinedFunctionExecutionTimeText: \"User-defined Function Execution Time\",\n    // ClientSideQueryMetrics Text\n    ClientSideQueryMetricsText: \"Client Side Metrics\",\n    RetriesText: \"Retry Count\",\n    RequestChargeText: \"Request Charge\",\n    FetchExecutionRangesText: \"Partition Execution Timeline\",\n    SchedulingMetricsText: \"Scheduling Metrics\"\n};\n//# sourceMappingURL=queryMetricsConstants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlNZXRyaWNzL3F1ZXJ5TWV0cmljc0NvbnN0YW50cy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9xdWVyeU1ldHJpY3MvcXVlcnlNZXRyaWNzQ29uc3RhbnRzLmpzPzY0M2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gICAgLy8gUXVlcnlNZXRyaWNzXG4gICAgUmV0cmlldmVkRG9jdW1lbnRDb3VudDogXCJyZXRyaWV2ZWREb2N1bWVudENvdW50XCIsXG4gICAgUmV0cmlldmVkRG9jdW1lbnRTaXplOiBcInJldHJpZXZlZERvY3VtZW50U2l6ZVwiLFxuICAgIE91dHB1dERvY3VtZW50Q291bnQ6IFwib3V0cHV0RG9jdW1lbnRDb3VudFwiLFxuICAgIE91dHB1dERvY3VtZW50U2l6ZTogXCJvdXRwdXREb2N1bWVudFNpemVcIixcbiAgICBJbmRleEhpdFJhdGlvOiBcImluZGV4VXRpbGl6YXRpb25SYXRpb1wiLFxuICAgIEluZGV4SGl0RG9jdW1lbnRDb3VudDogXCJpbmRleEhpdERvY3VtZW50Q291bnRcIixcbiAgICBUb3RhbFF1ZXJ5RXhlY3V0aW9uVGltZUluTXM6IFwidG90YWxFeGVjdXRpb25UaW1lSW5Nc1wiLFxuICAgIC8vIFF1ZXJ5UHJlcGFyYXRpb25UaW1lc1xuICAgIFF1ZXJ5Q29tcGlsZVRpbWVJbk1zOiBcInF1ZXJ5Q29tcGlsZVRpbWVJbk1zXCIsXG4gICAgTG9naWNhbFBsYW5CdWlsZFRpbWVJbk1zOiBcInF1ZXJ5TG9naWNhbFBsYW5CdWlsZFRpbWVJbk1zXCIsXG4gICAgUGh5c2ljYWxQbGFuQnVpbGRUaW1lSW5NczogXCJxdWVyeVBoeXNpY2FsUGxhbkJ1aWxkVGltZUluTXNcIixcbiAgICBRdWVyeU9wdGltaXphdGlvblRpbWVJbk1zOiBcInF1ZXJ5T3B0aW1pemF0aW9uVGltZUluTXNcIixcbiAgICAvLyBRdWVyeVRpbWVzXG4gICAgSW5kZXhMb29rdXBUaW1lSW5NczogXCJpbmRleExvb2t1cFRpbWVJbk1zXCIsXG4gICAgRG9jdW1lbnRMb2FkVGltZUluTXM6IFwiZG9jdW1lbnRMb2FkVGltZUluTXNcIixcbiAgICBWTUV4ZWN1dGlvblRpbWVJbk1zOiBcIlZNRXhlY3V0aW9uVGltZUluTXNcIixcbiAgICBEb2N1bWVudFdyaXRlVGltZUluTXM6IFwid3JpdGVPdXRwdXRUaW1lSW5Nc1wiLFxuICAgIC8vIFJ1bnRpbWVFeGVjdXRpb25UaW1lc1xuICAgIFF1ZXJ5RW5naW5lVGltZXM6IFwicXVlcnlFbmdpbmVUaW1lc1wiLFxuICAgIFN5c3RlbUZ1bmN0aW9uRXhlY3V0ZVRpbWVJbk1zOiBcInN5c3RlbUZ1bmN0aW9uRXhlY3V0ZVRpbWVJbk1zXCIsXG4gICAgVXNlckRlZmluZWRGdW5jdGlvbkV4ZWN1dGlvblRpbWVJbk1zOiBcInVzZXJGdW5jdGlvbkV4ZWN1dGVUaW1lSW5Nc1wiLFxuICAgIC8vIFF1ZXJ5TWV0cmljcyBUZXh0XG4gICAgUmV0cmlldmVkRG9jdW1lbnRDb3VudFRleHQ6IFwiUmV0cmlldmVkIERvY3VtZW50IENvdW50XCIsXG4gICAgUmV0cmlldmVkRG9jdW1lbnRTaXplVGV4dDogXCJSZXRyaWV2ZWQgRG9jdW1lbnQgU2l6ZVwiLFxuICAgIE91dHB1dERvY3VtZW50Q291bnRUZXh0OiBcIk91dHB1dCBEb2N1bWVudCBDb3VudFwiLFxuICAgIE91dHB1dERvY3VtZW50U2l6ZVRleHQ6IFwiT3V0cHV0IERvY3VtZW50IFNpemVcIixcbiAgICBJbmRleFV0aWxpemF0aW9uVGV4dDogXCJJbmRleCBVdGlsaXphdGlvblwiLFxuICAgIFRvdGFsUXVlcnlFeGVjdXRpb25UaW1lVGV4dDogXCJUb3RhbCBRdWVyeSBFeGVjdXRpb24gVGltZVwiLFxuICAgIC8vIFF1ZXJ5UHJlcGFyYXRpb25UaW1lcyBUZXh0XG4gICAgUXVlcnlQcmVwYXJhdGlvblRpbWVzVGV4dDogXCJRdWVyeSBQcmVwYXJhdGlvbiBUaW1lc1wiLFxuICAgIFF1ZXJ5Q29tcGlsZVRpbWVUZXh0OiBcIlF1ZXJ5IENvbXBpbGF0aW9uIFRpbWVcIixcbiAgICBMb2dpY2FsUGxhbkJ1aWxkVGltZVRleHQ6IFwiTG9naWNhbCBQbGFuIEJ1aWxkIFRpbWVcIixcbiAgICBQaHlzaWNhbFBsYW5CdWlsZFRpbWVUZXh0OiBcIlBoeXNpY2FsIFBsYW4gQnVpbGQgVGltZVwiLFxuICAgIFF1ZXJ5T3B0aW1pemF0aW9uVGltZVRleHQ6IFwiUXVlcnkgT3B0aW1pemF0aW9uIFRpbWVcIixcbiAgICAvLyBRdWVyeVRpbWVzIFRleHRcbiAgICBRdWVyeUVuZ2luZVRpbWVzVGV4dDogXCJRdWVyeSBFbmdpbmUgVGltZXNcIixcbiAgICBJbmRleExvb2t1cFRpbWVUZXh0OiBcIkluZGV4IExvb2t1cCBUaW1lXCIsXG4gICAgRG9jdW1lbnRMb2FkVGltZVRleHQ6IFwiRG9jdW1lbnQgTG9hZCBUaW1lXCIsXG4gICAgV3JpdGVPdXRwdXRUaW1lVGV4dDogXCJEb2N1bWVudCBXcml0ZSBUaW1lXCIsXG4gICAgLy8gUnVudGltZUV4ZWN1dGlvblRpbWVzIFRleHRcbiAgICBSdW50aW1lRXhlY3V0aW9uVGltZXNUZXh0OiBcIlJ1bnRpbWUgRXhlY3V0aW9uIFRpbWVzXCIsXG4gICAgVG90YWxFeGVjdXRpb25UaW1lVGV4dDogXCJRdWVyeSBFbmdpbmUgRXhlY3V0aW9uIFRpbWVcIixcbiAgICBTeXN0ZW1GdW5jdGlvbkV4ZWN1dGVUaW1lVGV4dDogXCJTeXN0ZW0gRnVuY3Rpb24gRXhlY3V0aW9uIFRpbWVcIixcbiAgICBVc2VyRGVmaW5lZEZ1bmN0aW9uRXhlY3V0aW9uVGltZVRleHQ6IFwiVXNlci1kZWZpbmVkIEZ1bmN0aW9uIEV4ZWN1dGlvbiBUaW1lXCIsXG4gICAgLy8gQ2xpZW50U2lkZVF1ZXJ5TWV0cmljcyBUZXh0XG4gICAgQ2xpZW50U2lkZVF1ZXJ5TWV0cmljc1RleHQ6IFwiQ2xpZW50IFNpZGUgTWV0cmljc1wiLFxuICAgIFJldHJpZXNUZXh0OiBcIlJldHJ5IENvdW50XCIsXG4gICAgUmVxdWVzdENoYXJnZVRleHQ6IFwiUmVxdWVzdCBDaGFyZ2VcIixcbiAgICBGZXRjaEV4ZWN1dGlvblJhbmdlc1RleHQ6IFwiUGFydGl0aW9uIEV4ZWN1dGlvbiBUaW1lbGluZVwiLFxuICAgIFNjaGVkdWxpbmdNZXRyaWNzVGV4dDogXCJTY2hlZHVsaW5nIE1ldHJpY3NcIlxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXF1ZXJ5TWV0cmljc0NvbnN0YW50cy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/queryMetrics/queryMetricsConstants.js\n");

/***/ }),

/***/ "./lib/queryMetrics/queryMetricsUtils.js":
/*!***********************************************!*\
  !*** ./lib/queryMetrics/queryMetricsUtils.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst timeSpan_1 = __webpack_require__(/*! ./timeSpan */ \"./lib/queryMetrics/timeSpan.js\");\nclass QueryMetricsUtils {\n    static parseDelimitedString(delimitedString) {\n        if (delimitedString == null) {\n            throw new Error(\"delimitedString is null or undefined\");\n        }\n        const metrics = {};\n        const headerAttributes = delimitedString.split(\";\");\n        for (const attribute of headerAttributes) {\n            const attributeKeyValue = attribute.split(\"=\");\n            if (attributeKeyValue.length !== 2) {\n                throw new Error(\"recieved a malformed delimited string\");\n            }\n            const attributeKey = attributeKeyValue[0];\n            const attributeValue = parseFloat(attributeKeyValue[1]);\n            metrics[attributeKey] = attributeValue;\n        }\n        return metrics;\n    }\n    static timeSpanFromMetrics(metrics /* TODO: any */, key) {\n        if (key in metrics) {\n            return timeSpan_1.TimeSpan.fromMilliseconds(metrics[key]);\n        }\n        return timeSpan_1.TimeSpan.zero;\n    }\n    static isNumeric(input) {\n        return !isNaN(parseFloat(input)) && isFinite(input);\n    }\n}\nexports.QueryMetricsUtils = QueryMetricsUtils;\n//# sourceMappingURL=queryMetricsUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlNZXRyaWNzL3F1ZXJ5TWV0cmljc1V0aWxzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3F1ZXJ5TWV0cmljcy9xdWVyeU1ldHJpY3NVdGlscy5qcz9jZTMxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdGltZVNwYW5fMSA9IHJlcXVpcmUoXCIuL3RpbWVTcGFuXCIpO1xuY2xhc3MgUXVlcnlNZXRyaWNzVXRpbHMge1xuICAgIHN0YXRpYyBwYXJzZURlbGltaXRlZFN0cmluZyhkZWxpbWl0ZWRTdHJpbmcpIHtcbiAgICAgICAgaWYgKGRlbGltaXRlZFN0cmluZyA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJkZWxpbWl0ZWRTdHJpbmcgaXMgbnVsbCBvciB1bmRlZmluZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbWV0cmljcyA9IHt9O1xuICAgICAgICBjb25zdCBoZWFkZXJBdHRyaWJ1dGVzID0gZGVsaW1pdGVkU3RyaW5nLnNwbGl0KFwiO1wiKTtcbiAgICAgICAgZm9yIChjb25zdCBhdHRyaWJ1dGUgb2YgaGVhZGVyQXR0cmlidXRlcykge1xuICAgICAgICAgICAgY29uc3QgYXR0cmlidXRlS2V5VmFsdWUgPSBhdHRyaWJ1dGUuc3BsaXQoXCI9XCIpO1xuICAgICAgICAgICAgaWYgKGF0dHJpYnV0ZUtleVZhbHVlLmxlbmd0aCAhPT0gMikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInJlY2lldmVkIGEgbWFsZm9ybWVkIGRlbGltaXRlZCBzdHJpbmdcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBhdHRyaWJ1dGVLZXkgPSBhdHRyaWJ1dGVLZXlWYWx1ZVswXTtcbiAgICAgICAgICAgIGNvbnN0IGF0dHJpYnV0ZVZhbHVlID0gcGFyc2VGbG9hdChhdHRyaWJ1dGVLZXlWYWx1ZVsxXSk7XG4gICAgICAgICAgICBtZXRyaWNzW2F0dHJpYnV0ZUtleV0gPSBhdHRyaWJ1dGVWYWx1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWV0cmljcztcbiAgICB9XG4gICAgc3RhdGljIHRpbWVTcGFuRnJvbU1ldHJpY3MobWV0cmljcyAvKiBUT0RPOiBhbnkgKi8sIGtleSkge1xuICAgICAgICBpZiAoa2V5IGluIG1ldHJpY3MpIHtcbiAgICAgICAgICAgIHJldHVybiB0aW1lU3Bhbl8xLlRpbWVTcGFuLmZyb21NaWxsaXNlY29uZHMobWV0cmljc1trZXldKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGltZVNwYW5fMS5UaW1lU3Bhbi56ZXJvO1xuICAgIH1cbiAgICBzdGF0aWMgaXNOdW1lcmljKGlucHV0KSB7XG4gICAgICAgIHJldHVybiAhaXNOYU4ocGFyc2VGbG9hdChpbnB1dCkpICYmIGlzRmluaXRlKGlucHV0KTtcbiAgICB9XG59XG5leHBvcnRzLlF1ZXJ5TWV0cmljc1V0aWxzID0gUXVlcnlNZXRyaWNzVXRpbHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeU1ldHJpY3NVdGlscy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/queryMetrics/queryMetricsUtils.js\n");

/***/ }),

/***/ "./lib/queryMetrics/queryPreparationTime.js":
/*!**************************************************!*\
  !*** ./lib/queryMetrics/queryPreparationTime.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst queryMetricsConstants_1 = tslib_1.__importDefault(__webpack_require__(/*! ./queryMetricsConstants */ \"./lib/queryMetrics/queryMetricsConstants.js\"));\nconst queryMetricsUtils_1 = __webpack_require__(/*! ./queryMetricsUtils */ \"./lib/queryMetrics/queryMetricsUtils.js\");\nconst timeSpan_1 = __webpack_require__(/*! ./timeSpan */ \"./lib/queryMetrics/timeSpan.js\");\nclass QueryPreparationTimes {\n    constructor(queryCompilationTime, logicalPlanBuildTime, physicalPlanBuildTime, queryOptimizationTime) {\n        this.queryCompilationTime = queryCompilationTime;\n        this.logicalPlanBuildTime = logicalPlanBuildTime;\n        this.physicalPlanBuildTime = physicalPlanBuildTime;\n        this.queryOptimizationTime = queryOptimizationTime;\n    }\n    /**\n     * returns a new QueryPreparationTimes instance that is the addition of this and the arguments.\n     */\n    add(...queryPreparationTimesArray) {\n        if (arguments == null || arguments.length === 0) {\n            throw new Error(\"arguments was null or empty\");\n        }\n        let queryCompilationTime = this.queryCompilationTime;\n        let logicalPlanBuildTime = this.logicalPlanBuildTime;\n        let physicalPlanBuildTime = this.physicalPlanBuildTime;\n        let queryOptimizationTime = this.queryOptimizationTime;\n        for (const queryPreparationTimes of queryPreparationTimesArray) {\n            if (queryPreparationTimes == null) {\n                throw new Error(\"queryPreparationTimesArray has null or undefined item(s)\");\n            }\n            queryCompilationTime = queryCompilationTime.add(queryPreparationTimes.queryCompilationTime);\n            logicalPlanBuildTime = logicalPlanBuildTime.add(queryPreparationTimes.logicalPlanBuildTime);\n            physicalPlanBuildTime = physicalPlanBuildTime.add(queryPreparationTimes.physicalPlanBuildTime);\n            queryOptimizationTime = queryOptimizationTime.add(queryPreparationTimes.queryOptimizationTime);\n        }\n        return new QueryPreparationTimes(queryCompilationTime, logicalPlanBuildTime, physicalPlanBuildTime, queryOptimizationTime);\n    }\n    /**\n     * Output the QueryPreparationTimes as a delimited string.\n     */\n    toDelimitedString() {\n        return (`${queryMetricsConstants_1.default.QueryCompileTimeInMs}=${this.queryCompilationTime.totalMilliseconds()};` +\n            `${queryMetricsConstants_1.default.LogicalPlanBuildTimeInMs}=${this.logicalPlanBuildTime.totalMilliseconds()};` +\n            `${queryMetricsConstants_1.default.PhysicalPlanBuildTimeInMs}=${this.physicalPlanBuildTime.totalMilliseconds()};` +\n            `${queryMetricsConstants_1.default.QueryOptimizationTimeInMs}=${this.queryOptimizationTime.totalMilliseconds()}`);\n    }\n    /**\n     * Returns a new instance of the QueryPreparationTimes class that is the\n     * aggregation of an array of QueryPreparationTimes.\n     * @memberof QueryMetrics\n     * @instance\n     */\n    static createFromArray(queryPreparationTimesArray) {\n        if (queryPreparationTimesArray == null) {\n            throw new Error(\"queryPreparationTimesArray is null or undefined item(s)\");\n        }\n        return QueryPreparationTimes.zero.add(...queryPreparationTimesArray);\n    }\n    /**\n     * Returns a new instance of the QueryPreparationTimes class this is deserialized from a delimited string.\n     * @memberof QueryMetrics\n     * @instance\n     */\n    static createFromDelimitedString(delimitedString) {\n        const metrics = queryMetricsUtils_1.QueryMetricsUtils.parseDelimitedString(delimitedString);\n        return new QueryPreparationTimes(queryMetricsUtils_1.QueryMetricsUtils.timeSpanFromMetrics(metrics, queryMetricsConstants_1.default.QueryCompileTimeInMs), queryMetricsUtils_1.QueryMetricsUtils.timeSpanFromMetrics(metrics, queryMetricsConstants_1.default.LogicalPlanBuildTimeInMs), queryMetricsUtils_1.QueryMetricsUtils.timeSpanFromMetrics(metrics, queryMetricsConstants_1.default.PhysicalPlanBuildTimeInMs), queryMetricsUtils_1.QueryMetricsUtils.timeSpanFromMetrics(metrics, queryMetricsConstants_1.default.QueryOptimizationTimeInMs));\n    }\n}\nQueryPreparationTimes.zero = new QueryPreparationTimes(timeSpan_1.TimeSpan.zero, timeSpan_1.TimeSpan.zero, timeSpan_1.TimeSpan.zero, timeSpan_1.TimeSpan.zero);\nexports.QueryPreparationTimes = QueryPreparationTimes;\n//# sourceMappingURL=queryPreparationTime.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlNZXRyaWNzL3F1ZXJ5UHJlcGFyYXRpb25UaW1lLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3F1ZXJ5TWV0cmljcy9xdWVyeVByZXBhcmF0aW9uVGltZS5qcz84MzA1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IHF1ZXJ5TWV0cmljc0NvbnN0YW50c18xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vcXVlcnlNZXRyaWNzQ29uc3RhbnRzXCIpKTtcbmNvbnN0IHF1ZXJ5TWV0cmljc1V0aWxzXzEgPSByZXF1aXJlKFwiLi9xdWVyeU1ldHJpY3NVdGlsc1wiKTtcbmNvbnN0IHRpbWVTcGFuXzEgPSByZXF1aXJlKFwiLi90aW1lU3BhblwiKTtcbmNsYXNzIFF1ZXJ5UHJlcGFyYXRpb25UaW1lcyB7XG4gICAgY29uc3RydWN0b3IocXVlcnlDb21waWxhdGlvblRpbWUsIGxvZ2ljYWxQbGFuQnVpbGRUaW1lLCBwaHlzaWNhbFBsYW5CdWlsZFRpbWUsIHF1ZXJ5T3B0aW1pemF0aW9uVGltZSkge1xuICAgICAgICB0aGlzLnF1ZXJ5Q29tcGlsYXRpb25UaW1lID0gcXVlcnlDb21waWxhdGlvblRpbWU7XG4gICAgICAgIHRoaXMubG9naWNhbFBsYW5CdWlsZFRpbWUgPSBsb2dpY2FsUGxhbkJ1aWxkVGltZTtcbiAgICAgICAgdGhpcy5waHlzaWNhbFBsYW5CdWlsZFRpbWUgPSBwaHlzaWNhbFBsYW5CdWlsZFRpbWU7XG4gICAgICAgIHRoaXMucXVlcnlPcHRpbWl6YXRpb25UaW1lID0gcXVlcnlPcHRpbWl6YXRpb25UaW1lO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiByZXR1cm5zIGEgbmV3IFF1ZXJ5UHJlcGFyYXRpb25UaW1lcyBpbnN0YW5jZSB0aGF0IGlzIHRoZSBhZGRpdGlvbiBvZiB0aGlzIGFuZCB0aGUgYXJndW1lbnRzLlxuICAgICAqL1xuICAgIGFkZCguLi5xdWVyeVByZXBhcmF0aW9uVGltZXNBcnJheSkge1xuICAgICAgICBpZiAoYXJndW1lbnRzID09IG51bGwgfHwgYXJndW1lbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiYXJndW1lbnRzIHdhcyBudWxsIG9yIGVtcHR5XCIpO1xuICAgICAgICB9XG4gICAgICAgIGxldCBxdWVyeUNvbXBpbGF0aW9uVGltZSA9IHRoaXMucXVlcnlDb21waWxhdGlvblRpbWU7XG4gICAgICAgIGxldCBsb2dpY2FsUGxhbkJ1aWxkVGltZSA9IHRoaXMubG9naWNhbFBsYW5CdWlsZFRpbWU7XG4gICAgICAgIGxldCBwaHlzaWNhbFBsYW5CdWlsZFRpbWUgPSB0aGlzLnBoeXNpY2FsUGxhbkJ1aWxkVGltZTtcbiAgICAgICAgbGV0IHF1ZXJ5T3B0aW1pemF0aW9uVGltZSA9IHRoaXMucXVlcnlPcHRpbWl6YXRpb25UaW1lO1xuICAgICAgICBmb3IgKGNvbnN0IHF1ZXJ5UHJlcGFyYXRpb25UaW1lcyBvZiBxdWVyeVByZXBhcmF0aW9uVGltZXNBcnJheSkge1xuICAgICAgICAgICAgaWYgKHF1ZXJ5UHJlcGFyYXRpb25UaW1lcyA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwicXVlcnlQcmVwYXJhdGlvblRpbWVzQXJyYXkgaGFzIG51bGwgb3IgdW5kZWZpbmVkIGl0ZW0ocylcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBxdWVyeUNvbXBpbGF0aW9uVGltZSA9IHF1ZXJ5Q29tcGlsYXRpb25UaW1lLmFkZChxdWVyeVByZXBhcmF0aW9uVGltZXMucXVlcnlDb21waWxhdGlvblRpbWUpO1xuICAgICAgICAgICAgbG9naWNhbFBsYW5CdWlsZFRpbWUgPSBsb2dpY2FsUGxhbkJ1aWxkVGltZS5hZGQocXVlcnlQcmVwYXJhdGlvblRpbWVzLmxvZ2ljYWxQbGFuQnVpbGRUaW1lKTtcbiAgICAgICAgICAgIHBoeXNpY2FsUGxhbkJ1aWxkVGltZSA9IHBoeXNpY2FsUGxhbkJ1aWxkVGltZS5hZGQocXVlcnlQcmVwYXJhdGlvblRpbWVzLnBoeXNpY2FsUGxhbkJ1aWxkVGltZSk7XG4gICAgICAgICAgICBxdWVyeU9wdGltaXphdGlvblRpbWUgPSBxdWVyeU9wdGltaXphdGlvblRpbWUuYWRkKHF1ZXJ5UHJlcGFyYXRpb25UaW1lcy5xdWVyeU9wdGltaXphdGlvblRpbWUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUXVlcnlQcmVwYXJhdGlvblRpbWVzKHF1ZXJ5Q29tcGlsYXRpb25UaW1lLCBsb2dpY2FsUGxhbkJ1aWxkVGltZSwgcGh5c2ljYWxQbGFuQnVpbGRUaW1lLCBxdWVyeU9wdGltaXphdGlvblRpbWUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBPdXRwdXQgdGhlIFF1ZXJ5UHJlcGFyYXRpb25UaW1lcyBhcyBhIGRlbGltaXRlZCBzdHJpbmcuXG4gICAgICovXG4gICAgdG9EZWxpbWl0ZWRTdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiAoYCR7cXVlcnlNZXRyaWNzQ29uc3RhbnRzXzEuZGVmYXVsdC5RdWVyeUNvbXBpbGVUaW1lSW5Nc309JHt0aGlzLnF1ZXJ5Q29tcGlsYXRpb25UaW1lLnRvdGFsTWlsbGlzZWNvbmRzKCl9O2AgK1xuICAgICAgICAgICAgYCR7cXVlcnlNZXRyaWNzQ29uc3RhbnRzXzEuZGVmYXVsdC5Mb2dpY2FsUGxhbkJ1aWxkVGltZUluTXN9PSR7dGhpcy5sb2dpY2FsUGxhbkJ1aWxkVGltZS50b3RhbE1pbGxpc2Vjb25kcygpfTtgICtcbiAgICAgICAgICAgIGAke3F1ZXJ5TWV0cmljc0NvbnN0YW50c18xLmRlZmF1bHQuUGh5c2ljYWxQbGFuQnVpbGRUaW1lSW5Nc309JHt0aGlzLnBoeXNpY2FsUGxhbkJ1aWxkVGltZS50b3RhbE1pbGxpc2Vjb25kcygpfTtgICtcbiAgICAgICAgICAgIGAke3F1ZXJ5TWV0cmljc0NvbnN0YW50c18xLmRlZmF1bHQuUXVlcnlPcHRpbWl6YXRpb25UaW1lSW5Nc309JHt0aGlzLnF1ZXJ5T3B0aW1pemF0aW9uVGltZS50b3RhbE1pbGxpc2Vjb25kcygpfWApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgbmV3IGluc3RhbmNlIG9mIHRoZSBRdWVyeVByZXBhcmF0aW9uVGltZXMgY2xhc3MgdGhhdCBpcyB0aGVcbiAgICAgKiBhZ2dyZWdhdGlvbiBvZiBhbiBhcnJheSBvZiBRdWVyeVByZXBhcmF0aW9uVGltZXMuXG4gICAgICogQG1lbWJlcm9mIFF1ZXJ5TWV0cmljc1xuICAgICAqIEBpbnN0YW5jZVxuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVGcm9tQXJyYXkocXVlcnlQcmVwYXJhdGlvblRpbWVzQXJyYXkpIHtcbiAgICAgICAgaWYgKHF1ZXJ5UHJlcGFyYXRpb25UaW1lc0FycmF5ID09IG51bGwpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInF1ZXJ5UHJlcGFyYXRpb25UaW1lc0FycmF5IGlzIG51bGwgb3IgdW5kZWZpbmVkIGl0ZW0ocylcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFF1ZXJ5UHJlcGFyYXRpb25UaW1lcy56ZXJvLmFkZCguLi5xdWVyeVByZXBhcmF0aW9uVGltZXNBcnJheSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBuZXcgaW5zdGFuY2Ugb2YgdGhlIFF1ZXJ5UHJlcGFyYXRpb25UaW1lcyBjbGFzcyB0aGlzIGlzIGRlc2VyaWFsaXplZCBmcm9tIGEgZGVsaW1pdGVkIHN0cmluZy5cbiAgICAgKiBAbWVtYmVyb2YgUXVlcnlNZXRyaWNzXG4gICAgICogQGluc3RhbmNlXG4gICAgICovXG4gICAgc3RhdGljIGNyZWF0ZUZyb21EZWxpbWl0ZWRTdHJpbmcoZGVsaW1pdGVkU3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IG1ldHJpY3MgPSBxdWVyeU1ldHJpY3NVdGlsc18xLlF1ZXJ5TWV0cmljc1V0aWxzLnBhcnNlRGVsaW1pdGVkU3RyaW5nKGRlbGltaXRlZFN0cmluZyk7XG4gICAgICAgIHJldHVybiBuZXcgUXVlcnlQcmVwYXJhdGlvblRpbWVzKHF1ZXJ5TWV0cmljc1V0aWxzXzEuUXVlcnlNZXRyaWNzVXRpbHMudGltZVNwYW5Gcm9tTWV0cmljcyhtZXRyaWNzLCBxdWVyeU1ldHJpY3NDb25zdGFudHNfMS5kZWZhdWx0LlF1ZXJ5Q29tcGlsZVRpbWVJbk1zKSwgcXVlcnlNZXRyaWNzVXRpbHNfMS5RdWVyeU1ldHJpY3NVdGlscy50aW1lU3BhbkZyb21NZXRyaWNzKG1ldHJpY3MsIHF1ZXJ5TWV0cmljc0NvbnN0YW50c18xLmRlZmF1bHQuTG9naWNhbFBsYW5CdWlsZFRpbWVJbk1zKSwgcXVlcnlNZXRyaWNzVXRpbHNfMS5RdWVyeU1ldHJpY3NVdGlscy50aW1lU3BhbkZyb21NZXRyaWNzKG1ldHJpY3MsIHF1ZXJ5TWV0cmljc0NvbnN0YW50c18xLmRlZmF1bHQuUGh5c2ljYWxQbGFuQnVpbGRUaW1lSW5NcyksIHF1ZXJ5TWV0cmljc1V0aWxzXzEuUXVlcnlNZXRyaWNzVXRpbHMudGltZVNwYW5Gcm9tTWV0cmljcyhtZXRyaWNzLCBxdWVyeU1ldHJpY3NDb25zdGFudHNfMS5kZWZhdWx0LlF1ZXJ5T3B0aW1pemF0aW9uVGltZUluTXMpKTtcbiAgICB9XG59XG5RdWVyeVByZXBhcmF0aW9uVGltZXMuemVybyA9IG5ldyBRdWVyeVByZXBhcmF0aW9uVGltZXModGltZVNwYW5fMS5UaW1lU3Bhbi56ZXJvLCB0aW1lU3Bhbl8xLlRpbWVTcGFuLnplcm8sIHRpbWVTcGFuXzEuVGltZVNwYW4uemVybywgdGltZVNwYW5fMS5UaW1lU3Bhbi56ZXJvKTtcbmV4cG9ydHMuUXVlcnlQcmVwYXJhdGlvblRpbWVzID0gUXVlcnlQcmVwYXJhdGlvblRpbWVzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcnlQcmVwYXJhdGlvblRpbWUuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/queryMetrics/queryPreparationTime.js\n");

/***/ }),

/***/ "./lib/queryMetrics/runtimeExecutionTimes.js":
/*!***************************************************!*\
  !*** ./lib/queryMetrics/runtimeExecutionTimes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst queryMetricsConstants_1 = tslib_1.__importDefault(__webpack_require__(/*! ./queryMetricsConstants */ \"./lib/queryMetrics/queryMetricsConstants.js\"));\nconst queryMetricsUtils_1 = __webpack_require__(/*! ./queryMetricsUtils */ \"./lib/queryMetrics/queryMetricsUtils.js\");\nconst timeSpan_1 = __webpack_require__(/*! ./timeSpan */ \"./lib/queryMetrics/timeSpan.js\");\nclass RuntimeExecutionTimes {\n    constructor(queryEngineExecutionTime, systemFunctionExecutionTime, userDefinedFunctionExecutionTime) {\n        this.queryEngineExecutionTime = queryEngineExecutionTime;\n        this.systemFunctionExecutionTime = systemFunctionExecutionTime;\n        this.userDefinedFunctionExecutionTime = userDefinedFunctionExecutionTime;\n    }\n    /**\n     * returns a new RuntimeExecutionTimes instance that is the addition of this and the arguments.\n     */\n    add(...runtimeExecutionTimesArray) {\n        if (arguments == null || arguments.length === 0) {\n            throw new Error(\"arguments was null or empty\");\n        }\n        let queryEngineExecutionTime = this.queryEngineExecutionTime;\n        let systemFunctionExecutionTime = this.systemFunctionExecutionTime;\n        let userDefinedFunctionExecutionTime = this.userDefinedFunctionExecutionTime;\n        for (const runtimeExecutionTimes of runtimeExecutionTimesArray) {\n            if (runtimeExecutionTimes == null) {\n                throw new Error(\"runtimeExecutionTimes has null or undefined item(s)\");\n            }\n            queryEngineExecutionTime = queryEngineExecutionTime.add(runtimeExecutionTimes.queryEngineExecutionTime);\n            systemFunctionExecutionTime = systemFunctionExecutionTime.add(runtimeExecutionTimes.systemFunctionExecutionTime);\n            userDefinedFunctionExecutionTime = userDefinedFunctionExecutionTime.add(runtimeExecutionTimes.userDefinedFunctionExecutionTime);\n        }\n        return new RuntimeExecutionTimes(queryEngineExecutionTime, systemFunctionExecutionTime, userDefinedFunctionExecutionTime);\n    }\n    /**\n     * Output the RuntimeExecutionTimes as a delimited string.\n     */\n    toDelimitedString() {\n        // tslint:disable-next-line:max-line-length\n        return (`${queryMetricsConstants_1.default.SystemFunctionExecuteTimeInMs}=${this.systemFunctionExecutionTime.totalMilliseconds()};` +\n            // tslint:disable-next-line:max-line-length\n            `${queryMetricsConstants_1.default.UserDefinedFunctionExecutionTimeInMs}=${this.userDefinedFunctionExecutionTime.totalMilliseconds()}`);\n    }\n    /**\n     * Returns a new instance of the RuntimeExecutionTimes class that is\n     *  the aggregation of an array of RuntimeExecutionTimes.\n     */\n    static createFromArray(runtimeExecutionTimesArray) {\n        if (runtimeExecutionTimesArray == null) {\n            throw new Error(\"runtimeExecutionTimesArray is null or undefined item(s)\");\n        }\n        return RuntimeExecutionTimes.zero.add(...runtimeExecutionTimesArray);\n    }\n    /**\n     * Returns a new instance of the RuntimeExecutionTimes class this is deserialized from a delimited string.\n     */\n    static createFromDelimitedString(delimitedString) {\n        const metrics = queryMetricsUtils_1.QueryMetricsUtils.parseDelimitedString(delimitedString);\n        const vmExecutionTime = queryMetricsUtils_1.QueryMetricsUtils.timeSpanFromMetrics(metrics, queryMetricsConstants_1.default.VMExecutionTimeInMs);\n        const indexLookupTime = queryMetricsUtils_1.QueryMetricsUtils.timeSpanFromMetrics(metrics, queryMetricsConstants_1.default.IndexLookupTimeInMs);\n        const documentLoadTime = queryMetricsUtils_1.QueryMetricsUtils.timeSpanFromMetrics(metrics, queryMetricsConstants_1.default.DocumentLoadTimeInMs);\n        const documentWriteTime = queryMetricsUtils_1.QueryMetricsUtils.timeSpanFromMetrics(metrics, queryMetricsConstants_1.default.DocumentWriteTimeInMs);\n        let queryEngineExecutionTime = timeSpan_1.TimeSpan.zero;\n        queryEngineExecutionTime = queryEngineExecutionTime.add(vmExecutionTime);\n        queryEngineExecutionTime = queryEngineExecutionTime.subtract(indexLookupTime);\n        queryEngineExecutionTime = queryEngineExecutionTime.subtract(documentLoadTime);\n        queryEngineExecutionTime = queryEngineExecutionTime.subtract(documentWriteTime);\n        return new RuntimeExecutionTimes(queryEngineExecutionTime, queryMetricsUtils_1.QueryMetricsUtils.timeSpanFromMetrics(metrics, queryMetricsConstants_1.default.SystemFunctionExecuteTimeInMs), queryMetricsUtils_1.QueryMetricsUtils.timeSpanFromMetrics(metrics, queryMetricsConstants_1.default.UserDefinedFunctionExecutionTimeInMs));\n    }\n}\nRuntimeExecutionTimes.zero = new RuntimeExecutionTimes(timeSpan_1.TimeSpan.zero, timeSpan_1.TimeSpan.zero, timeSpan_1.TimeSpan.zero);\nexports.RuntimeExecutionTimes = RuntimeExecutionTimes;\n//# sourceMappingURL=runtimeExecutionTimes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcXVlcnlNZXRyaWNzL3J1bnRpbWVFeGVjdXRpb25UaW1lcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9xdWVyeU1ldHJpY3MvcnVudGltZUV4ZWN1dGlvblRpbWVzLmpzPzg0NTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgcXVlcnlNZXRyaWNzQ29uc3RhbnRzXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9xdWVyeU1ldHJpY3NDb25zdGFudHNcIikpO1xuY29uc3QgcXVlcnlNZXRyaWNzVXRpbHNfMSA9IHJlcXVpcmUoXCIuL3F1ZXJ5TWV0cmljc1V0aWxzXCIpO1xuY29uc3QgdGltZVNwYW5fMSA9IHJlcXVpcmUoXCIuL3RpbWVTcGFuXCIpO1xuY2xhc3MgUnVudGltZUV4ZWN1dGlvblRpbWVzIHtcbiAgICBjb25zdHJ1Y3RvcihxdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUsIHN5c3RlbUZ1bmN0aW9uRXhlY3V0aW9uVGltZSwgdXNlckRlZmluZWRGdW5jdGlvbkV4ZWN1dGlvblRpbWUpIHtcbiAgICAgICAgdGhpcy5xdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUgPSBxdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWU7XG4gICAgICAgIHRoaXMuc3lzdGVtRnVuY3Rpb25FeGVjdXRpb25UaW1lID0gc3lzdGVtRnVuY3Rpb25FeGVjdXRpb25UaW1lO1xuICAgICAgICB0aGlzLnVzZXJEZWZpbmVkRnVuY3Rpb25FeGVjdXRpb25UaW1lID0gdXNlckRlZmluZWRGdW5jdGlvbkV4ZWN1dGlvblRpbWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHJldHVybnMgYSBuZXcgUnVudGltZUV4ZWN1dGlvblRpbWVzIGluc3RhbmNlIHRoYXQgaXMgdGhlIGFkZGl0aW9uIG9mIHRoaXMgYW5kIHRoZSBhcmd1bWVudHMuXG4gICAgICovXG4gICAgYWRkKC4uLnJ1bnRpbWVFeGVjdXRpb25UaW1lc0FycmF5KSB7XG4gICAgICAgIGlmIChhcmd1bWVudHMgPT0gbnVsbCB8fCBhcmd1bWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJhcmd1bWVudHMgd2FzIG51bGwgb3IgZW1wdHlcIik7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHF1ZXJ5RW5naW5lRXhlY3V0aW9uVGltZSA9IHRoaXMucXVlcnlFbmdpbmVFeGVjdXRpb25UaW1lO1xuICAgICAgICBsZXQgc3lzdGVtRnVuY3Rpb25FeGVjdXRpb25UaW1lID0gdGhpcy5zeXN0ZW1GdW5jdGlvbkV4ZWN1dGlvblRpbWU7XG4gICAgICAgIGxldCB1c2VyRGVmaW5lZEZ1bmN0aW9uRXhlY3V0aW9uVGltZSA9IHRoaXMudXNlckRlZmluZWRGdW5jdGlvbkV4ZWN1dGlvblRpbWU7XG4gICAgICAgIGZvciAoY29uc3QgcnVudGltZUV4ZWN1dGlvblRpbWVzIG9mIHJ1bnRpbWVFeGVjdXRpb25UaW1lc0FycmF5KSB7XG4gICAgICAgICAgICBpZiAocnVudGltZUV4ZWN1dGlvblRpbWVzID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJydW50aW1lRXhlY3V0aW9uVGltZXMgaGFzIG51bGwgb3IgdW5kZWZpbmVkIGl0ZW0ocylcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBxdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUgPSBxdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUuYWRkKHJ1bnRpbWVFeGVjdXRpb25UaW1lcy5xdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUpO1xuICAgICAgICAgICAgc3lzdGVtRnVuY3Rpb25FeGVjdXRpb25UaW1lID0gc3lzdGVtRnVuY3Rpb25FeGVjdXRpb25UaW1lLmFkZChydW50aW1lRXhlY3V0aW9uVGltZXMuc3lzdGVtRnVuY3Rpb25FeGVjdXRpb25UaW1lKTtcbiAgICAgICAgICAgIHVzZXJEZWZpbmVkRnVuY3Rpb25FeGVjdXRpb25UaW1lID0gdXNlckRlZmluZWRGdW5jdGlvbkV4ZWN1dGlvblRpbWUuYWRkKHJ1bnRpbWVFeGVjdXRpb25UaW1lcy51c2VyRGVmaW5lZEZ1bmN0aW9uRXhlY3V0aW9uVGltZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBSdW50aW1lRXhlY3V0aW9uVGltZXMocXVlcnlFbmdpbmVFeGVjdXRpb25UaW1lLCBzeXN0ZW1GdW5jdGlvbkV4ZWN1dGlvblRpbWUsIHVzZXJEZWZpbmVkRnVuY3Rpb25FeGVjdXRpb25UaW1lKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogT3V0cHV0IHRoZSBSdW50aW1lRXhlY3V0aW9uVGltZXMgYXMgYSBkZWxpbWl0ZWQgc3RyaW5nLlxuICAgICAqL1xuICAgIHRvRGVsaW1pdGVkU3RyaW5nKCkge1xuICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bWF4LWxpbmUtbGVuZ3RoXG4gICAgICAgIHJldHVybiAoYCR7cXVlcnlNZXRyaWNzQ29uc3RhbnRzXzEuZGVmYXVsdC5TeXN0ZW1GdW5jdGlvbkV4ZWN1dGVUaW1lSW5Nc309JHt0aGlzLnN5c3RlbUZ1bmN0aW9uRXhlY3V0aW9uVGltZS50b3RhbE1pbGxpc2Vjb25kcygpfTtgICtcbiAgICAgICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTptYXgtbGluZS1sZW5ndGhcbiAgICAgICAgICAgIGAke3F1ZXJ5TWV0cmljc0NvbnN0YW50c18xLmRlZmF1bHQuVXNlckRlZmluZWRGdW5jdGlvbkV4ZWN1dGlvblRpbWVJbk1zfT0ke3RoaXMudXNlckRlZmluZWRGdW5jdGlvbkV4ZWN1dGlvblRpbWUudG90YWxNaWxsaXNlY29uZHMoKX1gKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgUnVudGltZUV4ZWN1dGlvblRpbWVzIGNsYXNzIHRoYXQgaXNcbiAgICAgKiAgdGhlIGFnZ3JlZ2F0aW9uIG9mIGFuIGFycmF5IG9mIFJ1bnRpbWVFeGVjdXRpb25UaW1lcy5cbiAgICAgKi9cbiAgICBzdGF0aWMgY3JlYXRlRnJvbUFycmF5KHJ1bnRpbWVFeGVjdXRpb25UaW1lc0FycmF5KSB7XG4gICAgICAgIGlmIChydW50aW1lRXhlY3V0aW9uVGltZXNBcnJheSA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJydW50aW1lRXhlY3V0aW9uVGltZXNBcnJheSBpcyBudWxsIG9yIHVuZGVmaW5lZCBpdGVtKHMpXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBSdW50aW1lRXhlY3V0aW9uVGltZXMuemVyby5hZGQoLi4ucnVudGltZUV4ZWN1dGlvblRpbWVzQXJyYXkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgbmV3IGluc3RhbmNlIG9mIHRoZSBSdW50aW1lRXhlY3V0aW9uVGltZXMgY2xhc3MgdGhpcyBpcyBkZXNlcmlhbGl6ZWQgZnJvbSBhIGRlbGltaXRlZCBzdHJpbmcuXG4gICAgICovXG4gICAgc3RhdGljIGNyZWF0ZUZyb21EZWxpbWl0ZWRTdHJpbmcoZGVsaW1pdGVkU3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IG1ldHJpY3MgPSBxdWVyeU1ldHJpY3NVdGlsc18xLlF1ZXJ5TWV0cmljc1V0aWxzLnBhcnNlRGVsaW1pdGVkU3RyaW5nKGRlbGltaXRlZFN0cmluZyk7XG4gICAgICAgIGNvbnN0IHZtRXhlY3V0aW9uVGltZSA9IHF1ZXJ5TWV0cmljc1V0aWxzXzEuUXVlcnlNZXRyaWNzVXRpbHMudGltZVNwYW5Gcm9tTWV0cmljcyhtZXRyaWNzLCBxdWVyeU1ldHJpY3NDb25zdGFudHNfMS5kZWZhdWx0LlZNRXhlY3V0aW9uVGltZUluTXMpO1xuICAgICAgICBjb25zdCBpbmRleExvb2t1cFRpbWUgPSBxdWVyeU1ldHJpY3NVdGlsc18xLlF1ZXJ5TWV0cmljc1V0aWxzLnRpbWVTcGFuRnJvbU1ldHJpY3MobWV0cmljcywgcXVlcnlNZXRyaWNzQ29uc3RhbnRzXzEuZGVmYXVsdC5JbmRleExvb2t1cFRpbWVJbk1zKTtcbiAgICAgICAgY29uc3QgZG9jdW1lbnRMb2FkVGltZSA9IHF1ZXJ5TWV0cmljc1V0aWxzXzEuUXVlcnlNZXRyaWNzVXRpbHMudGltZVNwYW5Gcm9tTWV0cmljcyhtZXRyaWNzLCBxdWVyeU1ldHJpY3NDb25zdGFudHNfMS5kZWZhdWx0LkRvY3VtZW50TG9hZFRpbWVJbk1zKTtcbiAgICAgICAgY29uc3QgZG9jdW1lbnRXcml0ZVRpbWUgPSBxdWVyeU1ldHJpY3NVdGlsc18xLlF1ZXJ5TWV0cmljc1V0aWxzLnRpbWVTcGFuRnJvbU1ldHJpY3MobWV0cmljcywgcXVlcnlNZXRyaWNzQ29uc3RhbnRzXzEuZGVmYXVsdC5Eb2N1bWVudFdyaXRlVGltZUluTXMpO1xuICAgICAgICBsZXQgcXVlcnlFbmdpbmVFeGVjdXRpb25UaW1lID0gdGltZVNwYW5fMS5UaW1lU3Bhbi56ZXJvO1xuICAgICAgICBxdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUgPSBxdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUuYWRkKHZtRXhlY3V0aW9uVGltZSk7XG4gICAgICAgIHF1ZXJ5RW5naW5lRXhlY3V0aW9uVGltZSA9IHF1ZXJ5RW5naW5lRXhlY3V0aW9uVGltZS5zdWJ0cmFjdChpbmRleExvb2t1cFRpbWUpO1xuICAgICAgICBxdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUgPSBxdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUuc3VidHJhY3QoZG9jdW1lbnRMb2FkVGltZSk7XG4gICAgICAgIHF1ZXJ5RW5naW5lRXhlY3V0aW9uVGltZSA9IHF1ZXJ5RW5naW5lRXhlY3V0aW9uVGltZS5zdWJ0cmFjdChkb2N1bWVudFdyaXRlVGltZSk7XG4gICAgICAgIHJldHVybiBuZXcgUnVudGltZUV4ZWN1dGlvblRpbWVzKHF1ZXJ5RW5naW5lRXhlY3V0aW9uVGltZSwgcXVlcnlNZXRyaWNzVXRpbHNfMS5RdWVyeU1ldHJpY3NVdGlscy50aW1lU3BhbkZyb21NZXRyaWNzKG1ldHJpY3MsIHF1ZXJ5TWV0cmljc0NvbnN0YW50c18xLmRlZmF1bHQuU3lzdGVtRnVuY3Rpb25FeGVjdXRlVGltZUluTXMpLCBxdWVyeU1ldHJpY3NVdGlsc18xLlF1ZXJ5TWV0cmljc1V0aWxzLnRpbWVTcGFuRnJvbU1ldHJpY3MobWV0cmljcywgcXVlcnlNZXRyaWNzQ29uc3RhbnRzXzEuZGVmYXVsdC5Vc2VyRGVmaW5lZEZ1bmN0aW9uRXhlY3V0aW9uVGltZUluTXMpKTtcbiAgICB9XG59XG5SdW50aW1lRXhlY3V0aW9uVGltZXMuemVybyA9IG5ldyBSdW50aW1lRXhlY3V0aW9uVGltZXModGltZVNwYW5fMS5UaW1lU3Bhbi56ZXJvLCB0aW1lU3Bhbl8xLlRpbWVTcGFuLnplcm8sIHRpbWVTcGFuXzEuVGltZVNwYW4uemVybyk7XG5leHBvcnRzLlJ1bnRpbWVFeGVjdXRpb25UaW1lcyA9IFJ1bnRpbWVFeGVjdXRpb25UaW1lcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJ1bnRpbWVFeGVjdXRpb25UaW1lcy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/queryMetrics/runtimeExecutionTimes.js\n");

/***/ }),

/***/ "./lib/queryMetrics/timeSpan.js":
/*!**************************************!*\
  !*** ./lib/queryMetrics/timeSpan.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Ported this implementation to javascript:\n// https://referencesource.microsoft.com/#mscorlib/system/timespan.cs,83e476c1ae112117\n/** @hidden */\nconst ticksPerMillisecond = 10000;\n/** @hidden */\nconst millisecondsPerTick = 1.0 / ticksPerMillisecond;\n/** @hidden */\nconst ticksPerSecond = ticksPerMillisecond * 1000; // 10,000,000\n/** @hidden */\nconst secondsPerTick = 1.0 / ticksPerSecond; // 0.0001\n/** @hidden */\nconst ticksPerMinute = ticksPerSecond * 60; // 600,000,000\n/** @hidden */\nconst minutesPerTick = 1.0 / ticksPerMinute; // 1.6666666666667e-9\n/** @hidden */\nconst ticksPerHour = ticksPerMinute * 60; // 36,000,000,000\n/** @hidden */\nconst hoursPerTick = 1.0 / ticksPerHour; // 2.77777777777777778e-11\n/** @hidden */\nconst ticksPerDay = ticksPerHour * 24; // 864,000,000,000\n/** @hidden */\nconst daysPerTick = 1.0 / ticksPerDay; // 1.1574074074074074074e-12\n/** @hidden */\nconst millisPerSecond = 1000;\n/** @hidden */\nconst millisPerMinute = millisPerSecond * 60; //     60,000\n/** @hidden */\nconst millisPerHour = millisPerMinute * 60; //  3,600,000\n/** @hidden */\nconst millisPerDay = millisPerHour * 24; // 86,400,000\n/** @hidden */\nconst maxMilliSeconds = Number.MAX_SAFE_INTEGER / ticksPerMillisecond;\n/** @hidden */\nconst minMilliSeconds = Number.MIN_SAFE_INTEGER / ticksPerMillisecond;\n/**\n * Represents a time interval.\n *\n * @constructor TimeSpan\n * @param {number} days                 - Number of days.\n * @param {number} hours                - Number of hours.\n * @param {number} minutes              - Number of minutes.\n * @param {number} seconds              - Number of seconds.\n * @param {number} milliseconds         - Number of milliseconds.\n * @ignore\n */\nclass TimeSpan {\n    constructor(days, hours, minutes, seconds, milliseconds) {\n        // Constructor\n        if (!Number.isInteger(days)) {\n            throw new Error(\"days is not an integer\");\n        }\n        if (!Number.isInteger(hours)) {\n            throw new Error(\"hours is not an integer\");\n        }\n        if (!Number.isInteger(minutes)) {\n            throw new Error(\"minutes is not an integer\");\n        }\n        if (!Number.isInteger(seconds)) {\n            throw new Error(\"seconds is not an integer\");\n        }\n        if (!Number.isInteger(milliseconds)) {\n            throw new Error(\"milliseconds is not an integer\");\n        }\n        const totalMilliSeconds = (days * 3600 * 24 + hours * 3600 + minutes * 60 + seconds) * 1000 + milliseconds;\n        if (totalMilliSeconds > maxMilliSeconds || totalMilliSeconds < minMilliSeconds) {\n            throw new Error(\"Total number of milliseconds was either too large or too small\");\n        }\n        this._ticks = totalMilliSeconds * ticksPerMillisecond;\n    }\n    /**\n     * Returns a new TimeSpan object whose value is the sum of the specified TimeSpan object and this instance.\n     * @param {TimeSpan} ts              - The time interval to add.\n     * @memberof TimeSpan\n     * @instance\n     */\n    add(ts) {\n        if (TimeSpan.additionDoesOverflow(this._ticks, ts._ticks)) {\n            throw new Error(\"Adding the two timestamps causes an overflow.\");\n        }\n        const results = this._ticks + ts._ticks;\n        return TimeSpan.fromTicks(results);\n    }\n    /**\n     * Returns a new TimeSpan object whose value is the difference of the specified TimeSpan object and this instance.\n     * @param {TimeSpan} ts              - The time interval to subtract.\n     * @memberof TimeSpan\n     * @instance\n     */\n    subtract(ts) {\n        if (TimeSpan.subtractionDoesUnderflow(this._ticks, ts._ticks)) {\n            throw new Error(\"Subtracting the two timestamps causes an underflow.\");\n        }\n        const results = this._ticks - ts._ticks;\n        return TimeSpan.fromTicks(results);\n    }\n    /**\n     * Compares this instance to a specified object and returns an integer that indicates whether this\n     * instance is shorter than, equal to, or longer than the specified object.\n     * @param {TimeSpan} value              - The time interval to add.\n     * @memberof TimeSpan\n     * @instance\n     */\n    compareTo(value) {\n        if (value == null) {\n            return 1;\n        }\n        if (!TimeSpan.isTimeSpan(value)) {\n            throw new Error(\"Argument must be a TimeSpan object\");\n        }\n        return TimeSpan.compare(this, value);\n    }\n    /**\n     * Returns a new TimeSpan object whose value is the absolute value of the current TimeSpan object.\n     * @memberof TimeSpan\n     * @instance\n     */\n    duration() {\n        return TimeSpan.fromTicks(this._ticks >= 0 ? this._ticks : -this._ticks);\n    }\n    /**\n     * Returns a value indicating whether this instance is equal to a specified object.\n     * @memberof TimeSpan\n     * @param {TimeSpan} value              - The time interval to check for equality.\n     * @instance\n     */\n    equals(value) {\n        if (TimeSpan.isTimeSpan(value)) {\n            return this._ticks === value._ticks;\n        }\n        return false;\n    }\n    /**\n     * Returns a new TimeSpan object whose value is the negated value of this instance.\n     * @memberof TimeSpan\n     * @param {TimeSpan} value              - The time interval to check for equality.\n     * @instance\n     */\n    negate() {\n        return TimeSpan.fromTicks(-this._ticks);\n    }\n    days() {\n        return Math.floor(this._ticks / ticksPerDay);\n    }\n    hours() {\n        return Math.floor(this._ticks / ticksPerHour);\n    }\n    milliseconds() {\n        return Math.floor(this._ticks / ticksPerMillisecond);\n    }\n    seconds() {\n        return Math.floor(this._ticks / ticksPerSecond);\n    }\n    ticks() {\n        return this._ticks;\n    }\n    totalDays() {\n        return this._ticks * daysPerTick;\n    }\n    totalHours() {\n        return this._ticks * hoursPerTick;\n    }\n    totalMilliseconds() {\n        return this._ticks * millisecondsPerTick;\n    }\n    totalMinutes() {\n        return this._ticks * minutesPerTick;\n    }\n    totalSeconds() {\n        return this._ticks * secondsPerTick;\n    }\n    static fromTicks(value) {\n        const timeSpan = new TimeSpan(0, 0, 0, 0, 0);\n        timeSpan._ticks = value;\n        return timeSpan;\n    }\n    static isTimeSpan(timespan) {\n        return timespan._ticks;\n    }\n    static additionDoesOverflow(a, b) {\n        const c = a + b;\n        return a !== c - b || b !== c - a;\n    }\n    static subtractionDoesUnderflow(a, b) {\n        const c = a - b;\n        return a !== c + b || b !== a - c;\n    }\n    static compare(t1, t2) {\n        if (t1._ticks > t2._ticks) {\n            return 1;\n        }\n        if (t1._ticks < t2._ticks) {\n            return -1;\n        }\n        return 0;\n    }\n    static interval(value, scale) {\n        if (isNaN(value)) {\n            throw new Error(\"value must be a number\");\n        }\n        const milliseconds = value * scale;\n        if (milliseconds > maxMilliSeconds || milliseconds < minMilliSeconds) {\n            throw new Error(\"timespan too long\");\n        }\n        return TimeSpan.fromTicks(Math.floor(milliseconds * ticksPerMillisecond));\n    }\n    static fromMilliseconds(value) {\n        return TimeSpan.interval(value, 1);\n    }\n    static fromSeconds(value) {\n        return TimeSpan.interval(value, millisPerSecond);\n    }\n    static fromMinutes(value) {\n        return TimeSpan.interval(value, millisPerMinute);\n    }\n    static fromHours(value) {\n        return TimeSpan.interval(value, millisPerHour);\n    }\n    static fromDays(value) {\n        return TimeSpan.interval(value, millisPerDay);\n    }\n}\nTimeSpan.zero = new TimeSpan(0, 0, 0, 0, 0);\nTimeSpan.maxValue = TimeSpan.fromTicks(Number.MAX_SAFE_INTEGER);\nTimeSpan.minValue = TimeSpan.fromTicks(Number.MIN_SAFE_INTEGER);\nexports.TimeSpan = TimeSpan;\n//# sourceMappingURL=timeSpan.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/queryMetrics/timeSpan.js\n");

/***/ }),

/***/ "./lib/request/LocationRouting.js":
/*!****************************************!*\
  !*** ./lib/request/LocationRouting.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\nclass LocationRouting {\n    get ignorePreferredLocation() {\n        return this.pIgnorePreferredLocation;\n    }\n    get locationIndexToRoute() {\n        return this.pLocationIndexToRoute;\n    }\n    get locationEndpointToRoute() {\n        return this.pLocationEndpointToRoute;\n    }\n    routeToLocation(endpointOrIndex, ignorePreferredLocation) {\n        if (arguments.length === 2 && util_1.isNumber(endpointOrIndex)) {\n            this.pLocationIndexToRoute = endpointOrIndex;\n            this.pIgnorePreferredLocation = ignorePreferredLocation;\n            this.pLocationEndpointToRoute = undefined;\n        }\n        else if (arguments.length === 1 && util_1.isString(endpointOrIndex)) {\n            this.pLocationEndpointToRoute = endpointOrIndex;\n            this.pLocationIndexToRoute = undefined;\n            this.pIgnorePreferredLocation = undefined;\n        }\n        else {\n            throw new Error(\"Invalid arguments passed to routeToLocation\");\n        }\n    }\n    clearRouteToLocation() {\n        this.pLocationEndpointToRoute = undefined;\n        this.pLocationIndexToRoute = undefined;\n        this.pIgnorePreferredLocation = undefined;\n    }\n}\nexports.LocationRouting = LocationRouting;\n//# sourceMappingURL=LocationRouting.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcmVxdWVzdC9Mb2NhdGlvblJvdXRpbmcuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvcmVxdWVzdC9Mb2NhdGlvblJvdXRpbmcuanM/MDBkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCJ1dGlsXCIpO1xuY2xhc3MgTG9jYXRpb25Sb3V0aW5nIHtcbiAgICBnZXQgaWdub3JlUHJlZmVycmVkTG9jYXRpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBJZ25vcmVQcmVmZXJyZWRMb2NhdGlvbjtcbiAgICB9XG4gICAgZ2V0IGxvY2F0aW9uSW5kZXhUb1JvdXRlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wTG9jYXRpb25JbmRleFRvUm91dGU7XG4gICAgfVxuICAgIGdldCBsb2NhdGlvbkVuZHBvaW50VG9Sb3V0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucExvY2F0aW9uRW5kcG9pbnRUb1JvdXRlO1xuICAgIH1cbiAgICByb3V0ZVRvTG9jYXRpb24oZW5kcG9pbnRPckluZGV4LCBpZ25vcmVQcmVmZXJyZWRMb2NhdGlvbikge1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMiAmJiB1dGlsXzEuaXNOdW1iZXIoZW5kcG9pbnRPckluZGV4KSkge1xuICAgICAgICAgICAgdGhpcy5wTG9jYXRpb25JbmRleFRvUm91dGUgPSBlbmRwb2ludE9ySW5kZXg7XG4gICAgICAgICAgICB0aGlzLnBJZ25vcmVQcmVmZXJyZWRMb2NhdGlvbiA9IGlnbm9yZVByZWZlcnJlZExvY2F0aW9uO1xuICAgICAgICAgICAgdGhpcy5wTG9jYXRpb25FbmRwb2ludFRvUm91dGUgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSAmJiB1dGlsXzEuaXNTdHJpbmcoZW5kcG9pbnRPckluZGV4KSkge1xuICAgICAgICAgICAgdGhpcy5wTG9jYXRpb25FbmRwb2ludFRvUm91dGUgPSBlbmRwb2ludE9ySW5kZXg7XG4gICAgICAgICAgICB0aGlzLnBMb2NhdGlvbkluZGV4VG9Sb3V0ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIHRoaXMucElnbm9yZVByZWZlcnJlZExvY2F0aW9uID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBhcmd1bWVudHMgcGFzc2VkIHRvIHJvdXRlVG9Mb2NhdGlvblwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjbGVhclJvdXRlVG9Mb2NhdGlvbigpIHtcbiAgICAgICAgdGhpcy5wTG9jYXRpb25FbmRwb2ludFRvUm91dGUgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMucExvY2F0aW9uSW5kZXhUb1JvdXRlID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLnBJZ25vcmVQcmVmZXJyZWRMb2NhdGlvbiA9IHVuZGVmaW5lZDtcbiAgICB9XG59XG5leHBvcnRzLkxvY2F0aW9uUm91dGluZyA9IExvY2F0aW9uUm91dGluZztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUxvY2F0aW9uUm91dGluZy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/request/LocationRouting.js\n");

/***/ }),

/***/ "./lib/request/RequestHandler.js":
/*!***************************************!*\
  !*** ./lib/request/RequestHandler.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst querystring = tslib_1.__importStar(__webpack_require__(/*! querystring */ \"./node_modules/querystring-es3/index.js\"));\nconst __1 = __webpack_require__(/*! .. */ \"./lib/index.js\");\nconst retry_1 = __webpack_require__(/*! ../retry */ \"./lib/retry/index.js\");\nconst request_1 = __webpack_require__(/*! ./request */ \"./lib/request/request.js\");\n/** @hidden */\nclass RequestHandler {\n    constructor(globalEndpointManager, connectionPolicy, requestAgent) {\n        this.globalEndpointManager = globalEndpointManager;\n        this.connectionPolicy = connectionPolicy;\n        this.requestAgent = requestAgent;\n    }\n    static createRequestObjectStub(connectionPolicy, requestOptions, body) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            return request_1.createRequestObject(connectionPolicy, requestOptions, body);\n        });\n    }\n    /**\n     *  Creates the request object, call the passed callback when the response is retrieved.\n     * @param {object} globalEndpointManager - an instance of GlobalEndpointManager class.\n     * @param {object} connectionPolicy - an instance of ConnectionPolicy that has the connection configs.\n     * @param {object} requestAgent - the https agent used for send request\n     * @param {string} method - the http request method ( 'get', 'post', 'put', .. etc ).\n     * @param {String} hostname - The base url for the endpoint.\n     * @param {string} path - the path of the requesed resource.\n     * @param {Object} data - the request body. It can be either string, buffer, stream or undefined.\n     * @param {Object} queryParams - query parameters for the request.\n     * @param {Object} headers - specific headers for the request.\n     * @param {function} callback - the callback that will be called when the response is retrieved and processed.\n     */\n    static request(globalEndpointManager, connectionPolicy, requestAgent, method, hostname, request, data, queryParams, // TODO: any query params types\n    headers) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            // TODO: any\n            const path = request.path === undefined ? request : request.path;\n            let body; // TODO: any\n            if (data) {\n                body = request_1.bodyFromData(data);\n                if (!body) {\n                    return {\n                        result: {\n                            message: \"parameter data must be a javascript object, string, Buffer, or stream\"\n                        },\n                        headers: undefined\n                    };\n                }\n            }\n            let buffer;\n            let stream;\n            if (body) {\n                if (Buffer.isBuffer(body)) {\n                    buffer = body;\n                }\n                else if (body.pipe) {\n                    // it is a stream\n                    stream = body;\n                }\n                else if (typeof body === \"string\") {\n                    buffer = Buffer.from(body, \"utf8\");\n                }\n                else {\n                    return {\n                        result: {\n                            message: \"body must be string, Buffer, or stream\"\n                        },\n                        headers: undefined\n                    };\n                }\n            }\n            const requestOptions = request_1.parse(hostname);\n            requestOptions.method = method;\n            requestOptions.path += path;\n            requestOptions.headers = headers;\n            requestOptions.agent = requestAgent;\n            requestOptions.secureProtocol = \"TLSv1_client_method\"; // TODO: Should be a constant\n            if (connectionPolicy.DisableSSLVerification === true) {\n                requestOptions.rejectUnauthorized = false;\n            }\n            if (queryParams) {\n                requestOptions.path += \"?\" + querystring.stringify(queryParams);\n            }\n            if (buffer) {\n                requestOptions.headers[__1.Constants.HttpHeaders.ContentLength] = buffer.length;\n                return retry_1.RetryUtility.execute(globalEndpointManager, { buffer, stream: null }, this.createRequestObjectStub, connectionPolicy, requestOptions, request);\n            }\n            else if (stream) {\n                return retry_1.RetryUtility.execute(globalEndpointManager, { buffer: null, stream }, this.createRequestObjectStub, connectionPolicy, requestOptions, request);\n            }\n            else {\n                return retry_1.RetryUtility.execute(globalEndpointManager, { buffer: null, stream: null }, this.createRequestObjectStub, connectionPolicy, requestOptions, request);\n            }\n        });\n    }\n    /** @ignore */\n    get(urlString, request, headers) {\n        // TODO: any\n        return RequestHandler.request(this.globalEndpointManager, this.connectionPolicy, this.requestAgent, \"GET\", urlString, request, undefined, \"\", headers);\n    }\n    /** @ignore */\n    post(urlString, request, body, headers) {\n        // TODO: any\n        return RequestHandler.request(this.globalEndpointManager, this.connectionPolicy, this.requestAgent, \"POST\", urlString, request, body, \"\", headers);\n    }\n    /** @ignore */\n    put(urlString, request, body, headers) {\n        // TODO: any\n        return RequestHandler.request(this.globalEndpointManager, this.connectionPolicy, this.requestAgent, \"PUT\", urlString, request, body, \"\", headers);\n    }\n    /** @ignore */\n    head(urlString, request, headers) {\n        // TODO: any\n        return RequestHandler.request(this.globalEndpointManager, this.connectionPolicy, this.requestAgent, \"HEAD\", urlString, request, undefined, \"\", headers);\n    }\n    /** @ignore */\n    delete(urlString, request, headers) {\n        return RequestHandler.request(this.globalEndpointManager, this.connectionPolicy, this.requestAgent, \"DELETE\", urlString, request, undefined, \"\", headers);\n    }\n}\nexports.RequestHandler = RequestHandler;\n//# sourceMappingURL=RequestHandler.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/request/RequestHandler.js\n");

/***/ }),

/***/ "./lib/request/index.js":
/*!******************************!*\
  !*** ./lib/request/index.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RequestHandler_1 = __webpack_require__(/*! ./RequestHandler */ \"./lib/request/RequestHandler.js\");\nexports.RequestHandler = RequestHandler_1.RequestHandler;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcmVxdWVzdC9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9yZXF1ZXN0L2luZGV4LmpzPzRhN2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgUmVxdWVzdEhhbmRsZXJfMSA9IHJlcXVpcmUoXCIuL1JlcXVlc3RIYW5kbGVyXCIpO1xuZXhwb3J0cy5SZXF1ZXN0SGFuZGxlciA9IFJlcXVlc3RIYW5kbGVyXzEuUmVxdWVzdEhhbmRsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/request/index.js\n");

/***/ }),

/***/ "./lib/request/request.js":
/*!********************************!*\
  !*** ./lib/request/request.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst url = tslib_1.__importStar(__webpack_require__(/*! url */ \"./node_modules/url/url.js\"));\nconst common_1 = __webpack_require__(/*! ../common */ \"./lib/common/index.js\");\nconst documents_1 = __webpack_require__(/*! ../documents */ \"./lib/documents/index.js\");\nconst auth_1 = __webpack_require__(/*! ../auth */ \"./lib/auth.js\");\n/** @hidden */\nconst isBrowser = new Function(\"try {return this===window;}catch(e){ return false;}\");\n// TODO: :This feels hacky... Maybe just do this in the webpack.config.json?\n// Alternatively, we can move to superagent which will handle this for us...\n// tslint:disable:no-var-requires\n/** @hidden */\nconst https = isBrowser && false ? __webpack_require__(/*! stream-http */ \"./node_modules/stream-http/index.js\") : __webpack_require__(/*! https */ \"./node_modules/https-browserify/index.js\");\n// tslint:enable:no-var-requires\n// ----------------------------------------------------------------------------\n// Utility methods\n//\n/** @hidden */\nfunction javaScriptFriendlyJSONStringify(s) {\n    // two line terminators (Line separator and Paragraph separator) are not needed to be escaped in JSON\n    // but are needed to be escaped in JavaScript.\n    return JSON.stringify(s)\n        .replace(/\\u2028/g, \"\\\\u2028\")\n        .replace(/\\u2029/g, \"\\\\u2029\");\n}\n/** @hidden */\nfunction bodyFromData(data) {\n    if (data.pipe) {\n        return data;\n    }\n    if (Buffer.isBuffer(data)) {\n        return data;\n    }\n    if (typeof data === \"string\") {\n        return data;\n    }\n    if (typeof data === \"object\") {\n        return javaScriptFriendlyJSONStringify(data);\n    }\n    return undefined;\n}\nexports.bodyFromData = bodyFromData;\n/** @hidden */\nfunction parse(urlString) {\n    return url.parse(urlString);\n}\nexports.parse = parse;\n/** @hidden */\nfunction createRequestObject(connectionPolicy, requestOptions, body) {\n    return new Promise((resolve, reject) => {\n        function onTimeout() {\n            httpsRequest.abort();\n        }\n        const isMedia = requestOptions.path.indexOf(\"//media\") === 0;\n        const httpsRequest = https.request(requestOptions, (response) => {\n            // In case of media response, return the stream to the user and the user will need\n            // to handle reading the stream.\n            if (isMedia && connectionPolicy.MediaReadMode === documents_1.MediaReadMode.Streamed) {\n                return resolve({\n                    result: response,\n                    headers: response.headers\n                });\n            }\n            let data = \"\";\n            // if the requested data is text (not attachment/media) set the encoding to UTF-8\n            if (!isMedia) {\n                response.setEncoding(\"utf8\");\n            }\n            response.on(\"data\", chunk => {\n                data += chunk;\n            });\n            response.on(\"end\", () => {\n                if (response.statusCode >= 400) {\n                    return reject(getErrorBody(response, data, response.headers));\n                }\n                let result;\n                try {\n                    result = isMedia ? data : data.length > 0 ? JSON.parse(data) : undefined;\n                }\n                catch (exception) {\n                    return reject(exception);\n                }\n                resolve({ result, headers: response.headers });\n            });\n        });\n        httpsRequest.once(\"socket\", (socket) => {\n            if (isMedia) {\n                socket.setTimeout(connectionPolicy.MediaRequestTimeout);\n            }\n            else {\n                socket.setTimeout(connectionPolicy.RequestTimeout);\n            }\n            socket.once(\"timeout\", onTimeout);\n            httpsRequest.once(\"response\", () => {\n                socket.removeListener(\"timeout\", onTimeout);\n            });\n        });\n        httpsRequest.once(\"error\", reject);\n        if (body[\"stream\"] !== null) {\n            body[\"stream\"].pipe(httpsRequest);\n        }\n        else if (body[\"buffer\"] !== null) {\n            httpsRequest.write(body[\"buffer\"]);\n            httpsRequest.end();\n        }\n        else {\n            httpsRequest.end();\n        }\n    });\n}\nexports.createRequestObject = createRequestObject;\n/**\n *  Constructs the error body from the response and the data returned from the request.\n * @param {object} response - response object returned from the executon of a request.\n * @param {object} data - the data body returned from the executon of a request.\n * @hidden\n */\nfunction getErrorBody(response, data, headers) {\n    const errorBody = {\n        code: response.statusCode,\n        body: data,\n        headers\n    };\n    if (common_1.Constants.HttpHeaders.ActivityId in response.headers) {\n        errorBody.activityId = response.headers[common_1.Constants.HttpHeaders.ActivityId];\n    }\n    if (common_1.Constants.HttpHeaders.SubStatus in response.headers) {\n        errorBody.substatus = parseInt(response.headers[common_1.Constants.HttpHeaders.SubStatus], 10);\n    }\n    if (common_1.Constants.HttpHeaders.RetryAfterInMilliseconds in response.headers) {\n        errorBody.retryAfterInMilliseconds = parseInt(response.headers[common_1.Constants.HttpHeaders.RetryAfterInMilliseconds], 10);\n    }\n    return errorBody;\n}\nfunction getHeaders(authOptions, defaultHeaders, verb, path, resourceId, resourceType, options, partitionKeyRangeId, useMultipleWriteLocations) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        const headers = Object.assign({}, defaultHeaders);\n        const opts = (options || {}); // TODO: this is dirty\n        if (useMultipleWriteLocations) {\n            headers[common_1.Constants.HttpHeaders.ALLOW_MULTIPLE_WRITES] = true;\n        }\n        if (opts.continuation) {\n            headers[common_1.Constants.HttpHeaders.Continuation] = opts.continuation;\n        }\n        if (opts.preTriggerInclude) {\n            headers[common_1.Constants.HttpHeaders.PreTriggerInclude] =\n                opts.preTriggerInclude.constructor === Array\n                    ? opts.preTriggerInclude.join(\",\")\n                    : opts.preTriggerInclude;\n        }\n        if (opts.postTriggerInclude) {\n            headers[common_1.Constants.HttpHeaders.PostTriggerInclude] =\n                opts.postTriggerInclude.constructor === Array\n                    ? opts.postTriggerInclude.join(\",\")\n                    : opts.postTriggerInclude;\n        }\n        if (opts.offerType) {\n            headers[common_1.Constants.HttpHeaders.OfferType] = opts.offerType;\n        }\n        if (opts.offerThroughput) {\n            headers[common_1.Constants.HttpHeaders.OfferThroughput] = opts.offerThroughput;\n        }\n        if (opts.maxItemCount) {\n            headers[common_1.Constants.HttpHeaders.PageSize] = opts.maxItemCount;\n        }\n        if (opts.accessCondition) {\n            if (opts.accessCondition.type === \"IfMatch\") {\n                headers[common_1.Constants.HttpHeaders.IfMatch] = opts.accessCondition.condition;\n            }\n            else {\n                headers[common_1.Constants.HttpHeaders.IfNoneMatch] = opts.accessCondition.condition;\n            }\n        }\n        if (opts.a_im) {\n            headers[common_1.Constants.HttpHeaders.A_IM] = opts.a_im;\n        }\n        if (opts.indexingDirective) {\n            headers[common_1.Constants.HttpHeaders.IndexingDirective] = opts.indexingDirective;\n        }\n        if (opts.consistencyLevel) {\n            headers[common_1.Constants.HttpHeaders.ConsistencyLevel] = opts.consistencyLevel;\n        }\n        if (opts.resourceTokenExpirySeconds) {\n            headers[common_1.Constants.HttpHeaders.ResourceTokenExpiry] = opts.resourceTokenExpirySeconds;\n        }\n        if (opts.sessionToken) {\n            headers[common_1.Constants.HttpHeaders.SessionToken] = opts.sessionToken;\n        }\n        if (opts.enableScanInQuery) {\n            headers[common_1.Constants.HttpHeaders.EnableScanInQuery] = opts.enableScanInQuery;\n        }\n        if (opts.enableCrossPartitionQuery) {\n            headers[common_1.Constants.HttpHeaders.EnableCrossPartitionQuery] = opts.enableCrossPartitionQuery;\n        }\n        if (opts.populateQuotaInfo) {\n            headers[common_1.Constants.HttpHeaders.PopulateQuotaInfo] = opts.populateQuotaInfo;\n        }\n        if (opts.populateQueryMetrics) {\n            headers[common_1.Constants.HttpHeaders.PopulateQueryMetrics] = opts.populateQueryMetrics;\n        }\n        if (opts.maxDegreeOfParallelism !== undefined) {\n            headers[common_1.Constants.HttpHeaders.ParallelizeCrossPartitionQuery] = true;\n        }\n        if (opts.populateQuotaInfo) {\n            headers[common_1.Constants.HttpHeaders.PopulateQuotaInfo] = true;\n        }\n        if (opts.partitionKey !== undefined) {\n            let partitionKey = opts.partitionKey;\n            if (partitionKey === null || !Array.isArray(partitionKey)) {\n                partitionKey = [partitionKey];\n            }\n            headers[common_1.Constants.HttpHeaders.PartitionKey] = common_1.Helper.jsonStringifyAndEscapeNonASCII(partitionKey);\n        }\n        if (authOptions.masterKey || authOptions.tokenProvider) {\n            headers[common_1.Constants.HttpHeaders.XDate] = new Date().toUTCString();\n        }\n        if (verb === \"post\" || verb === \"put\") {\n            if (!headers[common_1.Constants.HttpHeaders.ContentType]) {\n                headers[common_1.Constants.HttpHeaders.ContentType] = common_1.Constants.MediaTypes.Json;\n            }\n        }\n        if (!headers[common_1.Constants.HttpHeaders.Accept]) {\n            headers[common_1.Constants.HttpHeaders.Accept] = common_1.Constants.MediaTypes.Json;\n        }\n        if (partitionKeyRangeId !== undefined) {\n            headers[common_1.Constants.HttpHeaders.PartitionKeyRangeID] = partitionKeyRangeId;\n        }\n        if (opts.enableScriptLogging) {\n            headers[common_1.Constants.HttpHeaders.EnableScriptLogging] = opts.enableScriptLogging;\n        }\n        if (opts.offerEnableRUPerMinuteThroughput) {\n            headers[common_1.Constants.HttpHeaders.OfferIsRUPerMinuteThroughputEnabled] = true;\n        }\n        if (opts.disableRUPerMinuteUsage) {\n            headers[common_1.Constants.HttpHeaders.DisableRUPerMinuteUsage] = true;\n        }\n        if (authOptions.masterKey || authOptions.resourceTokens || authOptions.tokenProvider || authOptions.permissionFeed) {\n            const token = yield auth_1.AuthHandler.getAuthorizationHeader(authOptions, verb, path, resourceId, resourceType, headers);\n            headers[common_1.Constants.HttpHeaders.Authorization] = token;\n        }\n        return headers;\n    });\n}\nexports.getHeaders = getHeaders;\n//# sourceMappingURL=request.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcmVxdWVzdC9yZXF1ZXN0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3JlcXVlc3QvcmVxdWVzdC5qcz84M2Y2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IHVybCA9IHRzbGliXzEuX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJ1cmxcIikpO1xuY29uc3QgY29tbW9uXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uXCIpO1xuY29uc3QgZG9jdW1lbnRzXzEgPSByZXF1aXJlKFwiLi4vZG9jdW1lbnRzXCIpO1xuY29uc3QgYXV0aF8xID0gcmVxdWlyZShcIi4uL2F1dGhcIik7XG4vKiogQGhpZGRlbiAqL1xuY29uc3QgaXNCcm93c2VyID0gbmV3IEZ1bmN0aW9uKFwidHJ5IHtyZXR1cm4gdGhpcz09PXdpbmRvdzt9Y2F0Y2goZSl7IHJldHVybiBmYWxzZTt9XCIpO1xuLy8gVE9ETzogOlRoaXMgZmVlbHMgaGFja3kuLi4gTWF5YmUganVzdCBkbyB0aGlzIGluIHRoZSB3ZWJwYWNrLmNvbmZpZy5qc29uP1xuLy8gQWx0ZXJuYXRpdmVseSwgd2UgY2FuIG1vdmUgdG8gc3VwZXJhZ2VudCB3aGljaCB3aWxsIGhhbmRsZSB0aGlzIGZvciB1cy4uLlxuLy8gdHNsaW50OmRpc2FibGU6bm8tdmFyLXJlcXVpcmVzXG4vKiogQGhpZGRlbiAqL1xuY29uc3QgaHR0cHMgPSBpc0Jyb3dzZXIgJiYgZmFsc2UgPyByZXF1aXJlKFwic3RyZWFtLWh0dHBcIikgOiByZXF1aXJlKFwiaHR0cHNcIik7XG4vLyB0c2xpbnQ6ZW5hYmxlOm5vLXZhci1yZXF1aXJlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVXRpbGl0eSBtZXRob2RzXG4vL1xuLyoqIEBoaWRkZW4gKi9cbmZ1bmN0aW9uIGphdmFTY3JpcHRGcmllbmRseUpTT05TdHJpbmdpZnkocykge1xuICAgIC8vIHR3byBsaW5lIHRlcm1pbmF0b3JzIChMaW5lIHNlcGFyYXRvciBhbmQgUGFyYWdyYXBoIHNlcGFyYXRvcikgYXJlIG5vdCBuZWVkZWQgdG8gYmUgZXNjYXBlZCBpbiBKU09OXG4gICAgLy8gYnV0IGFyZSBuZWVkZWQgdG8gYmUgZXNjYXBlZCBpbiBKYXZhU2NyaXB0LlxuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShzKVxuICAgICAgICAucmVwbGFjZSgvXFx1MjAyOC9nLCBcIlxcXFx1MjAyOFwiKVxuICAgICAgICAucmVwbGFjZSgvXFx1MjAyOS9nLCBcIlxcXFx1MjAyOVwiKTtcbn1cbi8qKiBAaGlkZGVuICovXG5mdW5jdGlvbiBib2R5RnJvbURhdGEoZGF0YSkge1xuICAgIGlmIChkYXRhLnBpcGUpIHtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIGlmIChCdWZmZXIuaXNCdWZmZXIoZGF0YSkpIHtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBkYXRhID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgIHJldHVybiBqYXZhU2NyaXB0RnJpZW5kbHlKU09OU3RyaW5naWZ5KGRhdGEpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuZXhwb3J0cy5ib2R5RnJvbURhdGEgPSBib2R5RnJvbURhdGE7XG4vKiogQGhpZGRlbiAqL1xuZnVuY3Rpb24gcGFyc2UodXJsU3RyaW5nKSB7XG4gICAgcmV0dXJuIHVybC5wYXJzZSh1cmxTdHJpbmcpO1xufVxuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuLyoqIEBoaWRkZW4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVJlcXVlc3RPYmplY3QoY29ubmVjdGlvblBvbGljeSwgcmVxdWVzdE9wdGlvbnMsIGJvZHkpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBmdW5jdGlvbiBvblRpbWVvdXQoKSB7XG4gICAgICAgICAgICBodHRwc1JlcXVlc3QuYWJvcnQoKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpc01lZGlhID0gcmVxdWVzdE9wdGlvbnMucGF0aC5pbmRleE9mKFwiLy9tZWRpYVwiKSA9PT0gMDtcbiAgICAgICAgY29uc3QgaHR0cHNSZXF1ZXN0ID0gaHR0cHMucmVxdWVzdChyZXF1ZXN0T3B0aW9ucywgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAvLyBJbiBjYXNlIG9mIG1lZGlhIHJlc3BvbnNlLCByZXR1cm4gdGhlIHN0cmVhbSB0byB0aGUgdXNlciBhbmQgdGhlIHVzZXIgd2lsbCBuZWVkXG4gICAgICAgICAgICAvLyB0byBoYW5kbGUgcmVhZGluZyB0aGUgc3RyZWFtLlxuICAgICAgICAgICAgaWYgKGlzTWVkaWEgJiYgY29ubmVjdGlvblBvbGljeS5NZWRpYVJlYWRNb2RlID09PSBkb2N1bWVudHNfMS5NZWRpYVJlYWRNb2RlLlN0cmVhbWVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUoe1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQ6IHJlc3BvbnNlLFxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgZGF0YSA9IFwiXCI7XG4gICAgICAgICAgICAvLyBpZiB0aGUgcmVxdWVzdGVkIGRhdGEgaXMgdGV4dCAobm90IGF0dGFjaG1lbnQvbWVkaWEpIHNldCB0aGUgZW5jb2RpbmcgdG8gVVRGLThcbiAgICAgICAgICAgIGlmICghaXNNZWRpYSkge1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlLnNldEVuY29kaW5nKFwidXRmOFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlc3BvbnNlLm9uKFwiZGF0YVwiLCBjaHVuayA9PiB7XG4gICAgICAgICAgICAgICAgZGF0YSArPSBjaHVuaztcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmVzcG9uc2Uub24oXCJlbmRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXNDb2RlID49IDQwMCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVqZWN0KGdldEVycm9yQm9keShyZXNwb25zZSwgZGF0YSwgcmVzcG9uc2UuaGVhZGVycykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsZXQgcmVzdWx0O1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IGlzTWVkaWEgPyBkYXRhIDogZGF0YS5sZW5ndGggPiAwID8gSlNPTi5wYXJzZShkYXRhKSA6IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2ggKGV4Y2VwdGlvbikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVqZWN0KGV4Y2VwdGlvbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlc29sdmUoeyByZXN1bHQsIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIGh0dHBzUmVxdWVzdC5vbmNlKFwic29ja2V0XCIsIChzb2NrZXQpID0+IHtcbiAgICAgICAgICAgIGlmIChpc01lZGlhKSB7XG4gICAgICAgICAgICAgICAgc29ja2V0LnNldFRpbWVvdXQoY29ubmVjdGlvblBvbGljeS5NZWRpYVJlcXVlc3RUaW1lb3V0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHNvY2tldC5zZXRUaW1lb3V0KGNvbm5lY3Rpb25Qb2xpY3kuUmVxdWVzdFRpbWVvdXQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc29ja2V0Lm9uY2UoXCJ0aW1lb3V0XCIsIG9uVGltZW91dCk7XG4gICAgICAgICAgICBodHRwc1JlcXVlc3Qub25jZShcInJlc3BvbnNlXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICBzb2NrZXQucmVtb3ZlTGlzdGVuZXIoXCJ0aW1lb3V0XCIsIG9uVGltZW91dCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIGh0dHBzUmVxdWVzdC5vbmNlKFwiZXJyb3JcIiwgcmVqZWN0KTtcbiAgICAgICAgaWYgKGJvZHlbXCJzdHJlYW1cIl0gIT09IG51bGwpIHtcbiAgICAgICAgICAgIGJvZHlbXCJzdHJlYW1cIl0ucGlwZShodHRwc1JlcXVlc3QpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGJvZHlbXCJidWZmZXJcIl0gIT09IG51bGwpIHtcbiAgICAgICAgICAgIGh0dHBzUmVxdWVzdC53cml0ZShib2R5W1wiYnVmZmVyXCJdKTtcbiAgICAgICAgICAgIGh0dHBzUmVxdWVzdC5lbmQoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGh0dHBzUmVxdWVzdC5lbmQoKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0cy5jcmVhdGVSZXF1ZXN0T2JqZWN0ID0gY3JlYXRlUmVxdWVzdE9iamVjdDtcbi8qKlxuICogIENvbnN0cnVjdHMgdGhlIGVycm9yIGJvZHkgZnJvbSB0aGUgcmVzcG9uc2UgYW5kIHRoZSBkYXRhIHJldHVybmVkIGZyb20gdGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzcG9uc2UgLSByZXNwb25zZSBvYmplY3QgcmV0dXJuZWQgZnJvbSB0aGUgZXhlY3V0b24gb2YgYSByZXF1ZXN0LlxuICogQHBhcmFtIHtvYmplY3R9IGRhdGEgLSB0aGUgZGF0YSBib2R5IHJldHVybmVkIGZyb20gdGhlIGV4ZWN1dG9uIG9mIGEgcmVxdWVzdC5cbiAqIEBoaWRkZW5cbiAqL1xuZnVuY3Rpb24gZ2V0RXJyb3JCb2R5KHJlc3BvbnNlLCBkYXRhLCBoZWFkZXJzKSB7XG4gICAgY29uc3QgZXJyb3JCb2R5ID0ge1xuICAgICAgICBjb2RlOiByZXNwb25zZS5zdGF0dXNDb2RlLFxuICAgICAgICBib2R5OiBkYXRhLFxuICAgICAgICBoZWFkZXJzXG4gICAgfTtcbiAgICBpZiAoY29tbW9uXzEuQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkFjdGl2aXR5SWQgaW4gcmVzcG9uc2UuaGVhZGVycykge1xuICAgICAgICBlcnJvckJvZHkuYWN0aXZpdHlJZCA9IHJlc3BvbnNlLmhlYWRlcnNbY29tbW9uXzEuQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkFjdGl2aXR5SWRdO1xuICAgIH1cbiAgICBpZiAoY29tbW9uXzEuQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlN1YlN0YXR1cyBpbiByZXNwb25zZS5oZWFkZXJzKSB7XG4gICAgICAgIGVycm9yQm9keS5zdWJzdGF0dXMgPSBwYXJzZUludChyZXNwb25zZS5oZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5TdWJTdGF0dXNdLCAxMCk7XG4gICAgfVxuICAgIGlmIChjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuUmV0cnlBZnRlckluTWlsbGlzZWNvbmRzIGluIHJlc3BvbnNlLmhlYWRlcnMpIHtcbiAgICAgICAgZXJyb3JCb2R5LnJldHJ5QWZ0ZXJJbk1pbGxpc2Vjb25kcyA9IHBhcnNlSW50KHJlc3BvbnNlLmhlYWRlcnNbY29tbW9uXzEuQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlJldHJ5QWZ0ZXJJbk1pbGxpc2Vjb25kc10sIDEwKTtcbiAgICB9XG4gICAgcmV0dXJuIGVycm9yQm9keTtcbn1cbmZ1bmN0aW9uIGdldEhlYWRlcnMoYXV0aE9wdGlvbnMsIGRlZmF1bHRIZWFkZXJzLCB2ZXJiLCBwYXRoLCByZXNvdXJjZUlkLCByZXNvdXJjZVR5cGUsIG9wdGlvbnMsIHBhcnRpdGlvbktleVJhbmdlSWQsIHVzZU11bHRpcGxlV3JpdGVMb2NhdGlvbnMpIHtcbiAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0SGVhZGVycyk7XG4gICAgICAgIGNvbnN0IG9wdHMgPSAob3B0aW9ucyB8fCB7fSk7IC8vIFRPRE86IHRoaXMgaXMgZGlydHlcbiAgICAgICAgaWYgKHVzZU11bHRpcGxlV3JpdGVMb2NhdGlvbnMpIHtcbiAgICAgICAgICAgIGhlYWRlcnNbY29tbW9uXzEuQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkFMTE9XX01VTFRJUExFX1dSSVRFU10gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRzLmNvbnRpbnVhdGlvbikge1xuICAgICAgICAgICAgaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuQ29udGludWF0aW9uXSA9IG9wdHMuY29udGludWF0aW9uO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRzLnByZVRyaWdnZXJJbmNsdWRlKSB7XG4gICAgICAgICAgICBoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5QcmVUcmlnZ2VySW5jbHVkZV0gPVxuICAgICAgICAgICAgICAgIG9wdHMucHJlVHJpZ2dlckluY2x1ZGUuY29uc3RydWN0b3IgPT09IEFycmF5XG4gICAgICAgICAgICAgICAgICAgID8gb3B0cy5wcmVUcmlnZ2VySW5jbHVkZS5qb2luKFwiLFwiKVxuICAgICAgICAgICAgICAgICAgICA6IG9wdHMucHJlVHJpZ2dlckluY2x1ZGU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdHMucG9zdFRyaWdnZXJJbmNsdWRlKSB7XG4gICAgICAgICAgICBoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5Qb3N0VHJpZ2dlckluY2x1ZGVdID1cbiAgICAgICAgICAgICAgICBvcHRzLnBvc3RUcmlnZ2VySW5jbHVkZS5jb25zdHJ1Y3RvciA9PT0gQXJyYXlcbiAgICAgICAgICAgICAgICAgICAgPyBvcHRzLnBvc3RUcmlnZ2VySW5jbHVkZS5qb2luKFwiLFwiKVxuICAgICAgICAgICAgICAgICAgICA6IG9wdHMucG9zdFRyaWdnZXJJbmNsdWRlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRzLm9mZmVyVHlwZSkge1xuICAgICAgICAgICAgaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuT2ZmZXJUeXBlXSA9IG9wdHMub2ZmZXJUeXBlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRzLm9mZmVyVGhyb3VnaHB1dCkge1xuICAgICAgICAgICAgaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuT2ZmZXJUaHJvdWdocHV0XSA9IG9wdHMub2ZmZXJUaHJvdWdocHV0O1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRzLm1heEl0ZW1Db3VudCkge1xuICAgICAgICAgICAgaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuUGFnZVNpemVdID0gb3B0cy5tYXhJdGVtQ291bnQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdHMuYWNjZXNzQ29uZGl0aW9uKSB7XG4gICAgICAgICAgICBpZiAob3B0cy5hY2Nlc3NDb25kaXRpb24udHlwZSA9PT0gXCJJZk1hdGNoXCIpIHtcbiAgICAgICAgICAgICAgICBoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5JZk1hdGNoXSA9IG9wdHMuYWNjZXNzQ29uZGl0aW9uLmNvbmRpdGlvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGhlYWRlcnNbY29tbW9uXzEuQ29uc3RhbnRzLkh0dHBIZWFkZXJzLklmTm9uZU1hdGNoXSA9IG9wdHMuYWNjZXNzQ29uZGl0aW9uLmNvbmRpdGlvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0cy5hX2ltKSB7XG4gICAgICAgICAgICBoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5BX0lNXSA9IG9wdHMuYV9pbTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0cy5pbmRleGluZ0RpcmVjdGl2ZSkge1xuICAgICAgICAgICAgaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuSW5kZXhpbmdEaXJlY3RpdmVdID0gb3B0cy5pbmRleGluZ0RpcmVjdGl2ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0cy5jb25zaXN0ZW5jeUxldmVsKSB7XG4gICAgICAgICAgICBoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5Db25zaXN0ZW5jeUxldmVsXSA9IG9wdHMuY29uc2lzdGVuY3lMZXZlbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0cy5yZXNvdXJjZVRva2VuRXhwaXJ5U2Vjb25kcykge1xuICAgICAgICAgICAgaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuUmVzb3VyY2VUb2tlbkV4cGlyeV0gPSBvcHRzLnJlc291cmNlVG9rZW5FeHBpcnlTZWNvbmRzO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRzLnNlc3Npb25Ub2tlbikge1xuICAgICAgICAgICAgaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuU2Vzc2lvblRva2VuXSA9IG9wdHMuc2Vzc2lvblRva2VuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRzLmVuYWJsZVNjYW5JblF1ZXJ5KSB7XG4gICAgICAgICAgICBoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5FbmFibGVTY2FuSW5RdWVyeV0gPSBvcHRzLmVuYWJsZVNjYW5JblF1ZXJ5O1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRzLmVuYWJsZUNyb3NzUGFydGl0aW9uUXVlcnkpIHtcbiAgICAgICAgICAgIGhlYWRlcnNbY29tbW9uXzEuQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkVuYWJsZUNyb3NzUGFydGl0aW9uUXVlcnldID0gb3B0cy5lbmFibGVDcm9zc1BhcnRpdGlvblF1ZXJ5O1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRzLnBvcHVsYXRlUXVvdGFJbmZvKSB7XG4gICAgICAgICAgICBoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5Qb3B1bGF0ZVF1b3RhSW5mb10gPSBvcHRzLnBvcHVsYXRlUXVvdGFJbmZvO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRzLnBvcHVsYXRlUXVlcnlNZXRyaWNzKSB7XG4gICAgICAgICAgICBoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5Qb3B1bGF0ZVF1ZXJ5TWV0cmljc10gPSBvcHRzLnBvcHVsYXRlUXVlcnlNZXRyaWNzO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRzLm1heERlZ3JlZU9mUGFyYWxsZWxpc20gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuUGFyYWxsZWxpemVDcm9zc1BhcnRpdGlvblF1ZXJ5XSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdHMucG9wdWxhdGVRdW90YUluZm8pIHtcbiAgICAgICAgICAgIGhlYWRlcnNbY29tbW9uXzEuQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlBvcHVsYXRlUXVvdGFJbmZvXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdHMucGFydGl0aW9uS2V5ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGxldCBwYXJ0aXRpb25LZXkgPSBvcHRzLnBhcnRpdGlvbktleTtcbiAgICAgICAgICAgIGlmIChwYXJ0aXRpb25LZXkgPT09IG51bGwgfHwgIUFycmF5LmlzQXJyYXkocGFydGl0aW9uS2V5KSkge1xuICAgICAgICAgICAgICAgIHBhcnRpdGlvbktleSA9IFtwYXJ0aXRpb25LZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuUGFydGl0aW9uS2V5XSA9IGNvbW1vbl8xLkhlbHBlci5qc29uU3RyaW5naWZ5QW5kRXNjYXBlTm9uQVNDSUkocGFydGl0aW9uS2V5KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYXV0aE9wdGlvbnMubWFzdGVyS2V5IHx8IGF1dGhPcHRpb25zLnRva2VuUHJvdmlkZXIpIHtcbiAgICAgICAgICAgIGhlYWRlcnNbY29tbW9uXzEuQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlhEYXRlXSA9IG5ldyBEYXRlKCkudG9VVENTdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmVyYiA9PT0gXCJwb3N0XCIgfHwgdmVyYiA9PT0gXCJwdXRcIikge1xuICAgICAgICAgICAgaWYgKCFoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5Db250ZW50VHlwZV0pIHtcbiAgICAgICAgICAgICAgICBoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5Db250ZW50VHlwZV0gPSBjb21tb25fMS5Db25zdGFudHMuTWVkaWFUeXBlcy5Kc29uO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuQWNjZXB0XSkge1xuICAgICAgICAgICAgaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuQWNjZXB0XSA9IGNvbW1vbl8xLkNvbnN0YW50cy5NZWRpYVR5cGVzLkpzb247XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHBhcnRpdGlvbktleVJhbmdlSWQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaGVhZGVyc1tjb21tb25fMS5Db25zdGFudHMuSHR0cEhlYWRlcnMuUGFydGl0aW9uS2V5UmFuZ2VJRF0gPSBwYXJ0aXRpb25LZXlSYW5nZUlkO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRzLmVuYWJsZVNjcmlwdExvZ2dpbmcpIHtcbiAgICAgICAgICAgIGhlYWRlcnNbY29tbW9uXzEuQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkVuYWJsZVNjcmlwdExvZ2dpbmddID0gb3B0cy5lbmFibGVTY3JpcHRMb2dnaW5nO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRzLm9mZmVyRW5hYmxlUlVQZXJNaW51dGVUaHJvdWdocHV0KSB7XG4gICAgICAgICAgICBoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5PZmZlcklzUlVQZXJNaW51dGVUaHJvdWdocHV0RW5hYmxlZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRzLmRpc2FibGVSVVBlck1pbnV0ZVVzYWdlKSB7XG4gICAgICAgICAgICBoZWFkZXJzW2NvbW1vbl8xLkNvbnN0YW50cy5IdHRwSGVhZGVycy5EaXNhYmxlUlVQZXJNaW51dGVVc2FnZV0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhdXRoT3B0aW9ucy5tYXN0ZXJLZXkgfHwgYXV0aE9wdGlvbnMucmVzb3VyY2VUb2tlbnMgfHwgYXV0aE9wdGlvbnMudG9rZW5Qcm92aWRlciB8fCBhdXRoT3B0aW9ucy5wZXJtaXNzaW9uRmVlZCkge1xuICAgICAgICAgICAgY29uc3QgdG9rZW4gPSB5aWVsZCBhdXRoXzEuQXV0aEhhbmRsZXIuZ2V0QXV0aG9yaXphdGlvbkhlYWRlcihhdXRoT3B0aW9ucywgdmVyYiwgcGF0aCwgcmVzb3VyY2VJZCwgcmVzb3VyY2VUeXBlLCBoZWFkZXJzKTtcbiAgICAgICAgICAgIGhlYWRlcnNbY29tbW9uXzEuQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkF1dGhvcml6YXRpb25dID0gdG9rZW47XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGhlYWRlcnM7XG4gICAgfSk7XG59XG5leHBvcnRzLmdldEhlYWRlcnMgPSBnZXRIZWFkZXJzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/request/request.js\n");

/***/ }),

/***/ "./lib/retry/defaultRetryPolicy.js":
/*!*****************************************!*\
  !*** ./lib/retry/defaultRetryPolicy.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/**\n * This class implements the default connection retry policy for requests.\n * @property {int} currentRetryAttemptCount           - Current retry attempt count.\n * @hidden\n */\nclass DefaultRetryPolicy {\n    /**\n     * @constructor ResourceThrottleRetryPolicy\n     * @param {string} operationType - The type of operation being performed.\n     */\n    constructor(operationType) {\n        this.operationType = operationType;\n        this.maxRetryAttemptCount = 10;\n        this.currentRetryAttemptCount = 0;\n        this.retryAfterInMilliseconds = 1000;\n        // Windows Socket Error Codes\n        this.WindowsInterruptedFunctionCall = 10004;\n        this.WindowsFileHandleNotValid = 10009;\n        this.WindowsPermissionDenied = 10013;\n        this.WindowsBadAddress = 10014;\n        this.WindowsInvalidArgumnet = 10022;\n        this.WindowsResourceTemporarilyUnavailable = 10035;\n        this.WindowsOperationNowInProgress = 10036;\n        this.WindowsAddressAlreadyInUse = 10048;\n        this.WindowsConnectionResetByPeer = 10054;\n        this.WindowsCannotSendAfterSocketShutdown = 10058;\n        this.WindowsConnectionTimedOut = 10060;\n        this.WindowsConnectionRefused = 10061;\n        this.WindowsNameTooLong = 10063;\n        this.WindowsHostIsDown = 10064;\n        this.WindowsNoRouteTohost = 10065;\n        // Linux Error Codes\n        this.LinuxConnectionReset = \"ECONNRESET\";\n        this.CONNECTION_ERROR_CODES = [\n            this.WindowsInterruptedFunctionCall,\n            this.WindowsFileHandleNotValid,\n            this.WindowsPermissionDenied,\n            this.WindowsBadAddress,\n            this.WindowsInvalidArgumnet,\n            this.WindowsResourceTemporarilyUnavailable,\n            this.WindowsOperationNowInProgress,\n            this.WindowsAddressAlreadyInUse,\n            this.WindowsConnectionResetByPeer,\n            this.WindowsCannotSendAfterSocketShutdown,\n            this.WindowsConnectionTimedOut,\n            this.WindowsConnectionRefused,\n            this.WindowsNameTooLong,\n            this.WindowsHostIsDown,\n            this.WindowsNoRouteTohost,\n            this.LinuxConnectionReset\n        ];\n    }\n    /**\n     * Determines whether the request should be retried or not.\n     * @param {object} err - Error returned by the request.\n     * @param {function} callback - The callback function which takes bool argument which\n     *                              specifies whether the request will be retried or not.\n     */\n    shouldRetry(err) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (err) {\n                if (this.currentRetryAttemptCount < this.maxRetryAttemptCount && this.needs_retry(err.code)) {\n                    this.currentRetryAttemptCount++;\n                    return true;\n                }\n            }\n            return false;\n        });\n    }\n    needs_retry(code) {\n        if ((this.operationType === \"read\" || this.operationType === \"query\") &&\n            this.CONNECTION_ERROR_CODES.indexOf(code) !== -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n}\nexports.DefaultRetryPolicy = DefaultRetryPolicy;\n//# sourceMappingURL=defaultRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcmV0cnkvZGVmYXVsdFJldHJ5UG9saWN5LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3JldHJ5L2RlZmF1bHRSZXRyeVBvbGljeS5qcz8wNTJmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbi8qKlxuICogVGhpcyBjbGFzcyBpbXBsZW1lbnRzIHRoZSBkZWZhdWx0IGNvbm5lY3Rpb24gcmV0cnkgcG9saWN5IGZvciByZXF1ZXN0cy5cbiAqIEBwcm9wZXJ0eSB7aW50fSBjdXJyZW50UmV0cnlBdHRlbXB0Q291bnQgICAgICAgICAgIC0gQ3VycmVudCByZXRyeSBhdHRlbXB0IGNvdW50LlxuICogQGhpZGRlblxuICovXG5jbGFzcyBEZWZhdWx0UmV0cnlQb2xpY3kge1xuICAgIC8qKlxuICAgICAqIEBjb25zdHJ1Y3RvciBSZXNvdXJjZVRocm90dGxlUmV0cnlQb2xpY3lcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gb3BlcmF0aW9uVHlwZSAtIFRoZSB0eXBlIG9mIG9wZXJhdGlvbiBiZWluZyBwZXJmb3JtZWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3Iob3BlcmF0aW9uVHlwZSkge1xuICAgICAgICB0aGlzLm9wZXJhdGlvblR5cGUgPSBvcGVyYXRpb25UeXBlO1xuICAgICAgICB0aGlzLm1heFJldHJ5QXR0ZW1wdENvdW50ID0gMTA7XG4gICAgICAgIHRoaXMuY3VycmVudFJldHJ5QXR0ZW1wdENvdW50ID0gMDtcbiAgICAgICAgdGhpcy5yZXRyeUFmdGVySW5NaWxsaXNlY29uZHMgPSAxMDAwO1xuICAgICAgICAvLyBXaW5kb3dzIFNvY2tldCBFcnJvciBDb2Rlc1xuICAgICAgICB0aGlzLldpbmRvd3NJbnRlcnJ1cHRlZEZ1bmN0aW9uQ2FsbCA9IDEwMDA0O1xuICAgICAgICB0aGlzLldpbmRvd3NGaWxlSGFuZGxlTm90VmFsaWQgPSAxMDAwOTtcbiAgICAgICAgdGhpcy5XaW5kb3dzUGVybWlzc2lvbkRlbmllZCA9IDEwMDEzO1xuICAgICAgICB0aGlzLldpbmRvd3NCYWRBZGRyZXNzID0gMTAwMTQ7XG4gICAgICAgIHRoaXMuV2luZG93c0ludmFsaWRBcmd1bW5ldCA9IDEwMDIyO1xuICAgICAgICB0aGlzLldpbmRvd3NSZXNvdXJjZVRlbXBvcmFyaWx5VW5hdmFpbGFibGUgPSAxMDAzNTtcbiAgICAgICAgdGhpcy5XaW5kb3dzT3BlcmF0aW9uTm93SW5Qcm9ncmVzcyA9IDEwMDM2O1xuICAgICAgICB0aGlzLldpbmRvd3NBZGRyZXNzQWxyZWFkeUluVXNlID0gMTAwNDg7XG4gICAgICAgIHRoaXMuV2luZG93c0Nvbm5lY3Rpb25SZXNldEJ5UGVlciA9IDEwMDU0O1xuICAgICAgICB0aGlzLldpbmRvd3NDYW5ub3RTZW5kQWZ0ZXJTb2NrZXRTaHV0ZG93biA9IDEwMDU4O1xuICAgICAgICB0aGlzLldpbmRvd3NDb25uZWN0aW9uVGltZWRPdXQgPSAxMDA2MDtcbiAgICAgICAgdGhpcy5XaW5kb3dzQ29ubmVjdGlvblJlZnVzZWQgPSAxMDA2MTtcbiAgICAgICAgdGhpcy5XaW5kb3dzTmFtZVRvb0xvbmcgPSAxMDA2MztcbiAgICAgICAgdGhpcy5XaW5kb3dzSG9zdElzRG93biA9IDEwMDY0O1xuICAgICAgICB0aGlzLldpbmRvd3NOb1JvdXRlVG9ob3N0ID0gMTAwNjU7XG4gICAgICAgIC8vIExpbnV4IEVycm9yIENvZGVzXG4gICAgICAgIHRoaXMuTGludXhDb25uZWN0aW9uUmVzZXQgPSBcIkVDT05OUkVTRVRcIjtcbiAgICAgICAgdGhpcy5DT05ORUNUSU9OX0VSUk9SX0NPREVTID0gW1xuICAgICAgICAgICAgdGhpcy5XaW5kb3dzSW50ZXJydXB0ZWRGdW5jdGlvbkNhbGwsXG4gICAgICAgICAgICB0aGlzLldpbmRvd3NGaWxlSGFuZGxlTm90VmFsaWQsXG4gICAgICAgICAgICB0aGlzLldpbmRvd3NQZXJtaXNzaW9uRGVuaWVkLFxuICAgICAgICAgICAgdGhpcy5XaW5kb3dzQmFkQWRkcmVzcyxcbiAgICAgICAgICAgIHRoaXMuV2luZG93c0ludmFsaWRBcmd1bW5ldCxcbiAgICAgICAgICAgIHRoaXMuV2luZG93c1Jlc291cmNlVGVtcG9yYXJpbHlVbmF2YWlsYWJsZSxcbiAgICAgICAgICAgIHRoaXMuV2luZG93c09wZXJhdGlvbk5vd0luUHJvZ3Jlc3MsXG4gICAgICAgICAgICB0aGlzLldpbmRvd3NBZGRyZXNzQWxyZWFkeUluVXNlLFxuICAgICAgICAgICAgdGhpcy5XaW5kb3dzQ29ubmVjdGlvblJlc2V0QnlQZWVyLFxuICAgICAgICAgICAgdGhpcy5XaW5kb3dzQ2Fubm90U2VuZEFmdGVyU29ja2V0U2h1dGRvd24sXG4gICAgICAgICAgICB0aGlzLldpbmRvd3NDb25uZWN0aW9uVGltZWRPdXQsXG4gICAgICAgICAgICB0aGlzLldpbmRvd3NDb25uZWN0aW9uUmVmdXNlZCxcbiAgICAgICAgICAgIHRoaXMuV2luZG93c05hbWVUb29Mb25nLFxuICAgICAgICAgICAgdGhpcy5XaW5kb3dzSG9zdElzRG93bixcbiAgICAgICAgICAgIHRoaXMuV2luZG93c05vUm91dGVUb2hvc3QsXG4gICAgICAgICAgICB0aGlzLkxpbnV4Q29ubmVjdGlvblJlc2V0XG4gICAgICAgIF07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERldGVybWluZXMgd2hldGhlciB0aGUgcmVxdWVzdCBzaG91bGQgYmUgcmV0cmllZCBvciBub3QuXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGVyciAtIEVycm9yIHJldHVybmVkIGJ5IHRoZSByZXF1ZXN0LlxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrIC0gVGhlIGNhbGxiYWNrIGZ1bmN0aW9uIHdoaWNoIHRha2VzIGJvb2wgYXJndW1lbnQgd2hpY2hcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNwZWNpZmllcyB3aGV0aGVyIHRoZSByZXF1ZXN0IHdpbGwgYmUgcmV0cmllZCBvciBub3QuXG4gICAgICovXG4gICAgc2hvdWxkUmV0cnkoZXJyKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50UmV0cnlBdHRlbXB0Q291bnQgPCB0aGlzLm1heFJldHJ5QXR0ZW1wdENvdW50ICYmIHRoaXMubmVlZHNfcmV0cnkoZXJyLmNvZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFJldHJ5QXR0ZW1wdENvdW50Kys7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIG5lZWRzX3JldHJ5KGNvZGUpIHtcbiAgICAgICAgaWYgKCh0aGlzLm9wZXJhdGlvblR5cGUgPT09IFwicmVhZFwiIHx8IHRoaXMub3BlcmF0aW9uVHlwZSA9PT0gXCJxdWVyeVwiKSAmJlxuICAgICAgICAgICAgdGhpcy5DT05ORUNUSU9OX0VSUk9SX0NPREVTLmluZGV4T2YoY29kZSkgIT09IC0xKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuRGVmYXVsdFJldHJ5UG9saWN5ID0gRGVmYXVsdFJldHJ5UG9saWN5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmYXVsdFJldHJ5UG9saWN5LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/retry/defaultRetryPolicy.js\n");

/***/ }),

/***/ "./lib/retry/endpointDiscoveryRetryPolicy.js":
/*!***************************************************!*\
  !*** ./lib/retry/endpointDiscoveryRetryPolicy.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../common */ \"./lib/common/index.js\");\n/**\n * This class implements the retry policy for endpoint discovery.\n * @hidden\n */\nclass EndpointDiscoveryRetryPolicy {\n    /**\n     * @constructor EndpointDiscoveryRetryPolicy\n     * @param {object} globalEndpointManager The GlobalEndpointManager instance.\n     */\n    constructor(globalEndpointManager, request) {\n        this.globalEndpointManager = globalEndpointManager;\n        this.request = request;\n        this.maxRetryAttemptCount = EndpointDiscoveryRetryPolicy.maxRetryAttemptCount;\n        this.currentRetryAttemptCount = 0;\n        this.retryAfterInMilliseconds = EndpointDiscoveryRetryPolicy.retryAfterInMilliseconds;\n    }\n    /**\n     * Determines whether the request should be retried or not.\n     * @param {object} err - Error returned by the request.\n     */\n    shouldRetry(err, retryContext, locationEndpoint) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!err) {\n                return false;\n            }\n            if (!retryContext || !locationEndpoint) {\n                return false;\n            }\n            if (!this.globalEndpointManager.enableEndpointDiscovery) {\n                return false;\n            }\n            if (this.currentRetryAttemptCount >= this.maxRetryAttemptCount) {\n                return false;\n            }\n            this.currentRetryAttemptCount++;\n            if (common_1.Helper.isReadRequest(this.request)) {\n                this.globalEndpointManager.markCurrentLocationUnavailableForRead(locationEndpoint);\n            }\n            else {\n                this.globalEndpointManager.markCurrentLocationUnavailableForWrite(locationEndpoint);\n            }\n            // Check location index increment\n            // TODO: Tracing\n            // console.log(\"Write region was changed, refreshing the regions list from database account\n            // and will retry the request.\");\n            yield this.globalEndpointManager.refreshEndpointList();\n            retryContext.retryCount = this.currentRetryAttemptCount;\n            retryContext.clearSessionTokenNotAvailable = false;\n            retryContext.retryRequestOnPreferredLocations = false;\n            return true;\n        });\n    }\n}\nEndpointDiscoveryRetryPolicy.maxRetryAttemptCount = 120; // TODO: Constant?\nEndpointDiscoveryRetryPolicy.retryAfterInMilliseconds = 1000;\nexports.EndpointDiscoveryRetryPolicy = EndpointDiscoveryRetryPolicy;\n//# sourceMappingURL=endpointDiscoveryRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcmV0cnkvZW5kcG9pbnREaXNjb3ZlcnlSZXRyeVBvbGljeS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9yZXRyeS9lbmRwb2ludERpc2NvdmVyeVJldHJ5UG9saWN5LmpzPzk1YzYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgY29tbW9uXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uXCIpO1xuLyoqXG4gKiBUaGlzIGNsYXNzIGltcGxlbWVudHMgdGhlIHJldHJ5IHBvbGljeSBmb3IgZW5kcG9pbnQgZGlzY292ZXJ5LlxuICogQGhpZGRlblxuICovXG5jbGFzcyBFbmRwb2ludERpc2NvdmVyeVJldHJ5UG9saWN5IHtcbiAgICAvKipcbiAgICAgKiBAY29uc3RydWN0b3IgRW5kcG9pbnREaXNjb3ZlcnlSZXRyeVBvbGljeVxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBnbG9iYWxFbmRwb2ludE1hbmFnZXIgVGhlIEdsb2JhbEVuZHBvaW50TWFuYWdlciBpbnN0YW5jZS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihnbG9iYWxFbmRwb2ludE1hbmFnZXIsIHJlcXVlc3QpIHtcbiAgICAgICAgdGhpcy5nbG9iYWxFbmRwb2ludE1hbmFnZXIgPSBnbG9iYWxFbmRwb2ludE1hbmFnZXI7XG4gICAgICAgIHRoaXMucmVxdWVzdCA9IHJlcXVlc3Q7XG4gICAgICAgIHRoaXMubWF4UmV0cnlBdHRlbXB0Q291bnQgPSBFbmRwb2ludERpc2NvdmVyeVJldHJ5UG9saWN5Lm1heFJldHJ5QXR0ZW1wdENvdW50O1xuICAgICAgICB0aGlzLmN1cnJlbnRSZXRyeUF0dGVtcHRDb3VudCA9IDA7XG4gICAgICAgIHRoaXMucmV0cnlBZnRlckluTWlsbGlzZWNvbmRzID0gRW5kcG9pbnREaXNjb3ZlcnlSZXRyeVBvbGljeS5yZXRyeUFmdGVySW5NaWxsaXNlY29uZHM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERldGVybWluZXMgd2hldGhlciB0aGUgcmVxdWVzdCBzaG91bGQgYmUgcmV0cmllZCBvciBub3QuXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGVyciAtIEVycm9yIHJldHVybmVkIGJ5IHRoZSByZXF1ZXN0LlxuICAgICAqL1xuICAgIHNob3VsZFJldHJ5KGVyciwgcmV0cnlDb250ZXh0LCBsb2NhdGlvbkVuZHBvaW50KSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmICghZXJyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFyZXRyeUNvbnRleHQgfHwgIWxvY2F0aW9uRW5kcG9pbnQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXRoaXMuZ2xvYmFsRW5kcG9pbnRNYW5hZ2VyLmVuYWJsZUVuZHBvaW50RGlzY292ZXJ5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuY3VycmVudFJldHJ5QXR0ZW1wdENvdW50ID49IHRoaXMubWF4UmV0cnlBdHRlbXB0Q291bnQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRSZXRyeUF0dGVtcHRDb3VudCsrO1xuICAgICAgICAgICAgaWYgKGNvbW1vbl8xLkhlbHBlci5pc1JlYWRSZXF1ZXN0KHRoaXMucmVxdWVzdCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdsb2JhbEVuZHBvaW50TWFuYWdlci5tYXJrQ3VycmVudExvY2F0aW9uVW5hdmFpbGFibGVGb3JSZWFkKGxvY2F0aW9uRW5kcG9pbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5nbG9iYWxFbmRwb2ludE1hbmFnZXIubWFya0N1cnJlbnRMb2NhdGlvblVuYXZhaWxhYmxlRm9yV3JpdGUobG9jYXRpb25FbmRwb2ludCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBDaGVjayBsb2NhdGlvbiBpbmRleCBpbmNyZW1lbnRcbiAgICAgICAgICAgIC8vIFRPRE86IFRyYWNpbmdcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiV3JpdGUgcmVnaW9uIHdhcyBjaGFuZ2VkLCByZWZyZXNoaW5nIHRoZSByZWdpb25zIGxpc3QgZnJvbSBkYXRhYmFzZSBhY2NvdW50XG4gICAgICAgICAgICAvLyBhbmQgd2lsbCByZXRyeSB0aGUgcmVxdWVzdC5cIik7XG4gICAgICAgICAgICB5aWVsZCB0aGlzLmdsb2JhbEVuZHBvaW50TWFuYWdlci5yZWZyZXNoRW5kcG9pbnRMaXN0KCk7XG4gICAgICAgICAgICByZXRyeUNvbnRleHQucmV0cnlDb3VudCA9IHRoaXMuY3VycmVudFJldHJ5QXR0ZW1wdENvdW50O1xuICAgICAgICAgICAgcmV0cnlDb250ZXh0LmNsZWFyU2Vzc2lvblRva2VuTm90QXZhaWxhYmxlID0gZmFsc2U7XG4gICAgICAgICAgICByZXRyeUNvbnRleHQucmV0cnlSZXF1ZXN0T25QcmVmZXJyZWRMb2NhdGlvbnMgPSBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5FbmRwb2ludERpc2NvdmVyeVJldHJ5UG9saWN5Lm1heFJldHJ5QXR0ZW1wdENvdW50ID0gMTIwOyAvLyBUT0RPOiBDb25zdGFudD9cbkVuZHBvaW50RGlzY292ZXJ5UmV0cnlQb2xpY3kucmV0cnlBZnRlckluTWlsbGlzZWNvbmRzID0gMTAwMDtcbmV4cG9ydHMuRW5kcG9pbnREaXNjb3ZlcnlSZXRyeVBvbGljeSA9IEVuZHBvaW50RGlzY292ZXJ5UmV0cnlQb2xpY3k7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbmRwb2ludERpc2NvdmVyeVJldHJ5UG9saWN5LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/retry/endpointDiscoveryRetryPolicy.js\n");

/***/ }),

/***/ "./lib/retry/index.js":
/*!****************************!*\
  !*** ./lib/retry/index.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./retryOptions */ \"./lib/retry/retryOptions.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./endpointDiscoveryRetryPolicy */ \"./lib/retry/endpointDiscoveryRetryPolicy.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./resourceThrottleRetryPolicy */ \"./lib/retry/resourceThrottleRetryPolicy.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./sessionRetryPolicy */ \"./lib/retry/sessionRetryPolicy.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./retryUtility */ \"./lib/retry/retryUtility.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcmV0cnkvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvcmV0cnkvaW5kZXguanM/MDI4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9yZXRyeU9wdGlvbnNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZW5kcG9pbnREaXNjb3ZlcnlSZXRyeVBvbGljeVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9yZXNvdXJjZVRocm90dGxlUmV0cnlQb2xpY3lcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2Vzc2lvblJldHJ5UG9saWN5XCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3JldHJ5VXRpbGl0eVwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/retry/index.js\n");

/***/ }),

/***/ "./lib/retry/resourceThrottleRetryPolicy.js":
/*!**************************************************!*\
  !*** ./lib/retry/resourceThrottleRetryPolicy.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/**\n * This class implements the resource throttle retry policy for requests.\n * @hidden\n */\nclass ResourceThrottleRetryPolicy {\n    /**\n     * @constructor ResourceThrottleRetryPolicy\n     * @param {int} maxRetryAttemptCount               - Max number of retries to be performed for a request.\n     * @param {int} fixedRetryIntervalInMilliseconds   - Fixed retry interval in milliseconds to wait between each \\\n     * retry ignoring the retryAfter returned as part of the response.\n     * @param {int} maxWaitTimeInSeconds               - Max wait time in seconds to wait for a request while the \\\n     * retries are happening.\n     */\n    constructor(maxRetryAttemptCount, fixedRetryIntervalInMilliseconds, maxWaitTimeInSeconds) {\n        this.maxRetryAttemptCount = maxRetryAttemptCount;\n        this.fixedRetryIntervalInMilliseconds = fixedRetryIntervalInMilliseconds;\n        /** Current retry attempt count. */\n        this.currentRetryAttemptCount = 0;\n        /** Cummulative wait time in milliseconds for a request while the retries are happening. */\n        this.cummulativeWaitTimeinMilliseconds = 0;\n        /** Max wait time in milliseconds to wait for a request while the retries are happening. */\n        this.retryAfterInMilliseconds = 0;\n        this.maxWaitTimeInMilliseconds = maxWaitTimeInSeconds * 1000;\n        this.currentRetryAttemptCount = 0;\n        this.cummulativeWaitTimeinMilliseconds = 0;\n    }\n    /**\n     * Determines whether the request should be retried or not.\n     * @param {object} err - Error returned by the request.\n     */\n    shouldRetry(err) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            // TODO: any custom error object\n            if (err) {\n                if (this.currentRetryAttemptCount < this.maxRetryAttemptCount) {\n                    this.currentRetryAttemptCount++;\n                    this.retryAfterInMilliseconds = 0;\n                    if (this.fixedRetryIntervalInMilliseconds) {\n                        this.retryAfterInMilliseconds = this.fixedRetryIntervalInMilliseconds;\n                    }\n                    else if (err.retryAfterInMilliseconds) {\n                        this.retryAfterInMilliseconds = err.retryAfterInMilliseconds;\n                    }\n                    if (this.cummulativeWaitTimeinMilliseconds < this.maxWaitTimeInMilliseconds) {\n                        this.cummulativeWaitTimeinMilliseconds += this.retryAfterInMilliseconds;\n                        return true;\n                    }\n                }\n            }\n            return false;\n        });\n    }\n}\nexports.ResourceThrottleRetryPolicy = ResourceThrottleRetryPolicy;\n//# sourceMappingURL=resourceThrottleRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcmV0cnkvcmVzb3VyY2VUaHJvdHRsZVJldHJ5UG9saWN5LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3JldHJ5L3Jlc291cmNlVGhyb3R0bGVSZXRyeVBvbGljeS5qcz83YWJjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbi8qKlxuICogVGhpcyBjbGFzcyBpbXBsZW1lbnRzIHRoZSByZXNvdXJjZSB0aHJvdHRsZSByZXRyeSBwb2xpY3kgZm9yIHJlcXVlc3RzLlxuICogQGhpZGRlblxuICovXG5jbGFzcyBSZXNvdXJjZVRocm90dGxlUmV0cnlQb2xpY3kge1xuICAgIC8qKlxuICAgICAqIEBjb25zdHJ1Y3RvciBSZXNvdXJjZVRocm90dGxlUmV0cnlQb2xpY3lcbiAgICAgKiBAcGFyYW0ge2ludH0gbWF4UmV0cnlBdHRlbXB0Q291bnQgICAgICAgICAgICAgICAtIE1heCBudW1iZXIgb2YgcmV0cmllcyB0byBiZSBwZXJmb3JtZWQgZm9yIGEgcmVxdWVzdC5cbiAgICAgKiBAcGFyYW0ge2ludH0gZml4ZWRSZXRyeUludGVydmFsSW5NaWxsaXNlY29uZHMgICAtIEZpeGVkIHJldHJ5IGludGVydmFsIGluIG1pbGxpc2Vjb25kcyB0byB3YWl0IGJldHdlZW4gZWFjaCBcXFxuICAgICAqIHJldHJ5IGlnbm9yaW5nIHRoZSByZXRyeUFmdGVyIHJldHVybmVkIGFzIHBhcnQgb2YgdGhlIHJlc3BvbnNlLlxuICAgICAqIEBwYXJhbSB7aW50fSBtYXhXYWl0VGltZUluU2Vjb25kcyAgICAgICAgICAgICAgIC0gTWF4IHdhaXQgdGltZSBpbiBzZWNvbmRzIHRvIHdhaXQgZm9yIGEgcmVxdWVzdCB3aGlsZSB0aGUgXFxcbiAgICAgKiByZXRyaWVzIGFyZSBoYXBwZW5pbmcuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IobWF4UmV0cnlBdHRlbXB0Q291bnQsIGZpeGVkUmV0cnlJbnRlcnZhbEluTWlsbGlzZWNvbmRzLCBtYXhXYWl0VGltZUluU2Vjb25kcykge1xuICAgICAgICB0aGlzLm1heFJldHJ5QXR0ZW1wdENvdW50ID0gbWF4UmV0cnlBdHRlbXB0Q291bnQ7XG4gICAgICAgIHRoaXMuZml4ZWRSZXRyeUludGVydmFsSW5NaWxsaXNlY29uZHMgPSBmaXhlZFJldHJ5SW50ZXJ2YWxJbk1pbGxpc2Vjb25kcztcbiAgICAgICAgLyoqIEN1cnJlbnQgcmV0cnkgYXR0ZW1wdCBjb3VudC4gKi9cbiAgICAgICAgdGhpcy5jdXJyZW50UmV0cnlBdHRlbXB0Q291bnQgPSAwO1xuICAgICAgICAvKiogQ3VtbXVsYXRpdmUgd2FpdCB0aW1lIGluIG1pbGxpc2Vjb25kcyBmb3IgYSByZXF1ZXN0IHdoaWxlIHRoZSByZXRyaWVzIGFyZSBoYXBwZW5pbmcuICovXG4gICAgICAgIHRoaXMuY3VtbXVsYXRpdmVXYWl0VGltZWluTWlsbGlzZWNvbmRzID0gMDtcbiAgICAgICAgLyoqIE1heCB3YWl0IHRpbWUgaW4gbWlsbGlzZWNvbmRzIHRvIHdhaXQgZm9yIGEgcmVxdWVzdCB3aGlsZSB0aGUgcmV0cmllcyBhcmUgaGFwcGVuaW5nLiAqL1xuICAgICAgICB0aGlzLnJldHJ5QWZ0ZXJJbk1pbGxpc2Vjb25kcyA9IDA7XG4gICAgICAgIHRoaXMubWF4V2FpdFRpbWVJbk1pbGxpc2Vjb25kcyA9IG1heFdhaXRUaW1lSW5TZWNvbmRzICogMTAwMDtcbiAgICAgICAgdGhpcy5jdXJyZW50UmV0cnlBdHRlbXB0Q291bnQgPSAwO1xuICAgICAgICB0aGlzLmN1bW11bGF0aXZlV2FpdFRpbWVpbk1pbGxpc2Vjb25kcyA9IDA7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERldGVybWluZXMgd2hldGhlciB0aGUgcmVxdWVzdCBzaG91bGQgYmUgcmV0cmllZCBvciBub3QuXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGVyciAtIEVycm9yIHJldHVybmVkIGJ5IHRoZSByZXF1ZXN0LlxuICAgICAqL1xuICAgIHNob3VsZFJldHJ5KGVycikge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICAvLyBUT0RPOiBhbnkgY3VzdG9tIGVycm9yIG9iamVjdFxuICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRSZXRyeUF0dGVtcHRDb3VudCA8IHRoaXMubWF4UmV0cnlBdHRlbXB0Q291bnQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50UmV0cnlBdHRlbXB0Q291bnQrKztcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXRyeUFmdGVySW5NaWxsaXNlY29uZHMgPSAwO1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5maXhlZFJldHJ5SW50ZXJ2YWxJbk1pbGxpc2Vjb25kcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXRyeUFmdGVySW5NaWxsaXNlY29uZHMgPSB0aGlzLmZpeGVkUmV0cnlJbnRlcnZhbEluTWlsbGlzZWNvbmRzO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGVyci5yZXRyeUFmdGVySW5NaWxsaXNlY29uZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmV0cnlBZnRlckluTWlsbGlzZWNvbmRzID0gZXJyLnJldHJ5QWZ0ZXJJbk1pbGxpc2Vjb25kcztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5jdW1tdWxhdGl2ZVdhaXRUaW1laW5NaWxsaXNlY29uZHMgPCB0aGlzLm1heFdhaXRUaW1lSW5NaWxsaXNlY29uZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY3VtbXVsYXRpdmVXYWl0VGltZWluTWlsbGlzZWNvbmRzICs9IHRoaXMucmV0cnlBZnRlckluTWlsbGlzZWNvbmRzO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuUmVzb3VyY2VUaHJvdHRsZVJldHJ5UG9saWN5ID0gUmVzb3VyY2VUaHJvdHRsZVJldHJ5UG9saWN5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzb3VyY2VUaHJvdHRsZVJldHJ5UG9saWN5LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/retry/resourceThrottleRetryPolicy.js\n");

/***/ }),

/***/ "./lib/retry/retryOptions.js":
/*!***********************************!*\
  !*** ./lib/retry/retryOptions.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Represents the Retry policy assocated with throttled requests in the Azure Cosmos DB database service.\n */\nclass RetryOptions {\n    constructor(\n    /** Max number of retries to be performed for a request. Default value 9. */\n    MaxRetryAttemptCount = 9, \n    /** Fixed retry interval in milliseconds to wait between each retry ignoring the retryAfter returned as part of the response. */\n    FixedRetryIntervalInMilliseconds = 0, \n    /** Max wait time in seconds to wait for a request while the retries are happening. Default value 30 seconds. */\n    MaxWaitTimeInSeconds = 30) {\n        this.MaxRetryAttemptCount = MaxRetryAttemptCount;\n        this.FixedRetryIntervalInMilliseconds = FixedRetryIntervalInMilliseconds;\n        this.MaxWaitTimeInSeconds = MaxWaitTimeInSeconds;\n    }\n}\nexports.RetryOptions = RetryOptions;\n//# sourceMappingURL=retryOptions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcmV0cnkvcmV0cnlPcHRpb25zLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3JldHJ5L3JldHJ5T3B0aW9ucy5qcz83MWNkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBSZXRyeSBwb2xpY3kgYXNzb2NhdGVkIHdpdGggdGhyb3R0bGVkIHJlcXVlc3RzIGluIHRoZSBBenVyZSBDb3Ntb3MgREIgZGF0YWJhc2Ugc2VydmljZS5cbiAqL1xuY2xhc3MgUmV0cnlPcHRpb25zIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAvKiogTWF4IG51bWJlciBvZiByZXRyaWVzIHRvIGJlIHBlcmZvcm1lZCBmb3IgYSByZXF1ZXN0LiBEZWZhdWx0IHZhbHVlIDkuICovXG4gICAgTWF4UmV0cnlBdHRlbXB0Q291bnQgPSA5LCBcbiAgICAvKiogRml4ZWQgcmV0cnkgaW50ZXJ2YWwgaW4gbWlsbGlzZWNvbmRzIHRvIHdhaXQgYmV0d2VlbiBlYWNoIHJldHJ5IGlnbm9yaW5nIHRoZSByZXRyeUFmdGVyIHJldHVybmVkIGFzIHBhcnQgb2YgdGhlIHJlc3BvbnNlLiAqL1xuICAgIEZpeGVkUmV0cnlJbnRlcnZhbEluTWlsbGlzZWNvbmRzID0gMCwgXG4gICAgLyoqIE1heCB3YWl0IHRpbWUgaW4gc2Vjb25kcyB0byB3YWl0IGZvciBhIHJlcXVlc3Qgd2hpbGUgdGhlIHJldHJpZXMgYXJlIGhhcHBlbmluZy4gRGVmYXVsdCB2YWx1ZSAzMCBzZWNvbmRzLiAqL1xuICAgIE1heFdhaXRUaW1lSW5TZWNvbmRzID0gMzApIHtcbiAgICAgICAgdGhpcy5NYXhSZXRyeUF0dGVtcHRDb3VudCA9IE1heFJldHJ5QXR0ZW1wdENvdW50O1xuICAgICAgICB0aGlzLkZpeGVkUmV0cnlJbnRlcnZhbEluTWlsbGlzZWNvbmRzID0gRml4ZWRSZXRyeUludGVydmFsSW5NaWxsaXNlY29uZHM7XG4gICAgICAgIHRoaXMuTWF4V2FpdFRpbWVJblNlY29uZHMgPSBNYXhXYWl0VGltZUluU2Vjb25kcztcbiAgICB9XG59XG5leHBvcnRzLlJldHJ5T3B0aW9ucyA9IFJldHJ5T3B0aW9ucztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJldHJ5T3B0aW9ucy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/retry/retryOptions.js\n");

/***/ }),

/***/ "./lib/retry/retryUtility.js":
/*!***********************************!*\
  !*** ./lib/retry/retryUtility.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst url = tslib_1.__importStar(__webpack_require__(/*! url */ \"./node_modules/url/url.js\"));\nconst _1 = __webpack_require__(/*! . */ \"./lib/retry/index.js\");\nconst common_1 = __webpack_require__(/*! ../common */ \"./lib/common/index.js\");\nconst LocationRouting_1 = __webpack_require__(/*! ../request/LocationRouting */ \"./lib/request/LocationRouting.js\");\nconst defaultRetryPolicy_1 = __webpack_require__(/*! ./defaultRetryPolicy */ \"./lib/retry/defaultRetryPolicy.js\");\n/** @hidden */\nclass RetryUtility {\n    /**\n     * Executes the retry policy for the created request object.\n     * @param {object} globalEndpointManager - an instance of GlobalEndpointManager class.\n     * @param {object} body - a dictionary containing 'buffer' and 'stream' keys to hold corresponding buffer or\\\n     *  stream body, null otherwise.\n     * @param {function} createRequestObjectStub - stub function that creates the request object.\n     * @param {object} connectionPolicy - an instance of ConnectionPolicy that has the connection configs.\n     * @param {RequestOptions} requestOptions - The request options.\n     * @param {function} callback - the callback that will be called when the request is finished executing.\n     */\n    static execute(globalEndpointManager, body, createRequestObjectFunc, connectionPolicy, requestOptions, request) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            // TODO: any request\n            const r = typeof request !== \"string\" ? request : { path: \"\", operationType: \"nonReadOps\" };\n            const endpointDiscoveryRetryPolicy = new _1.EndpointDiscoveryRetryPolicy(globalEndpointManager, r);\n            const resourceThrottleRetryPolicy = new _1.ResourceThrottleRetryPolicy(connectionPolicy.RetryOptions.MaxRetryAttemptCount, connectionPolicy.RetryOptions.FixedRetryIntervalInMilliseconds, connectionPolicy.RetryOptions.MaxWaitTimeInSeconds);\n            const sessionReadRetryPolicy = new _1.SessionRetryPolicy(globalEndpointManager, r, connectionPolicy);\n            const defaultRetryPolicy = new defaultRetryPolicy_1.DefaultRetryPolicy(request.operationType);\n            return this.apply(body, createRequestObjectFunc, connectionPolicy, requestOptions, endpointDiscoveryRetryPolicy, resourceThrottleRetryPolicy, sessionReadRetryPolicy, defaultRetryPolicy, globalEndpointManager, request, {});\n        });\n    }\n    /**\n     * Applies the retry policy for the created request object.\n     * @param {object} body - a dictionary containing 'buffer' and 'stream' keys to hold corresponding buffer or \\\n     * stream body, null otherwise.\n     * @param {function} createRequestObjectFunc - function that creates the request object.\n     * @param {object} connectionPolicy - an instance of ConnectionPolicy that has the connection configs.\n     * @param {RequestOptions} requestOptions - The request options.\n     * @param {EndpointDiscoveryRetryPolicy} endpointDiscoveryRetryPolicy - The endpoint discovery retry policy \\\n     * instance.\n     * @param {ResourceThrottleRetryPolicy} resourceThrottleRetryPolicy - The resource throttle retry policy instance.\n     * @param {function} callback - the callback that will be called when the response is retrieved and processed.\n     */\n    static apply(body, createRequestObjectFunc, connectionPolicy, requestOptions, endpointDiscoveryRetryPolicy, resourceThrottleRetryPolicy, sessionReadRetryPolicy, defaultRetryPolicy, globalEndpointManager, request, retryContext) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            // TODO: any response\n            const httpsRequest = createRequestObjectFunc(connectionPolicy, requestOptions, body);\n            if (!request.locationRouting) {\n                request.locationRouting = new LocationRouting_1.LocationRouting();\n            }\n            request.locationRouting.clearRouteToLocation();\n            if (retryContext) {\n                request.locationRouting.routeToLocation(retryContext.retryCount || 0, !retryContext.retryRequestOnPreferredLocations);\n                if (retryContext.clearSessionTokenNotAvailable) {\n                    request.client.clearSessionToken(request.path);\n                }\n            }\n            const locationEndpoint = yield globalEndpointManager.resolveServiceEndpoint(request);\n            requestOptions = this.modifyRequestOptions(requestOptions, url.parse(locationEndpoint));\n            request.locationRouting.routeToLocation(locationEndpoint);\n            try {\n                const { result, headers } = yield httpsRequest;\n                headers[common_1.Constants.ThrottleRetryCount] = resourceThrottleRetryPolicy.currentRetryAttemptCount;\n                headers[common_1.Constants.ThrottleRetryWaitTimeInMs] = resourceThrottleRetryPolicy.cummulativeWaitTimeinMilliseconds;\n                return { result, headers };\n            }\n            catch (err) {\n                // TODO: any error\n                let retryPolicy = null;\n                const headers = err.headers || {};\n                if (err.code === common_1.StatusCodes.Forbidden && err.substatus === common_1.SubStatusCodes.WriteForbidden) {\n                    retryPolicy = endpointDiscoveryRetryPolicy;\n                }\n                else if (err.code === common_1.StatusCodes.TooManyRequests) {\n                    retryPolicy = resourceThrottleRetryPolicy;\n                }\n                else if (err.code === common_1.StatusCodes.NotFound && err.substatus === common_1.SubStatusCodes.ReadSessionNotAvailable) {\n                    retryPolicy = sessionReadRetryPolicy;\n                }\n                else {\n                    retryPolicy = defaultRetryPolicy;\n                }\n                const results = yield retryPolicy.shouldRetry(err, retryContext);\n                if (!results) {\n                    headers[common_1.Constants.ThrottleRetryCount] = resourceThrottleRetryPolicy.currentRetryAttemptCount;\n                    headers[common_1.Constants.ThrottleRetryWaitTimeInMs] = resourceThrottleRetryPolicy.cummulativeWaitTimeinMilliseconds;\n                    err.headers = Object.assign({}, err.headers, headers);\n                    throw err;\n                }\n                else {\n                    request.retryCount++;\n                    const newUrl = results[1]; // TODO: any hack\n                    yield common_1.Helper.sleep(retryPolicy.retryAfterInMilliseconds);\n                    return this.apply(body, createRequestObjectFunc, connectionPolicy, requestOptions, endpointDiscoveryRetryPolicy, resourceThrottleRetryPolicy, sessionReadRetryPolicy, defaultRetryPolicy, globalEndpointManager, request, retryContext);\n                }\n            }\n        });\n    }\n    static modifyRequestOptions(oldRequestOptions, // TODO: any hack is bad\n    newUrl) {\n        // TODO: any hack is bad\n        const properties = Object.keys(newUrl);\n        for (const index in properties) {\n            if (properties[index] !== \"path\") {\n                oldRequestOptions[properties[index]] = newUrl[properties[index]];\n            }\n        }\n        return oldRequestOptions;\n    }\n}\nexports.RetryUtility = RetryUtility;\n//# sourceMappingURL=retryUtility.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/retry/retryUtility.js\n");

/***/ }),

/***/ "./lib/retry/sessionRetryPolicy.js":
/*!*****************************************!*\
  !*** ./lib/retry/sessionRetryPolicy.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ../common */ \"./lib/common/index.js\");\n/**\n * This class implements the retry policy for session consistent reads.\n * @hidden\n */\nclass SessionRetryPolicy {\n    /**\n     * @constructor SessionReadRetryPolicy\n     * @param {object} globalEndpointManager                           - The GlobalEndpointManager instance.\n     * @property {object} request                                      - The Http request information\n     */\n    constructor(globalEndpointManager, request, connectionPolicy) {\n        this.globalEndpointManager = globalEndpointManager;\n        this.request = request;\n        this.connectionPolicy = connectionPolicy;\n        /** Current retry attempt count. */\n        this.currentRetryAttemptCount = 0;\n        this.retryAfterInMilliseconds = SessionRetryPolicy.retryAfterInMilliseconds;\n    }\n    /**\n     * Determines whether the request should be retried or not.\n     * @param {object} err - Error returned by the request.\n     * @param {function} callback - The callback function which takes bool argument which specifies whether the request\\\n     * will be retried or not.\n     */\n    shouldRetry(err, retryContext) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!err) {\n                return false;\n            }\n            if (!retryContext) {\n                return false;\n            }\n            if (!this.connectionPolicy.EnableEndpointDiscovery) {\n                return false;\n            }\n            if (this.globalEndpointManager.canUseMultipleWriteLocations(this.request)) {\n                // If we can write to multiple locations, we should against every write endpoint until we succeed\n                const endpoints = common_1.Helper.isReadRequest(this.request)\n                    ? yield this.globalEndpointManager.getReadEndpoints()\n                    : yield this.globalEndpointManager.getWriteEndpoints();\n                if (this.currentRetryAttemptCount > endpoints.length) {\n                    return false;\n                }\n                else {\n                    retryContext.retryCount = ++this.currentRetryAttemptCount - 1;\n                    retryContext.retryRequestOnPreferredLocations = this.currentRetryAttemptCount > 1;\n                    retryContext.clearSessionTokenNotAvailable = this.currentRetryAttemptCount === endpoints.length;\n                    return true;\n                }\n            }\n            else {\n                if (this.currentRetryAttemptCount > 1) {\n                    return false;\n                }\n                else {\n                    retryContext.retryCount = ++this.currentRetryAttemptCount - 1;\n                    retryContext.retryRequestOnPreferredLocations = false; // Forces all operations to primary write endpoint\n                    retryContext.clearSessionTokenNotAvailable = true;\n                    return true;\n                }\n            }\n        });\n    }\n}\n/** Retry interval in milliseconds. */\nSessionRetryPolicy.retryAfterInMilliseconds = 0;\nexports.SessionRetryPolicy = SessionRetryPolicy;\n//# sourceMappingURL=sessionRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcmV0cnkvc2Vzc2lvblJldHJ5UG9saWN5LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3JldHJ5L3Nlc3Npb25SZXRyeVBvbGljeS5qcz8wMzU3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGNvbW1vbl8xID0gcmVxdWlyZShcIi4uL2NvbW1vblwiKTtcbi8qKlxuICogVGhpcyBjbGFzcyBpbXBsZW1lbnRzIHRoZSByZXRyeSBwb2xpY3kgZm9yIHNlc3Npb24gY29uc2lzdGVudCByZWFkcy5cbiAqIEBoaWRkZW5cbiAqL1xuY2xhc3MgU2Vzc2lvblJldHJ5UG9saWN5IHtcbiAgICAvKipcbiAgICAgKiBAY29uc3RydWN0b3IgU2Vzc2lvblJlYWRSZXRyeVBvbGljeVxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBnbG9iYWxFbmRwb2ludE1hbmFnZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAtIFRoZSBHbG9iYWxFbmRwb2ludE1hbmFnZXIgaW5zdGFuY2UuXG4gICAgICogQHByb3BlcnR5IHtvYmplY3R9IHJlcXVlc3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0gVGhlIEh0dHAgcmVxdWVzdCBpbmZvcm1hdGlvblxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGdsb2JhbEVuZHBvaW50TWFuYWdlciwgcmVxdWVzdCwgY29ubmVjdGlvblBvbGljeSkge1xuICAgICAgICB0aGlzLmdsb2JhbEVuZHBvaW50TWFuYWdlciA9IGdsb2JhbEVuZHBvaW50TWFuYWdlcjtcbiAgICAgICAgdGhpcy5yZXF1ZXN0ID0gcmVxdWVzdDtcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uUG9saWN5ID0gY29ubmVjdGlvblBvbGljeTtcbiAgICAgICAgLyoqIEN1cnJlbnQgcmV0cnkgYXR0ZW1wdCBjb3VudC4gKi9cbiAgICAgICAgdGhpcy5jdXJyZW50UmV0cnlBdHRlbXB0Q291bnQgPSAwO1xuICAgICAgICB0aGlzLnJldHJ5QWZ0ZXJJbk1pbGxpc2Vjb25kcyA9IFNlc3Npb25SZXRyeVBvbGljeS5yZXRyeUFmdGVySW5NaWxsaXNlY29uZHM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERldGVybWluZXMgd2hldGhlciB0aGUgcmVxdWVzdCBzaG91bGQgYmUgcmV0cmllZCBvciBub3QuXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGVyciAtIEVycm9yIHJldHVybmVkIGJ5IHRoZSByZXF1ZXN0LlxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrIC0gVGhlIGNhbGxiYWNrIGZ1bmN0aW9uIHdoaWNoIHRha2VzIGJvb2wgYXJndW1lbnQgd2hpY2ggc3BlY2lmaWVzIHdoZXRoZXIgdGhlIHJlcXVlc3RcXFxuICAgICAqIHdpbGwgYmUgcmV0cmllZCBvciBub3QuXG4gICAgICovXG4gICAgc2hvdWxkUmV0cnkoZXJyLCByZXRyeUNvbnRleHQpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKCFlcnIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXJldHJ5Q29udGV4dCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghdGhpcy5jb25uZWN0aW9uUG9saWN5LkVuYWJsZUVuZHBvaW50RGlzY292ZXJ5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuZ2xvYmFsRW5kcG9pbnRNYW5hZ2VyLmNhblVzZU11bHRpcGxlV3JpdGVMb2NhdGlvbnModGhpcy5yZXF1ZXN0KSkge1xuICAgICAgICAgICAgICAgIC8vIElmIHdlIGNhbiB3cml0ZSB0byBtdWx0aXBsZSBsb2NhdGlvbnMsIHdlIHNob3VsZCBhZ2FpbnN0IGV2ZXJ5IHdyaXRlIGVuZHBvaW50IHVudGlsIHdlIHN1Y2NlZWRcbiAgICAgICAgICAgICAgICBjb25zdCBlbmRwb2ludHMgPSBjb21tb25fMS5IZWxwZXIuaXNSZWFkUmVxdWVzdCh0aGlzLnJlcXVlc3QpXG4gICAgICAgICAgICAgICAgICAgID8geWllbGQgdGhpcy5nbG9iYWxFbmRwb2ludE1hbmFnZXIuZ2V0UmVhZEVuZHBvaW50cygpXG4gICAgICAgICAgICAgICAgICAgIDogeWllbGQgdGhpcy5nbG9iYWxFbmRwb2ludE1hbmFnZXIuZ2V0V3JpdGVFbmRwb2ludHMoKTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50UmV0cnlBdHRlbXB0Q291bnQgPiBlbmRwb2ludHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHJ5Q29udGV4dC5yZXRyeUNvdW50ID0gKyt0aGlzLmN1cnJlbnRSZXRyeUF0dGVtcHRDb3VudCAtIDE7XG4gICAgICAgICAgICAgICAgICAgIHJldHJ5Q29udGV4dC5yZXRyeVJlcXVlc3RPblByZWZlcnJlZExvY2F0aW9ucyA9IHRoaXMuY3VycmVudFJldHJ5QXR0ZW1wdENvdW50ID4gMTtcbiAgICAgICAgICAgICAgICAgICAgcmV0cnlDb250ZXh0LmNsZWFyU2Vzc2lvblRva2VuTm90QXZhaWxhYmxlID0gdGhpcy5jdXJyZW50UmV0cnlBdHRlbXB0Q291bnQgPT09IGVuZHBvaW50cy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRSZXRyeUF0dGVtcHRDb3VudCA+IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0cnlDb250ZXh0LnJldHJ5Q291bnQgPSArK3RoaXMuY3VycmVudFJldHJ5QXR0ZW1wdENvdW50IC0gMTtcbiAgICAgICAgICAgICAgICAgICAgcmV0cnlDb250ZXh0LnJldHJ5UmVxdWVzdE9uUHJlZmVycmVkTG9jYXRpb25zID0gZmFsc2U7IC8vIEZvcmNlcyBhbGwgb3BlcmF0aW9ucyB0byBwcmltYXJ5IHdyaXRlIGVuZHBvaW50XG4gICAgICAgICAgICAgICAgICAgIHJldHJ5Q29udGV4dC5jbGVhclNlc3Npb25Ub2tlbk5vdEF2YWlsYWJsZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuLyoqIFJldHJ5IGludGVydmFsIGluIG1pbGxpc2Vjb25kcy4gKi9cblNlc3Npb25SZXRyeVBvbGljeS5yZXRyeUFmdGVySW5NaWxsaXNlY29uZHMgPSAwO1xuZXhwb3J0cy5TZXNzaW9uUmV0cnlQb2xpY3kgPSBTZXNzaW9uUmV0cnlQb2xpY3k7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXNzaW9uUmV0cnlQb2xpY3kuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/retry/sessionRetryPolicy.js\n");

/***/ }),

/***/ "./lib/routing/CollectionRoutingMapFactory.js":
/*!****************************************************!*\
  !*** ./lib/routing/CollectionRoutingMapFactory.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _1 = __webpack_require__(/*! . */ \"./lib/routing/index.js\");\nconst common_1 = __webpack_require__(/*! ../common */ \"./lib/common/index.js\");\nfunction compareRanges(a, b) {\n    const aVal = a[0][common_1.Constants.PartitionKeyRange.MinInclusive];\n    const bVal = b[0][common_1.Constants.PartitionKeyRange.MinInclusive];\n    if (aVal > bVal) {\n        return 1;\n    }\n    if (aVal < bVal) {\n        return -1;\n    }\n    return 0;\n}\n/** @hidden */\nclass CollectionRoutingMapFactory {\n    static createCompleteRoutingMap(partitionKeyRangeInfoTuppleList, collectionUniqueId) {\n        const rangeById = {}; // TODO: any\n        const rangeByInfo = {}; // TODO: any\n        let sortedRanges = [];\n        // the for loop doesn't invoke any async callback\n        for (const r of partitionKeyRangeInfoTuppleList) {\n            rangeById[r[0][common_1.Constants.PartitionKeyRange.Id]] = r;\n            rangeByInfo[r[1]] = r[0];\n            sortedRanges.push(r);\n        }\n        sortedRanges = sortedRanges.sort(compareRanges);\n        const partitionKeyOrderedRange = sortedRanges.map(r => r[0]);\n        const orderedPartitionInfo = sortedRanges.map(r => r[1]);\n        if (!this._isCompleteSetOfRange(partitionKeyOrderedRange)) {\n            return undefined;\n        }\n        return new _1.InMemoryCollectionRoutingMap(rangeById, rangeByInfo, partitionKeyOrderedRange, orderedPartitionInfo, collectionUniqueId);\n    }\n    static _isCompleteSetOfRange(partitionKeyOrderedRange) {\n        // TODO: any\n        let isComplete = false;\n        if (partitionKeyOrderedRange.length > 0) {\n            const firstRange = partitionKeyOrderedRange[0];\n            const lastRange = partitionKeyOrderedRange[partitionKeyOrderedRange.length - 1];\n            isComplete =\n                firstRange[common_1.Constants.PartitionKeyRange.MinInclusive] ===\n                    common_1.Constants.EffectiveParitionKeyConstants.MinimumInclusiveEffectivePartitionKey;\n            isComplete =\n                isComplete &&\n                    lastRange[common_1.Constants.PartitionKeyRange.MaxExclusive] ===\n                        common_1.Constants.EffectiveParitionKeyConstants.MaximumExclusiveEffectivePartitionKey;\n            for (let i = 1; i < partitionKeyOrderedRange.length; i++) {\n                const previousRange = partitionKeyOrderedRange[i - 1];\n                const currentRange = partitionKeyOrderedRange[i];\n                isComplete =\n                    isComplete &&\n                        previousRange[common_1.Constants.PartitionKeyRange.MaxExclusive] ===\n                            currentRange[common_1.Constants.PartitionKeyRange.MinInclusive];\n                if (!isComplete) {\n                    if (previousRange[common_1.Constants.PartitionKeyRange.MaxExclusive] >\n                        currentRange[common_1.Constants.PartitionKeyRange.MinInclusive]) {\n                        throw Error(\"Ranges overlap\");\n                    }\n                    break;\n                }\n            }\n        }\n        return isComplete;\n    }\n}\nexports.CollectionRoutingMapFactory = CollectionRoutingMapFactory;\n//# sourceMappingURL=CollectionRoutingMapFactory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcm91dGluZy9Db2xsZWN0aW9uUm91dGluZ01hcEZhY3RvcnkuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9saWIvcm91dGluZy9Db2xsZWN0aW9uUm91dGluZ01hcEZhY3RvcnkuanM/ZDYwYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IF8xID0gcmVxdWlyZShcIi5cIik7XG5jb25zdCBjb21tb25fMSA9IHJlcXVpcmUoXCIuLi9jb21tb25cIik7XG5mdW5jdGlvbiBjb21wYXJlUmFuZ2VzKGEsIGIpIHtcbiAgICBjb25zdCBhVmFsID0gYVswXVtjb21tb25fMS5Db25zdGFudHMuUGFydGl0aW9uS2V5UmFuZ2UuTWluSW5jbHVzaXZlXTtcbiAgICBjb25zdCBiVmFsID0gYlswXVtjb21tb25fMS5Db25zdGFudHMuUGFydGl0aW9uS2V5UmFuZ2UuTWluSW5jbHVzaXZlXTtcbiAgICBpZiAoYVZhbCA+IGJWYWwpIHtcbiAgICAgICAgcmV0dXJuIDE7XG4gICAgfVxuICAgIGlmIChhVmFsIDwgYlZhbCkge1xuICAgICAgICByZXR1cm4gLTE7XG4gICAgfVxuICAgIHJldHVybiAwO1xufVxuLyoqIEBoaWRkZW4gKi9cbmNsYXNzIENvbGxlY3Rpb25Sb3V0aW5nTWFwRmFjdG9yeSB7XG4gICAgc3RhdGljIGNyZWF0ZUNvbXBsZXRlUm91dGluZ01hcChwYXJ0aXRpb25LZXlSYW5nZUluZm9UdXBwbGVMaXN0LCBjb2xsZWN0aW9uVW5pcXVlSWQpIHtcbiAgICAgICAgY29uc3QgcmFuZ2VCeUlkID0ge307IC8vIFRPRE86IGFueVxuICAgICAgICBjb25zdCByYW5nZUJ5SW5mbyA9IHt9OyAvLyBUT0RPOiBhbnlcbiAgICAgICAgbGV0IHNvcnRlZFJhbmdlcyA9IFtdO1xuICAgICAgICAvLyB0aGUgZm9yIGxvb3AgZG9lc24ndCBpbnZva2UgYW55IGFzeW5jIGNhbGxiYWNrXG4gICAgICAgIGZvciAoY29uc3QgciBvZiBwYXJ0aXRpb25LZXlSYW5nZUluZm9UdXBwbGVMaXN0KSB7XG4gICAgICAgICAgICByYW5nZUJ5SWRbclswXVtjb21tb25fMS5Db25zdGFudHMuUGFydGl0aW9uS2V5UmFuZ2UuSWRdXSA9IHI7XG4gICAgICAgICAgICByYW5nZUJ5SW5mb1tyWzFdXSA9IHJbMF07XG4gICAgICAgICAgICBzb3J0ZWRSYW5nZXMucHVzaChyKTtcbiAgICAgICAgfVxuICAgICAgICBzb3J0ZWRSYW5nZXMgPSBzb3J0ZWRSYW5nZXMuc29ydChjb21wYXJlUmFuZ2VzKTtcbiAgICAgICAgY29uc3QgcGFydGl0aW9uS2V5T3JkZXJlZFJhbmdlID0gc29ydGVkUmFuZ2VzLm1hcChyID0+IHJbMF0pO1xuICAgICAgICBjb25zdCBvcmRlcmVkUGFydGl0aW9uSW5mbyA9IHNvcnRlZFJhbmdlcy5tYXAociA9PiByWzFdKTtcbiAgICAgICAgaWYgKCF0aGlzLl9pc0NvbXBsZXRlU2V0T2ZSYW5nZShwYXJ0aXRpb25LZXlPcmRlcmVkUmFuZ2UpKSB7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgXzEuSW5NZW1vcnlDb2xsZWN0aW9uUm91dGluZ01hcChyYW5nZUJ5SWQsIHJhbmdlQnlJbmZvLCBwYXJ0aXRpb25LZXlPcmRlcmVkUmFuZ2UsIG9yZGVyZWRQYXJ0aXRpb25JbmZvLCBjb2xsZWN0aW9uVW5pcXVlSWQpO1xuICAgIH1cbiAgICBzdGF0aWMgX2lzQ29tcGxldGVTZXRPZlJhbmdlKHBhcnRpdGlvbktleU9yZGVyZWRSYW5nZSkge1xuICAgICAgICAvLyBUT0RPOiBhbnlcbiAgICAgICAgbGV0IGlzQ29tcGxldGUgPSBmYWxzZTtcbiAgICAgICAgaWYgKHBhcnRpdGlvbktleU9yZGVyZWRSYW5nZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBjb25zdCBmaXJzdFJhbmdlID0gcGFydGl0aW9uS2V5T3JkZXJlZFJhbmdlWzBdO1xuICAgICAgICAgICAgY29uc3QgbGFzdFJhbmdlID0gcGFydGl0aW9uS2V5T3JkZXJlZFJhbmdlW3BhcnRpdGlvbktleU9yZGVyZWRSYW5nZS5sZW5ndGggLSAxXTtcbiAgICAgICAgICAgIGlzQ29tcGxldGUgPVxuICAgICAgICAgICAgICAgIGZpcnN0UmFuZ2VbY29tbW9uXzEuQ29uc3RhbnRzLlBhcnRpdGlvbktleVJhbmdlLk1pbkluY2x1c2l2ZV0gPT09XG4gICAgICAgICAgICAgICAgICAgIGNvbW1vbl8xLkNvbnN0YW50cy5FZmZlY3RpdmVQYXJpdGlvbktleUNvbnN0YW50cy5NaW5pbXVtSW5jbHVzaXZlRWZmZWN0aXZlUGFydGl0aW9uS2V5O1xuICAgICAgICAgICAgaXNDb21wbGV0ZSA9XG4gICAgICAgICAgICAgICAgaXNDb21wbGV0ZSAmJlxuICAgICAgICAgICAgICAgICAgICBsYXN0UmFuZ2VbY29tbW9uXzEuQ29uc3RhbnRzLlBhcnRpdGlvbktleVJhbmdlLk1heEV4Y2x1c2l2ZV0gPT09XG4gICAgICAgICAgICAgICAgICAgICAgICBjb21tb25fMS5Db25zdGFudHMuRWZmZWN0aXZlUGFyaXRpb25LZXlDb25zdGFudHMuTWF4aW11bUV4Y2x1c2l2ZUVmZmVjdGl2ZVBhcnRpdGlvbktleTtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDwgcGFydGl0aW9uS2V5T3JkZXJlZFJhbmdlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcHJldmlvdXNSYW5nZSA9IHBhcnRpdGlvbktleU9yZGVyZWRSYW5nZVtpIC0gMV07XG4gICAgICAgICAgICAgICAgY29uc3QgY3VycmVudFJhbmdlID0gcGFydGl0aW9uS2V5T3JkZXJlZFJhbmdlW2ldO1xuICAgICAgICAgICAgICAgIGlzQ29tcGxldGUgPVxuICAgICAgICAgICAgICAgICAgICBpc0NvbXBsZXRlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmV2aW91c1JhbmdlW2NvbW1vbl8xLkNvbnN0YW50cy5QYXJ0aXRpb25LZXlSYW5nZS5NYXhFeGNsdXNpdmVdID09PVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRSYW5nZVtjb21tb25fMS5Db25zdGFudHMuUGFydGl0aW9uS2V5UmFuZ2UuTWluSW5jbHVzaXZlXTtcbiAgICAgICAgICAgICAgICBpZiAoIWlzQ29tcGxldGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHByZXZpb3VzUmFuZ2VbY29tbW9uXzEuQ29uc3RhbnRzLlBhcnRpdGlvbktleVJhbmdlLk1heEV4Y2x1c2l2ZV0gPlxuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFJhbmdlW2NvbW1vbl8xLkNvbnN0YW50cy5QYXJ0aXRpb25LZXlSYW5nZS5NaW5JbmNsdXNpdmVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBFcnJvcihcIlJhbmdlcyBvdmVybGFwXCIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaXNDb21wbGV0ZTtcbiAgICB9XG59XG5leHBvcnRzLkNvbGxlY3Rpb25Sb3V0aW5nTWFwRmFjdG9yeSA9IENvbGxlY3Rpb25Sb3V0aW5nTWFwRmFjdG9yeTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbGxlY3Rpb25Sb3V0aW5nTWFwRmFjdG9yeS5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/routing/CollectionRoutingMapFactory.js\n");

/***/ }),

/***/ "./lib/routing/QueryRange.js":
/*!***********************************!*\
  !*** ./lib/routing/QueryRange.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common_1 = __webpack_require__(/*! ../common */ \"./lib/common/index.js\");\n/** @hidden */\nclass QueryRange {\n    /**\n     * Represents a QueryRange.\n     * @constructor QueryRange\n     * @param {string} rangeMin                - min\n     * @param {string} rangeMin                - max\n     * @param {boolean} isMinInclusive         - isMinInclusive\n     * @param {boolean} isMaxInclusive         - isMaxInclusive\n     * @ignore\n     */\n    constructor(rangeMin, rangeMax, isMinInclusive, isMaxInclusive) {\n        this.min = rangeMin;\n        this.max = rangeMax;\n        this.isMinInclusive = isMinInclusive;\n        this.isMaxInclusive = isMaxInclusive;\n    }\n    overlaps(other) {\n        // tslint:disable-next-line:no-this-assignment\n        const range1 = this;\n        const range2 = other;\n        if (range1 === undefined || range2 === undefined) {\n            return false;\n        }\n        if (range1.isEmpty() || range2.isEmpty()) {\n            return false;\n        }\n        if (range1.min <= range2.max || range2.min <= range1.max) {\n            if ((range1.min === range2.max && !(range1.isMinInclusive && range2.isMaxInclusive)) ||\n                (range2.min === range1.max && !(range2.isMinInclusive && range1.isMaxInclusive))) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n    isEmpty() {\n        return !(this.isMinInclusive && this.isMaxInclusive) && this.min === this.max;\n    }\n    /**\n     * Parse a QueryRange from a partitionKeyRange\n     * @returns QueryRange\n     * @ignore\n     */\n    static parsePartitionKeyRange(partitionKeyRange) {\n        // TODO: paritionkeyrange\n        return new QueryRange(partitionKeyRange[common_1.Constants.PartitionKeyRange.MinInclusive], partitionKeyRange[common_1.Constants.PartitionKeyRange.MaxExclusive], true, false);\n    }\n    /**\n     * Parse a QueryRange from a dictionary\n     * @returns QueryRange\n     * @ignore\n     */\n    static parseFromDict(queryRangeDict) {\n        // TODO: queryRangeDictionary\n        return new QueryRange(queryRangeDict.min, queryRangeDict.max, queryRangeDict.isMinInclusive, queryRangeDict.isMaxInclusive);\n    }\n}\nexports.QueryRange = QueryRange;\n//# sourceMappingURL=QueryRange.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcm91dGluZy9RdWVyeVJhbmdlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3JvdXRpbmcvUXVlcnlSYW5nZS5qcz9jMTE2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgY29tbW9uXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uXCIpO1xuLyoqIEBoaWRkZW4gKi9cbmNsYXNzIFF1ZXJ5UmFuZ2Uge1xuICAgIC8qKlxuICAgICAqIFJlcHJlc2VudHMgYSBRdWVyeVJhbmdlLlxuICAgICAqIEBjb25zdHJ1Y3RvciBRdWVyeVJhbmdlXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHJhbmdlTWluICAgICAgICAgICAgICAgIC0gbWluXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHJhbmdlTWluICAgICAgICAgICAgICAgIC0gbWF4XG4gICAgICogQHBhcmFtIHtib29sZWFufSBpc01pbkluY2x1c2l2ZSAgICAgICAgIC0gaXNNaW5JbmNsdXNpdmVcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGlzTWF4SW5jbHVzaXZlICAgICAgICAgLSBpc01heEluY2x1c2l2ZVxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihyYW5nZU1pbiwgcmFuZ2VNYXgsIGlzTWluSW5jbHVzaXZlLCBpc01heEluY2x1c2l2ZSkge1xuICAgICAgICB0aGlzLm1pbiA9IHJhbmdlTWluO1xuICAgICAgICB0aGlzLm1heCA9IHJhbmdlTWF4O1xuICAgICAgICB0aGlzLmlzTWluSW5jbHVzaXZlID0gaXNNaW5JbmNsdXNpdmU7XG4gICAgICAgIHRoaXMuaXNNYXhJbmNsdXNpdmUgPSBpc01heEluY2x1c2l2ZTtcbiAgICB9XG4gICAgb3ZlcmxhcHMob3RoZXIpIHtcbiAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLXRoaXMtYXNzaWdubWVudFxuICAgICAgICBjb25zdCByYW5nZTEgPSB0aGlzO1xuICAgICAgICBjb25zdCByYW5nZTIgPSBvdGhlcjtcbiAgICAgICAgaWYgKHJhbmdlMSA9PT0gdW5kZWZpbmVkIHx8IHJhbmdlMiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJhbmdlMS5pc0VtcHR5KCkgfHwgcmFuZ2UyLmlzRW1wdHkoKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyYW5nZTEubWluIDw9IHJhbmdlMi5tYXggfHwgcmFuZ2UyLm1pbiA8PSByYW5nZTEubWF4KSB7XG4gICAgICAgICAgICBpZiAoKHJhbmdlMS5taW4gPT09IHJhbmdlMi5tYXggJiYgIShyYW5nZTEuaXNNaW5JbmNsdXNpdmUgJiYgcmFuZ2UyLmlzTWF4SW5jbHVzaXZlKSkgfHxcbiAgICAgICAgICAgICAgICAocmFuZ2UyLm1pbiA9PT0gcmFuZ2UxLm1heCAmJiAhKHJhbmdlMi5pc01pbkluY2x1c2l2ZSAmJiByYW5nZTEuaXNNYXhJbmNsdXNpdmUpKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaXNFbXB0eSgpIHtcbiAgICAgICAgcmV0dXJuICEodGhpcy5pc01pbkluY2x1c2l2ZSAmJiB0aGlzLmlzTWF4SW5jbHVzaXZlKSAmJiB0aGlzLm1pbiA9PT0gdGhpcy5tYXg7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhcnNlIGEgUXVlcnlSYW5nZSBmcm9tIGEgcGFydGl0aW9uS2V5UmFuZ2VcbiAgICAgKiBAcmV0dXJucyBRdWVyeVJhbmdlXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIHN0YXRpYyBwYXJzZVBhcnRpdGlvbktleVJhbmdlKHBhcnRpdGlvbktleVJhbmdlKSB7XG4gICAgICAgIC8vIFRPRE86IHBhcml0aW9ua2V5cmFuZ2VcbiAgICAgICAgcmV0dXJuIG5ldyBRdWVyeVJhbmdlKHBhcnRpdGlvbktleVJhbmdlW2NvbW1vbl8xLkNvbnN0YW50cy5QYXJ0aXRpb25LZXlSYW5nZS5NaW5JbmNsdXNpdmVdLCBwYXJ0aXRpb25LZXlSYW5nZVtjb21tb25fMS5Db25zdGFudHMuUGFydGl0aW9uS2V5UmFuZ2UuTWF4RXhjbHVzaXZlXSwgdHJ1ZSwgZmFsc2UpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQYXJzZSBhIFF1ZXJ5UmFuZ2UgZnJvbSBhIGRpY3Rpb25hcnlcbiAgICAgKiBAcmV0dXJucyBRdWVyeVJhbmdlXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIHN0YXRpYyBwYXJzZUZyb21EaWN0KHF1ZXJ5UmFuZ2VEaWN0KSB7XG4gICAgICAgIC8vIFRPRE86IHF1ZXJ5UmFuZ2VEaWN0aW9uYXJ5XG4gICAgICAgIHJldHVybiBuZXcgUXVlcnlSYW5nZShxdWVyeVJhbmdlRGljdC5taW4sIHF1ZXJ5UmFuZ2VEaWN0Lm1heCwgcXVlcnlSYW5nZURpY3QuaXNNaW5JbmNsdXNpdmUsIHF1ZXJ5UmFuZ2VEaWN0LmlzTWF4SW5jbHVzaXZlKTtcbiAgICB9XG59XG5leHBvcnRzLlF1ZXJ5UmFuZ2UgPSBRdWVyeVJhbmdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UXVlcnlSYW5nZS5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/routing/QueryRange.js\n");

/***/ }),

/***/ "./lib/routing/inMemoryCollectionRoutingMap.js":
/*!*****************************************************!*\
  !*** ./lib/routing/inMemoryCollectionRoutingMap.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst assert_1 = tslib_1.__importDefault(__webpack_require__(/*! assert */ \"./node_modules/assert/assert.js\"));\nconst bs = tslib_1.__importStar(__webpack_require__(/*! binary-search-bounds */ \"./node_modules/binary-search-bounds/search-bounds.js\")); // TODO: missing types\nconst common_1 = __webpack_require__(/*! ../common */ \"./lib/common/index.js\");\nconst QueryRange_1 = __webpack_require__(/*! ./QueryRange */ \"./lib/routing/QueryRange.js\");\n/** @hidden */\nclass InMemoryCollectionRoutingMap {\n    /**\n     * Represents a InMemoryCollectionRoutingMap Object,\n     * Stores partition key ranges in an efficient way with some additional information and provides\n     * convenience methods for working with set of ranges.\n     */\n    constructor(rangeById, rangeByInfo, orderedPartitionKeyRanges, orderedPartitionInfo, collectionUniqueId) {\n        this.rangeById = rangeById;\n        this.rangeByInfo = rangeByInfo;\n        this.orderedPartitionKeyRanges = orderedPartitionKeyRanges;\n        this.orderedRanges = orderedPartitionKeyRanges.map(pkr => {\n            return new QueryRange_1.QueryRange(pkr[common_1.Constants.PartitionKeyRange.MinInclusive], pkr[common_1.Constants.PartitionKeyRange.MaxExclusive], true, false);\n        });\n        this.orderedPartitionInfo = orderedPartitionInfo;\n        this.collectionUniqueId = collectionUniqueId;\n    }\n    getOrderedParitionKeyRanges() {\n        return this.orderedPartitionKeyRanges;\n    }\n    getRangeByEffectivePartitionKey(effectivePartitionKeyValue) {\n        if (common_1.Constants.EffectiveParitionKeyConstants.MinimumInclusiveEffectivePartitionKey === effectivePartitionKeyValue) {\n            return this.orderedPartitionKeyRanges[0];\n        }\n        if (common_1.Constants.EffectiveParitionKeyConstants.MaximumExclusiveEffectivePartitionKey === effectivePartitionKeyValue) {\n            return undefined;\n        }\n        const sortedLow = this.orderedRanges.map(r => {\n            return { v: r.min, b: !r.isMinInclusive };\n        });\n        const index = bs.le(sortedLow, { v: effectivePartitionKeyValue, b: true }, InMemoryCollectionRoutingMap._vbCompareFunction);\n        // that's an error\n        assert_1.default.ok(index >= 0, \"error in collection routing map, queried partition key is less than the start range.\");\n        return this.orderedPartitionKeyRanges[index];\n    }\n    static _vbCompareFunction(x, y) {\n        // TODO: What is x & y? A bs type?\n        if (x.v > y.v) {\n            return 1;\n        }\n        if (x.v < y.v) {\n            return -1;\n        }\n        if (x.b > y.b) {\n            return 1;\n        }\n        if (x.b < y.b) {\n            return -1;\n        }\n        return 0;\n    }\n    getOverlappingRanges(providedQueryRanges) {\n        const pqr = Array.isArray(providedQueryRanges) ? providedQueryRanges : [providedQueryRanges];\n        const minToPartitionRange = {}; // TODO: any\n        const sortedLow = this.orderedRanges.map(r => {\n            return { v: r.min, b: !r.isMinInclusive };\n        });\n        const sortedHigh = this.orderedRanges.map(r => {\n            return { v: r.max, b: r.isMaxInclusive };\n        });\n        // this for loop doesn't invoke any async callback\n        for (const queryRange of pqr) {\n            if (queryRange.isEmpty()) {\n                continue;\n            }\n            const minIndex = bs.le(sortedLow, { v: queryRange.min, b: !queryRange.isMinInclusive }, InMemoryCollectionRoutingMap._vbCompareFunction);\n            assert_1.default.ok(minIndex >= 0, \"error in collection routing map, queried value is less than the start range.\");\n            const maxIndex = bs.ge(sortedHigh, { v: queryRange.max, b: queryRange.isMaxInclusive }, InMemoryCollectionRoutingMap._vbCompareFunction);\n            assert_1.default.ok(maxIndex < sortedHigh.length, \"error in collection routing map, queried value is greater than the end range.\");\n            // the for loop doesn't invoke any async callback\n            for (let j = minIndex; j < maxIndex + 1; j++) {\n                if (queryRange.overlaps(this.orderedRanges[j])) {\n                    minToPartitionRange[this.orderedPartitionKeyRanges[j][common_1.Constants.PartitionKeyRange.MinInclusive]] = this.orderedPartitionKeyRanges[j];\n                }\n            }\n        }\n        const overlappingPartitionKeyRanges = Object.keys(minToPartitionRange).map(k => minToPartitionRange[k]);\n        return overlappingPartitionKeyRanges.sort(r => {\n            return r[common_1.Constants.PartitionKeyRange.MinInclusive];\n        });\n    }\n}\nexports.InMemoryCollectionRoutingMap = InMemoryCollectionRoutingMap;\n//# sourceMappingURL=inMemoryCollectionRoutingMap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcm91dGluZy9pbk1lbW9yeUNvbGxlY3Rpb25Sb3V0aW5nTWFwLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3JvdXRpbmcvaW5NZW1vcnlDb2xsZWN0aW9uUm91dGluZ01hcC5qcz81ZGI0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGFzc2VydF8xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImFzc2VydFwiKSk7XG5jb25zdCBicyA9IHRzbGliXzEuX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJiaW5hcnktc2VhcmNoLWJvdW5kc1wiKSk7IC8vIFRPRE86IG1pc3NpbmcgdHlwZXNcbmNvbnN0IGNvbW1vbl8xID0gcmVxdWlyZShcIi4uL2NvbW1vblwiKTtcbmNvbnN0IFF1ZXJ5UmFuZ2VfMSA9IHJlcXVpcmUoXCIuL1F1ZXJ5UmFuZ2VcIik7XG4vKiogQGhpZGRlbiAqL1xuY2xhc3MgSW5NZW1vcnlDb2xsZWN0aW9uUm91dGluZ01hcCB7XG4gICAgLyoqXG4gICAgICogUmVwcmVzZW50cyBhIEluTWVtb3J5Q29sbGVjdGlvblJvdXRpbmdNYXAgT2JqZWN0LFxuICAgICAqIFN0b3JlcyBwYXJ0aXRpb24ga2V5IHJhbmdlcyBpbiBhbiBlZmZpY2llbnQgd2F5IHdpdGggc29tZSBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIGFuZCBwcm92aWRlc1xuICAgICAqIGNvbnZlbmllbmNlIG1ldGhvZHMgZm9yIHdvcmtpbmcgd2l0aCBzZXQgb2YgcmFuZ2VzLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHJhbmdlQnlJZCwgcmFuZ2VCeUluZm8sIG9yZGVyZWRQYXJ0aXRpb25LZXlSYW5nZXMsIG9yZGVyZWRQYXJ0aXRpb25JbmZvLCBjb2xsZWN0aW9uVW5pcXVlSWQpIHtcbiAgICAgICAgdGhpcy5yYW5nZUJ5SWQgPSByYW5nZUJ5SWQ7XG4gICAgICAgIHRoaXMucmFuZ2VCeUluZm8gPSByYW5nZUJ5SW5mbztcbiAgICAgICAgdGhpcy5vcmRlcmVkUGFydGl0aW9uS2V5UmFuZ2VzID0gb3JkZXJlZFBhcnRpdGlvbktleVJhbmdlcztcbiAgICAgICAgdGhpcy5vcmRlcmVkUmFuZ2VzID0gb3JkZXJlZFBhcnRpdGlvbktleVJhbmdlcy5tYXAocGtyID0+IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUXVlcnlSYW5nZV8xLlF1ZXJ5UmFuZ2UocGtyW2NvbW1vbl8xLkNvbnN0YW50cy5QYXJ0aXRpb25LZXlSYW5nZS5NaW5JbmNsdXNpdmVdLCBwa3JbY29tbW9uXzEuQ29uc3RhbnRzLlBhcnRpdGlvbktleVJhbmdlLk1heEV4Y2x1c2l2ZV0sIHRydWUsIGZhbHNlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMub3JkZXJlZFBhcnRpdGlvbkluZm8gPSBvcmRlcmVkUGFydGl0aW9uSW5mbztcbiAgICAgICAgdGhpcy5jb2xsZWN0aW9uVW5pcXVlSWQgPSBjb2xsZWN0aW9uVW5pcXVlSWQ7XG4gICAgfVxuICAgIGdldE9yZGVyZWRQYXJpdGlvbktleVJhbmdlcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3JkZXJlZFBhcnRpdGlvbktleVJhbmdlcztcbiAgICB9XG4gICAgZ2V0UmFuZ2VCeUVmZmVjdGl2ZVBhcnRpdGlvbktleShlZmZlY3RpdmVQYXJ0aXRpb25LZXlWYWx1ZSkge1xuICAgICAgICBpZiAoY29tbW9uXzEuQ29uc3RhbnRzLkVmZmVjdGl2ZVBhcml0aW9uS2V5Q29uc3RhbnRzLk1pbmltdW1JbmNsdXNpdmVFZmZlY3RpdmVQYXJ0aXRpb25LZXkgPT09IGVmZmVjdGl2ZVBhcnRpdGlvbktleVZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5vcmRlcmVkUGFydGl0aW9uS2V5UmFuZ2VzWzBdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb21tb25fMS5Db25zdGFudHMuRWZmZWN0aXZlUGFyaXRpb25LZXlDb25zdGFudHMuTWF4aW11bUV4Y2x1c2l2ZUVmZmVjdGl2ZVBhcnRpdGlvbktleSA9PT0gZWZmZWN0aXZlUGFydGl0aW9uS2V5VmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc29ydGVkTG93ID0gdGhpcy5vcmRlcmVkUmFuZ2VzLm1hcChyID0+IHtcbiAgICAgICAgICAgIHJldHVybiB7IHY6IHIubWluLCBiOiAhci5pc01pbkluY2x1c2l2ZSB9O1xuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgaW5kZXggPSBicy5sZShzb3J0ZWRMb3csIHsgdjogZWZmZWN0aXZlUGFydGl0aW9uS2V5VmFsdWUsIGI6IHRydWUgfSwgSW5NZW1vcnlDb2xsZWN0aW9uUm91dGluZ01hcC5fdmJDb21wYXJlRnVuY3Rpb24pO1xuICAgICAgICAvLyB0aGF0J3MgYW4gZXJyb3JcbiAgICAgICAgYXNzZXJ0XzEuZGVmYXVsdC5vayhpbmRleCA+PSAwLCBcImVycm9yIGluIGNvbGxlY3Rpb24gcm91dGluZyBtYXAsIHF1ZXJpZWQgcGFydGl0aW9uIGtleSBpcyBsZXNzIHRoYW4gdGhlIHN0YXJ0IHJhbmdlLlwiKTtcbiAgICAgICAgcmV0dXJuIHRoaXMub3JkZXJlZFBhcnRpdGlvbktleVJhbmdlc1tpbmRleF07XG4gICAgfVxuICAgIHN0YXRpYyBfdmJDb21wYXJlRnVuY3Rpb24oeCwgeSkge1xuICAgICAgICAvLyBUT0RPOiBXaGF0IGlzIHggJiB5PyBBIGJzIHR5cGU/XG4gICAgICAgIGlmICh4LnYgPiB5LnYpIHtcbiAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICB9XG4gICAgICAgIGlmICh4LnYgPCB5LnYpIHtcbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoeC5iID4geS5iKSB7XG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoeC5iIDwgeS5iKSB7XG4gICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIGdldE92ZXJsYXBwaW5nUmFuZ2VzKHByb3ZpZGVkUXVlcnlSYW5nZXMpIHtcbiAgICAgICAgY29uc3QgcHFyID0gQXJyYXkuaXNBcnJheShwcm92aWRlZFF1ZXJ5UmFuZ2VzKSA/IHByb3ZpZGVkUXVlcnlSYW5nZXMgOiBbcHJvdmlkZWRRdWVyeVJhbmdlc107XG4gICAgICAgIGNvbnN0IG1pblRvUGFydGl0aW9uUmFuZ2UgPSB7fTsgLy8gVE9ETzogYW55XG4gICAgICAgIGNvbnN0IHNvcnRlZExvdyA9IHRoaXMub3JkZXJlZFJhbmdlcy5tYXAociA9PiB7XG4gICAgICAgICAgICByZXR1cm4geyB2OiByLm1pbiwgYjogIXIuaXNNaW5JbmNsdXNpdmUgfTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHNvcnRlZEhpZ2ggPSB0aGlzLm9yZGVyZWRSYW5nZXMubWFwKHIgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHsgdjogci5tYXgsIGI6IHIuaXNNYXhJbmNsdXNpdmUgfTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIHRoaXMgZm9yIGxvb3AgZG9lc24ndCBpbnZva2UgYW55IGFzeW5jIGNhbGxiYWNrXG4gICAgICAgIGZvciAoY29uc3QgcXVlcnlSYW5nZSBvZiBwcXIpIHtcbiAgICAgICAgICAgIGlmIChxdWVyeVJhbmdlLmlzRW1wdHkoKSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgbWluSW5kZXggPSBicy5sZShzb3J0ZWRMb3csIHsgdjogcXVlcnlSYW5nZS5taW4sIGI6ICFxdWVyeVJhbmdlLmlzTWluSW5jbHVzaXZlIH0sIEluTWVtb3J5Q29sbGVjdGlvblJvdXRpbmdNYXAuX3ZiQ29tcGFyZUZ1bmN0aW9uKTtcbiAgICAgICAgICAgIGFzc2VydF8xLmRlZmF1bHQub2sobWluSW5kZXggPj0gMCwgXCJlcnJvciBpbiBjb2xsZWN0aW9uIHJvdXRpbmcgbWFwLCBxdWVyaWVkIHZhbHVlIGlzIGxlc3MgdGhhbiB0aGUgc3RhcnQgcmFuZ2UuXCIpO1xuICAgICAgICAgICAgY29uc3QgbWF4SW5kZXggPSBicy5nZShzb3J0ZWRIaWdoLCB7IHY6IHF1ZXJ5UmFuZ2UubWF4LCBiOiBxdWVyeVJhbmdlLmlzTWF4SW5jbHVzaXZlIH0sIEluTWVtb3J5Q29sbGVjdGlvblJvdXRpbmdNYXAuX3ZiQ29tcGFyZUZ1bmN0aW9uKTtcbiAgICAgICAgICAgIGFzc2VydF8xLmRlZmF1bHQub2sobWF4SW5kZXggPCBzb3J0ZWRIaWdoLmxlbmd0aCwgXCJlcnJvciBpbiBjb2xsZWN0aW9uIHJvdXRpbmcgbWFwLCBxdWVyaWVkIHZhbHVlIGlzIGdyZWF0ZXIgdGhhbiB0aGUgZW5kIHJhbmdlLlwiKTtcbiAgICAgICAgICAgIC8vIHRoZSBmb3IgbG9vcCBkb2Vzbid0IGludm9rZSBhbnkgYXN5bmMgY2FsbGJhY2tcbiAgICAgICAgICAgIGZvciAobGV0IGogPSBtaW5JbmRleDsgaiA8IG1heEluZGV4ICsgMTsgaisrKSB7XG4gICAgICAgICAgICAgICAgaWYgKHF1ZXJ5UmFuZ2Uub3ZlcmxhcHModGhpcy5vcmRlcmVkUmFuZ2VzW2pdKSkge1xuICAgICAgICAgICAgICAgICAgICBtaW5Ub1BhcnRpdGlvblJhbmdlW3RoaXMub3JkZXJlZFBhcnRpdGlvbktleVJhbmdlc1tqXVtjb21tb25fMS5Db25zdGFudHMuUGFydGl0aW9uS2V5UmFuZ2UuTWluSW5jbHVzaXZlXV0gPSB0aGlzLm9yZGVyZWRQYXJ0aXRpb25LZXlSYW5nZXNbal07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG92ZXJsYXBwaW5nUGFydGl0aW9uS2V5UmFuZ2VzID0gT2JqZWN0LmtleXMobWluVG9QYXJ0aXRpb25SYW5nZSkubWFwKGsgPT4gbWluVG9QYXJ0aXRpb25SYW5nZVtrXSk7XG4gICAgICAgIHJldHVybiBvdmVybGFwcGluZ1BhcnRpdGlvbktleVJhbmdlcy5zb3J0KHIgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHJbY29tbW9uXzEuQ29uc3RhbnRzLlBhcnRpdGlvbktleVJhbmdlLk1pbkluY2x1c2l2ZV07XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuSW5NZW1vcnlDb2xsZWN0aW9uUm91dGluZ01hcCA9IEluTWVtb3J5Q29sbGVjdGlvblJvdXRpbmdNYXA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbk1lbW9yeUNvbGxlY3Rpb25Sb3V0aW5nTWFwLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/routing/inMemoryCollectionRoutingMap.js\n");

/***/ }),

/***/ "./lib/routing/index.js":
/*!******************************!*\
  !*** ./lib/routing/index.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./QueryRange */ \"./lib/routing/QueryRange.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./CollectionRoutingMapFactory */ \"./lib/routing/CollectionRoutingMapFactory.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./inMemoryCollectionRoutingMap */ \"./lib/routing/inMemoryCollectionRoutingMap.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./partitionKeyRangeCache */ \"./lib/routing/partitionKeyRangeCache.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./smartRoutingMapProvider */ \"./lib/routing/smartRoutingMapProvider.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcm91dGluZy9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL2xpYi9yb3V0aW5nL2luZGV4LmpzPzBlMzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vUXVlcnlSYW5nZVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Db2xsZWN0aW9uUm91dGluZ01hcEZhY3RvcnlcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vaW5NZW1vcnlDb2xsZWN0aW9uUm91dGluZ01hcFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wYXJ0aXRpb25LZXlSYW5nZUNhY2hlXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NtYXJ0Um91dGluZ01hcFByb3ZpZGVyXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/routing/index.js\n");

/***/ }),

/***/ "./lib/routing/partitionKeyRangeCache.js":
/*!***********************************************!*\
  !*** ./lib/routing/partitionKeyRangeCache.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst semaphore_1 = tslib_1.__importDefault(__webpack_require__(/*! semaphore */ \"./node_modules/semaphore/lib/semaphore.js\"));\nconst _1 = __webpack_require__(/*! . */ \"./lib/routing/index.js\");\nconst common_1 = __webpack_require__(/*! ../common */ \"./lib/common/index.js\");\n/** @hidden */\nclass PartitionKeyRangeCache {\n    constructor(clientContext) {\n        this.clientContext = clientContext;\n        this.collectionRoutingMapByCollectionId = {};\n        this.sem = semaphore_1.default(1);\n    }\n    /**\n     * Finds or Instantiates the requested Collection Routing Map and invokes callback\n     * @param {callback} callback                - Function to execute for the collection routing map.\n     *                                             the function takes two parameters error, collectionRoutingMap.\n     * @param {string} collectionLink            - Requested collectionLink\n     * @ignore\n     */\n    onCollectionRoutingMap(collectionLink) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const collectionId = common_1.Helper.getIdFromLink(collectionLink);\n            let collectionRoutingMap = this.collectionRoutingMapByCollectionId[collectionId];\n            if (collectionRoutingMap === undefined) {\n                // attempt to consturct collection routing map\n                collectionRoutingMap = yield new Promise((resolve, reject) => {\n                    const semaphorizedFuncCollectionMapInstantiator = () => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                        let crm = this.collectionRoutingMapByCollectionId[collectionId];\n                        if (crm === undefined) {\n                            try {\n                                const { result: resources } = yield this.clientContext.queryPartitionKeyRanges(collectionLink).toArray();\n                                crm = _1.CollectionRoutingMapFactory.createCompleteRoutingMap(resources.map(r => [r, true]), collectionId);\n                                this.collectionRoutingMapByCollectionId[collectionId] = crm;\n                                this.sem.leave();\n                                resolve(crm);\n                            }\n                            catch (err) {\n                                this.sem.leave();\n                                reject(err);\n                            }\n                        }\n                        else {\n                            // sanity gaurd\n                            this.sem.leave();\n                            // TODO: it looks like this code should never be reached...\n                            // return resolve(collectionRoutingMap.getOverlappingRanges(partitionKeyRanges));\n                            reject(new Error(\"Not yet implemented\"));\n                        }\n                    });\n                    // We want only one attempt to construct collectionRoutingMap\n                    // so we pass the consturction in the semaphore take\n                    this.sem.take(semaphorizedFuncCollectionMapInstantiator);\n                });\n            }\n            return collectionRoutingMap;\n        });\n    }\n    /**\n     * Given the query ranges and a collection, invokes the callback on the list of overlapping partition key ranges\n     * @param {callback} callback - Function execute on the overlapping partition key ranges result,\n     *                                  takes two parameters error, partition key ranges\n     * @param collectionLink\n     * @param queryRanges\n     * @ignore\n     */\n    getOverlappingRanges(collectionLink, queryRanges) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const crm = yield this.onCollectionRoutingMap(collectionLink);\n            return crm.getOverlappingRanges(queryRanges);\n        });\n    }\n}\nexports.PartitionKeyRangeCache = PartitionKeyRangeCache;\n//# sourceMappingURL=partitionKeyRangeCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcm91dGluZy9wYXJ0aXRpb25LZXlSYW5nZUNhY2hlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbGliL3JvdXRpbmcvcGFydGl0aW9uS2V5UmFuZ2VDYWNoZS5qcz9kOTU0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IHNlbWFwaG9yZV8xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInNlbWFwaG9yZVwiKSk7XG5jb25zdCBfMSA9IHJlcXVpcmUoXCIuXCIpO1xuY29uc3QgY29tbW9uXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uXCIpO1xuLyoqIEBoaWRkZW4gKi9cbmNsYXNzIFBhcnRpdGlvbktleVJhbmdlQ2FjaGUge1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudENvbnRleHQpIHtcbiAgICAgICAgdGhpcy5jbGllbnRDb250ZXh0ID0gY2xpZW50Q29udGV4dDtcbiAgICAgICAgdGhpcy5jb2xsZWN0aW9uUm91dGluZ01hcEJ5Q29sbGVjdGlvbklkID0ge307XG4gICAgICAgIHRoaXMuc2VtID0gc2VtYXBob3JlXzEuZGVmYXVsdCgxKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRmluZHMgb3IgSW5zdGFudGlhdGVzIHRoZSByZXF1ZXN0ZWQgQ29sbGVjdGlvbiBSb3V0aW5nIE1hcCBhbmQgaW52b2tlcyBjYWxsYmFja1xuICAgICAqIEBwYXJhbSB7Y2FsbGJhY2t9IGNhbGxiYWNrICAgICAgICAgICAgICAgIC0gRnVuY3Rpb24gdG8gZXhlY3V0ZSBmb3IgdGhlIGNvbGxlY3Rpb24gcm91dGluZyBtYXAuXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgZnVuY3Rpb24gdGFrZXMgdHdvIHBhcmFtZXRlcnMgZXJyb3IsIGNvbGxlY3Rpb25Sb3V0aW5nTWFwLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uTGluayAgICAgICAgICAgIC0gUmVxdWVzdGVkIGNvbGxlY3Rpb25MaW5rXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIG9uQ29sbGVjdGlvblJvdXRpbmdNYXAoY29sbGVjdGlvbkxpbmspIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgY29sbGVjdGlvbklkID0gY29tbW9uXzEuSGVscGVyLmdldElkRnJvbUxpbmsoY29sbGVjdGlvbkxpbmspO1xuICAgICAgICAgICAgbGV0IGNvbGxlY3Rpb25Sb3V0aW5nTWFwID0gdGhpcy5jb2xsZWN0aW9uUm91dGluZ01hcEJ5Q29sbGVjdGlvbklkW2NvbGxlY3Rpb25JZF07XG4gICAgICAgICAgICBpZiAoY29sbGVjdGlvblJvdXRpbmdNYXAgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIC8vIGF0dGVtcHQgdG8gY29uc3R1cmN0IGNvbGxlY3Rpb24gcm91dGluZyBtYXBcbiAgICAgICAgICAgICAgICBjb2xsZWN0aW9uUm91dGluZ01hcCA9IHlpZWxkIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VtYXBob3JpemVkRnVuY0NvbGxlY3Rpb25NYXBJbnN0YW50aWF0b3IgPSAoKSA9PiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjcm0gPSB0aGlzLmNvbGxlY3Rpb25Sb3V0aW5nTWFwQnlDb2xsZWN0aW9uSWRbY29sbGVjdGlvbklkXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjcm0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgcmVzdWx0OiByZXNvdXJjZXMgfSA9IHlpZWxkIHRoaXMuY2xpZW50Q29udGV4dC5xdWVyeVBhcnRpdGlvbktleVJhbmdlcyhjb2xsZWN0aW9uTGluaykudG9BcnJheSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcm0gPSBfMS5Db2xsZWN0aW9uUm91dGluZ01hcEZhY3RvcnkuY3JlYXRlQ29tcGxldGVSb3V0aW5nTWFwKHJlc291cmNlcy5tYXAociA9PiBbciwgdHJ1ZV0pLCBjb2xsZWN0aW9uSWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbGxlY3Rpb25Sb3V0aW5nTWFwQnlDb2xsZWN0aW9uSWRbY29sbGVjdGlvbklkXSA9IGNybTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZW0ubGVhdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShjcm0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VtLmxlYXZlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNhbml0eSBnYXVyZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VtLmxlYXZlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gVE9ETzogaXQgbG9va3MgbGlrZSB0aGlzIGNvZGUgc2hvdWxkIG5ldmVyIGJlIHJlYWNoZWQuLi5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gcmVzb2x2ZShjb2xsZWN0aW9uUm91dGluZ01hcC5nZXRPdmVybGFwcGluZ1JhbmdlcyhwYXJ0aXRpb25LZXlSYW5nZXMpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAvLyBXZSB3YW50IG9ubHkgb25lIGF0dGVtcHQgdG8gY29uc3RydWN0IGNvbGxlY3Rpb25Sb3V0aW5nTWFwXG4gICAgICAgICAgICAgICAgICAgIC8vIHNvIHdlIHBhc3MgdGhlIGNvbnN0dXJjdGlvbiBpbiB0aGUgc2VtYXBob3JlIHRha2VcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZW0udGFrZShzZW1hcGhvcml6ZWRGdW5jQ29sbGVjdGlvbk1hcEluc3RhbnRpYXRvcik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY29sbGVjdGlvblJvdXRpbmdNYXA7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHaXZlbiB0aGUgcXVlcnkgcmFuZ2VzIGFuZCBhIGNvbGxlY3Rpb24sIGludm9rZXMgdGhlIGNhbGxiYWNrIG9uIHRoZSBsaXN0IG9mIG92ZXJsYXBwaW5nIHBhcnRpdGlvbiBrZXkgcmFuZ2VzXG4gICAgICogQHBhcmFtIHtjYWxsYmFja30gY2FsbGJhY2sgLSBGdW5jdGlvbiBleGVjdXRlIG9uIHRoZSBvdmVybGFwcGluZyBwYXJ0aXRpb24ga2V5IHJhbmdlcyByZXN1bHQsXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFrZXMgdHdvIHBhcmFtZXRlcnMgZXJyb3IsIHBhcnRpdGlvbiBrZXkgcmFuZ2VzXG4gICAgICogQHBhcmFtIGNvbGxlY3Rpb25MaW5rXG4gICAgICogQHBhcmFtIHF1ZXJ5UmFuZ2VzXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGdldE92ZXJsYXBwaW5nUmFuZ2VzKGNvbGxlY3Rpb25MaW5rLCBxdWVyeVJhbmdlcykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBjcm0gPSB5aWVsZCB0aGlzLm9uQ29sbGVjdGlvblJvdXRpbmdNYXAoY29sbGVjdGlvbkxpbmspO1xuICAgICAgICAgICAgcmV0dXJuIGNybS5nZXRPdmVybGFwcGluZ1JhbmdlcyhxdWVyeVJhbmdlcyk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuUGFydGl0aW9uS2V5UmFuZ2VDYWNoZSA9IFBhcnRpdGlvbktleVJhbmdlQ2FjaGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJ0aXRpb25LZXlSYW5nZUNhY2hlLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/routing/partitionKeyRangeCache.js\n");

/***/ }),

/***/ "./lib/routing/smartRoutingMapProvider.js":
/*!************************************************!*\
  !*** ./lib/routing/smartRoutingMapProvider.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst assert_1 = tslib_1.__importDefault(__webpack_require__(/*! assert */ \"./node_modules/assert/assert.js\"));\nconst _1 = __webpack_require__(/*! . */ \"./lib/routing/index.js\");\nconst common_1 = __webpack_require__(/*! ../common */ \"./lib/common/index.js\");\n/** @hidden */\nexports.PARITIONKEYRANGE = common_1.Constants.PartitionKeyRange;\n/** @hidden */\nclass SmartRoutingMapProvider {\n    constructor(clientContext) {\n        this.partitionKeyRangeCache = new _1.PartitionKeyRangeCache(clientContext);\n    }\n    static _secondRangeIsAfterFirstRange(range1, range2) {\n        assert_1.default.notEqual(range1.max, undefined, \"invalid arg\");\n        assert_1.default.notEqual(range2.min, undefined, \"invalid arg\");\n        if (range1.max > range2.min) {\n            // r.min < #previous_r.max\n            return false;\n        }\n        else {\n            if (range1.max === range2.min && range1.isMaxInclusive && range2.isMinInclusive) {\n                // the inclusive ending endpoint of previous_r is the same as the inclusive beginning endpoint of r\n                // they share a point\n                return false;\n            }\n            return true;\n        }\n    }\n    static _isSortedAndNonOverlapping(ranges) {\n        for (let idx = 1; idx < ranges.length; idx++) {\n            const previousR = ranges[idx - 1];\n            const r = ranges[idx];\n            if (!this._secondRangeIsAfterFirstRange(previousR, r)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static _stringMax(a, b) {\n        return a >= b ? a : b;\n    }\n    static _stringCompare(a, b) {\n        return a === b ? 0 : a > b ? 1 : -1;\n    }\n    static _subtractRange(r, partitionKeyRange) {\n        const left = this._stringMax(partitionKeyRange[exports.PARITIONKEYRANGE.MaxExclusive], r.min);\n        const leftInclusive = this._stringCompare(left, r.min) === 0 ? r.isMinInclusive : false;\n        return new _1.QueryRange(left, r.max, leftInclusive, r.isMaxInclusive);\n    }\n    /**\n     * Given the sorted ranges and a collection, invokes the callback on the list of overlapping partition key ranges\n     * @param {callback} callback - Function execute on the overlapping partition key ranges result,\n     *                              takes two parameters error, partition key ranges\n     * @param collectionLink\n     * @param sortedRanges\n     * @ignore\n     */\n    getOverlappingRanges(collectionLink, sortedRanges) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            // validate if the list is non- overlapping and sorted                             TODO: any PartitionKeyRanges\n            if (!SmartRoutingMapProvider._isSortedAndNonOverlapping(sortedRanges)) {\n                throw new Error(\"the list of ranges is not a non-overlapping sorted ranges\");\n            }\n            let partitionKeyRanges = []; // TODO: any ParitionKeyRanges\n            if (sortedRanges.length === 0) {\n                return partitionKeyRanges;\n            }\n            const collectionRoutingMap = yield this.partitionKeyRangeCache.onCollectionRoutingMap(collectionLink);\n            let index = 0;\n            let currentProvidedRange = sortedRanges[index];\n            while (true) {\n                if (currentProvidedRange.isEmpty()) {\n                    // skip and go to the next item\n                    if (++index >= sortedRanges.length) {\n                        return partitionKeyRanges;\n                    }\n                    currentProvidedRange = sortedRanges[index];\n                    continue;\n                }\n                let queryRange;\n                if (partitionKeyRanges.length > 0) {\n                    queryRange = SmartRoutingMapProvider._subtractRange(currentProvidedRange, partitionKeyRanges[partitionKeyRanges.length - 1]);\n                }\n                else {\n                    queryRange = currentProvidedRange;\n                }\n                const overlappingRanges = collectionRoutingMap.getOverlappingRanges(queryRange);\n                assert_1.default.ok(overlappingRanges.length > 0, `error: returned overlapping ranges for queryRange ${queryRange} is empty`);\n                partitionKeyRanges = partitionKeyRanges.concat(overlappingRanges);\n                const lastKnownTargetRange = _1.QueryRange.parsePartitionKeyRange(partitionKeyRanges[partitionKeyRanges.length - 1]);\n                assert_1.default.notEqual(lastKnownTargetRange, undefined);\n                // the overlapping ranges must contain the requested range\n                assert_1.default.ok(SmartRoutingMapProvider._stringCompare(currentProvidedRange.max, lastKnownTargetRange.max) <= 0, `error: returned overlapping ranges ${overlappingRanges} \\\n                    does not contain the requested range ${queryRange}`);\n                // the current range is contained in partitionKeyRanges just move forward\n                if (++index >= sortedRanges.length) {\n                    return partitionKeyRanges;\n                }\n                currentProvidedRange = sortedRanges[index];\n                while (SmartRoutingMapProvider._stringCompare(currentProvidedRange.max, lastKnownTargetRange.max) <= 0) {\n                    // the current range is covered too.just move forward\n                    if (++index >= sortedRanges.length) {\n                        return partitionKeyRanges;\n                    }\n                    currentProvidedRange = sortedRanges[index];\n                }\n            }\n        });\n    }\n}\nexports.SmartRoutingMapProvider = SmartRoutingMapProvider;\n//# sourceMappingURL=smartRoutingMapProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/routing/smartRoutingMapProvider.js\n");

/***/ }),

/***/ "./lib/session/VectorSessionToken.js":
/*!*******************************************!*\
  !*** ./lib/session/VectorSessionToken.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst big_integer_1 = tslib_1.__importDefault(__webpack_require__(/*! big-integer */ \"./node_modules/big-integer/BigInteger.js\"));\nconst util_1 = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n/**\n * Models vector clock bases session token. Session token has the following format:\n * {Version}#{GlobalLSN}#{RegionId1}={LocalLsn1}#{RegionId2}={LocalLsn2}....#{RegionIdN}={LocalLsnN}\n * 'Version' captures the configuration number of the partition which returned this session token.\n * 'Version' is incremented everytime topology of the partition is updated (say due to Add/Remove/Failover).\n *\n * The choice of separators '#' and '=' is important. Separators ';' and ',' are used to delimit\n * per-partitionKeyRange session token\n * @hidden\n * @private\n *\n */\nclass VectorSessionToken {\n    constructor(version, globalLsn, localLsnByregion, sessionToken) {\n        this.version = version;\n        this.globalLsn = globalLsn;\n        this.localLsnByregion = localLsnByregion;\n        this.sessionToken = sessionToken;\n        if (!this.sessionToken) {\n            const regionAndLocalLsn = [];\n            for (const [key, value] of this.localLsnByregion.entries()) {\n                regionAndLocalLsn.push(`${key}${VectorSessionToken.REGION_PROGRESS_SEPARATOR}${value}`);\n            }\n            const regionProgress = regionAndLocalLsn.join(VectorSessionToken.SEGMENT_SEPARATOR);\n            if (regionProgress === \"\") {\n                this.sessionToken = `${this.version}${VectorSessionToken.SEGMENT_SEPARATOR}${this.globalLsn}`;\n            }\n            else {\n                this.sessionToken = `${this.version}${VectorSessionToken.SEGMENT_SEPARATOR}${this.globalLsn}${VectorSessionToken.SEGMENT_SEPARATOR}${regionProgress}`;\n            }\n        }\n    }\n    static create(sessionToken) {\n        if (!sessionToken) {\n            return null;\n        }\n        const [versionStr, globalLsnStr, ...regionSegments] = sessionToken.split(VectorSessionToken.SEGMENT_SEPARATOR);\n        const version = parseInt(versionStr, 10);\n        const globalLsn = parseFloat(globalLsnStr);\n        if (!util_1.isNumber(version) || !util_1.isNumber(globalLsn)) {\n            return null;\n        }\n        const lsnByRegion = new Map();\n        for (const regionSegment of regionSegments) {\n            const [regionIdStr, localLsnStr] = regionSegment.split(VectorSessionToken.REGION_PROGRESS_SEPARATOR);\n            if (!regionIdStr || !localLsnStr) {\n                return null;\n            }\n            const regionId = parseInt(regionIdStr, 10);\n            let localLsn;\n            try {\n                localLsn = big_integer_1.default(localLsnStr);\n            }\n            catch (err) {\n                // TODO: log error\n                return null;\n            }\n            if (!util_1.isNumber(regionId)) {\n                return null;\n            }\n            lsnByRegion.set(regionId, localLsn);\n        }\n        return new VectorSessionToken(version, globalLsn, lsnByRegion, sessionToken);\n    }\n    equals(other) {\n        return !other\n            ? false\n            : this.version === other.version &&\n                this.globalLsn === other.globalLsn &&\n                this.areRegionProgressEqual(other.localLsnByregion);\n    }\n    merge(other) {\n        if (other == null) {\n            throw new Error(\"other (Vector Session Token) must not be null\");\n        }\n        if (this.version === other.version && this.localLsnByregion.size !== other.localLsnByregion.size) {\n            throw new Error(`Compared session tokens ${this.sessionToken} and ${other.sessionToken} have unexpected regions`);\n        }\n        const [higherVersionSessionToken, lowerVersionSessionToken] = this.version < other.version ? [other, this] : [this, other];\n        const highestLocalLsnByRegion = new Map();\n        for (const [regionId, highLocalLsn] of higherVersionSessionToken.localLsnByregion.entries()) {\n            const lowLocalLsn = lowerVersionSessionToken.localLsnByregion.get(regionId);\n            if (lowLocalLsn) {\n                highestLocalLsnByRegion.set(regionId, big_integer_1.default.max(highLocalLsn, lowLocalLsn));\n            }\n            else if (this.version === other.version) {\n                throw new Error(`Compared session tokens have unexpected regions. Session 1: ${this.sessionToken} - Session 2: ${this.sessionToken}`);\n            }\n            else {\n                highestLocalLsnByRegion.set(regionId, highLocalLsn);\n            }\n        }\n        return new VectorSessionToken(Math.max(this.version, other.version), Math.max(this.globalLsn, other.globalLsn), highestLocalLsnByRegion);\n    }\n    toString() {\n        return this.sessionToken;\n    }\n    areRegionProgressEqual(other) {\n        if (this.localLsnByregion.size !== other.size) {\n            return false;\n        }\n        for (const [regionId, localLsn] of this.localLsnByregion.entries()) {\n            const otherLocalLsn = other.get(regionId);\n            if (localLsn !== otherLocalLsn) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nVectorSessionToken.SEGMENT_SEPARATOR = \"#\";\nVectorSessionToken.REGION_PROGRESS_SEPARATOR = \"=\";\nexports.VectorSessionToken = VectorSessionToken;\n//# sourceMappingURL=VectorSessionToken.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/session/VectorSessionToken.js\n");

/***/ }),

/***/ "./lib/session/sessionContainer.js":
/*!*****************************************!*\
  !*** ./lib/session/sessionContainer.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common_1 = __webpack_require__(/*! ../common */ \"./lib/common/index.js\");\nconst VectorSessionToken_1 = __webpack_require__(/*! ./VectorSessionToken */ \"./lib/session/VectorSessionToken.js\");\n/** @hidden */\nclass SessionContainer {\n    constructor(collectionNameToCollectionResourceId = new Map(), collectionResourceIdToSessionTokens = new Map()) {\n        this.collectionNameToCollectionResourceId = collectionNameToCollectionResourceId;\n        this.collectionResourceIdToSessionTokens = collectionResourceIdToSessionTokens;\n    }\n    get(request) {\n        if (!request) {\n            throw new Error(\"request cannot be null\");\n        }\n        const collectionName = common_1.Helper.getContainerLink(common_1.Helper.trimSlashes(request.resourceAddress));\n        const rangeIdToTokenMap = this.getPartitionKeyRangeIdToTokenMap(collectionName);\n        return SessionContainer.getCombinedSessionTokenString(rangeIdToTokenMap);\n    }\n    remove(request) {\n        let collectionResourceId;\n        const resourceAddress = common_1.Helper.trimSlashes(request.resourceAddress);\n        const collectionName = common_1.Helper.getContainerLink(resourceAddress);\n        if (collectionName) {\n            collectionResourceId = this.collectionNameToCollectionResourceId.get(collectionName);\n            this.collectionNameToCollectionResourceId.delete(collectionName);\n        }\n        if (collectionResourceId !== undefined) {\n            this.collectionResourceIdToSessionTokens.delete(collectionResourceId);\n        }\n    }\n    set(request, resHeaders) {\n        // TODO: we check the master logic a few different places. Might not need it.\n        if (!resHeaders || SessionContainer.isReadingFromMaster(request.resourceType, request.operationType)) {\n            return;\n        }\n        const sessionTokenString = resHeaders[common_1.Constants.HttpHeaders.SessionToken];\n        if (!sessionTokenString) {\n            return;\n        }\n        const containerName = this.getContainerName(request, resHeaders);\n        const ownerId = !request.isNameBased\n            ? request.resourceId\n            : resHeaders[common_1.Constants.HttpHeaders.OwnerId] || request.resourceId;\n        if (!ownerId) {\n            return;\n        }\n        const resourceIdObject = new common_1.ResourceId();\n        const resourceId = resourceIdObject.parse(ownerId);\n        if (resourceId.documentCollection !== common_1.EMPTY && containerName) {\n            const containerRid = resourceId.getUniqueDocumentCollectionId();\n            if (!this.collectionResourceIdToSessionTokens.has(containerRid)) {\n                this.collectionResourceIdToSessionTokens.set(containerRid, new Map());\n            }\n            if (!this.collectionNameToCollectionResourceId.has(containerName)) {\n                this.collectionNameToCollectionResourceId.set(containerName, containerRid);\n            }\n            const containerSessionContainer = this.collectionResourceIdToSessionTokens.get(containerRid);\n            SessionContainer.compareAndSetToken(sessionTokenString, containerSessionContainer);\n        }\n    }\n    getPartitionKeyRangeIdToTokenMap(collectionName) {\n        let rangeIdToTokenMap = null;\n        if (collectionName && this.collectionNameToCollectionResourceId.has(collectionName)) {\n            rangeIdToTokenMap = this.collectionResourceIdToSessionTokens.get(this.collectionNameToCollectionResourceId.get(collectionName));\n        }\n        return rangeIdToTokenMap;\n    }\n    static getCombinedSessionTokenString(tokens) {\n        if (!tokens || tokens.size === 0) {\n            return SessionContainer.EMPTY_SESSION_TOKEN;\n        }\n        let result = \"\";\n        for (const [range, token] of tokens.entries()) {\n            result +=\n                range +\n                    SessionContainer.SESSION_TOKEN_PARTITION_SPLITTER +\n                    token.toString() +\n                    SessionContainer.SESSION_TOKEN_SEPARATOR;\n        }\n        return result.slice(0, -1);\n    }\n    static compareAndSetToken(newTokenString, containerSessionTokens) {\n        if (!newTokenString) {\n            return;\n        }\n        const partitionsParts = newTokenString.split(SessionContainer.SESSION_TOKEN_SEPARATOR);\n        for (const partitionPart of partitionsParts) {\n            const newTokenParts = partitionPart.split(SessionContainer.SESSION_TOKEN_PARTITION_SPLITTER);\n            if (newTokenParts.length !== 2) {\n                return;\n            }\n            const range = newTokenParts[0];\n            const newToken = VectorSessionToken_1.VectorSessionToken.create(newTokenParts[1]);\n            const tokenForRange = !containerSessionTokens.get(range)\n                ? newToken\n                : containerSessionTokens.get(range).merge(newToken);\n            containerSessionTokens.set(range, tokenForRange);\n        }\n    }\n    // TODO: have a assert if the type doesn't mastch known types\n    static isReadingFromMaster(resourceType, operationType) {\n        if (resourceType === common_1.Constants.Path.OffersPathSegment ||\n            resourceType === common_1.Constants.Path.DatabasesPathSegment ||\n            resourceType === common_1.Constants.Path.UsersPathSegment ||\n            resourceType === common_1.Constants.Path.PermissionsPathSegment ||\n            resourceType === common_1.Constants.Path.TopologyPathSegment ||\n            resourceType === common_1.Constants.Path.DatabaseAccountPathSegment ||\n            resourceType === common_1.Constants.Path.PartitionKeyRangesPathSegment ||\n            (resourceType === common_1.Constants.Path.CollectionsPathSegment && operationType === common_1.Constants.OperationTypes.Query)) {\n            return true;\n        }\n        return false;\n    }\n    getContainerName(request, headers) {\n        let ownerFullName = headers[common_1.Constants.HttpHeaders.OwnerFullName];\n        if (!ownerFullName) {\n            ownerFullName = common_1.Helper.trimSlashes(request.resourceAddress);\n        }\n        return common_1.Helper.getContainerLink(ownerFullName);\n    }\n}\nSessionContainer.EMPTY_SESSION_TOKEN = \"\";\nSessionContainer.SESSION_TOKEN_SEPARATOR = \",\";\nSessionContainer.SESSION_TOKEN_PARTITION_SPLITTER = \":\";\nexports.SessionContainer = SessionContainer;\n//# sourceMappingURL=sessionContainer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/session/sessionContainer.js\n");

/***/ }),

/***/ "./node_modules/assert/assert.js":
/*!***************************************!*\
  !*** ./node_modules/assert/assert.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = __webpack_require__(/*! util/ */ \"./node_modules/util/util.js\");\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/assert/assert.js\n");

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL2Jhc2U2NC1qcy9pbmRleC5qcz8xZmI1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5leHBvcnRzLmJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoXG5leHBvcnRzLnRvQnl0ZUFycmF5ID0gdG9CeXRlQXJyYXlcbmV4cG9ydHMuZnJvbUJ5dGVBcnJheSA9IGZyb21CeXRlQXJyYXlcblxudmFyIGxvb2t1cCA9IFtdXG52YXIgcmV2TG9va3VwID0gW11cbnZhciBBcnIgPSB0eXBlb2YgVWludDhBcnJheSAhPT0gJ3VuZGVmaW5lZCcgPyBVaW50OEFycmF5IDogQXJyYXlcblxudmFyIGNvZGUgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLydcbmZvciAodmFyIGkgPSAwLCBsZW4gPSBjb2RlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gIGxvb2t1cFtpXSA9IGNvZGVbaV1cbiAgcmV2TG9va3VwW2NvZGUuY2hhckNvZGVBdChpKV0gPSBpXG59XG5cbi8vIFN1cHBvcnQgZGVjb2RpbmcgVVJMLXNhZmUgYmFzZTY0IHN0cmluZ3MsIGFzIE5vZGUuanMgZG9lcy5cbi8vIFNlZTogaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQmFzZTY0I1VSTF9hcHBsaWNhdGlvbnNcbnJldkxvb2t1cFsnLScuY2hhckNvZGVBdCgwKV0gPSA2MlxucmV2TG9va3VwWydfJy5jaGFyQ29kZUF0KDApXSA9IDYzXG5cbmZ1bmN0aW9uIGdldExlbnMgKGI2NCkge1xuICB2YXIgbGVuID0gYjY0Lmxlbmd0aFxuXG4gIGlmIChsZW4gJSA0ID4gMCkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzdHJpbmcuIExlbmd0aCBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgNCcpXG4gIH1cblxuICAvLyBUcmltIG9mZiBleHRyYSBieXRlcyBhZnRlciBwbGFjZWhvbGRlciBieXRlcyBhcmUgZm91bmRcbiAgLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vYmVhdGdhbW1pdC9iYXNlNjQtanMvaXNzdWVzLzQyXG4gIHZhciB2YWxpZExlbiA9IGI2NC5pbmRleE9mKCc9JylcbiAgaWYgKHZhbGlkTGVuID09PSAtMSkgdmFsaWRMZW4gPSBsZW5cblxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gdmFsaWRMZW4gPT09IGxlblxuICAgID8gMFxuICAgIDogNCAtICh2YWxpZExlbiAlIDQpXG5cbiAgcmV0dXJuIFt2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuXVxufVxuXG4vLyBiYXNlNjQgaXMgNC8zICsgdXAgdG8gdHdvIGNoYXJhY3RlcnMgb2YgdGhlIG9yaWdpbmFsIGRhdGFcbmZ1bmN0aW9uIGJ5dGVMZW5ndGggKGI2NCkge1xuICB2YXIgbGVucyA9IGdldExlbnMoYjY0KVxuICB2YXIgdmFsaWRMZW4gPSBsZW5zWzBdXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSBsZW5zWzFdXG4gIHJldHVybiAoKHZhbGlkTGVuICsgcGxhY2VIb2xkZXJzTGVuKSAqIDMgLyA0KSAtIHBsYWNlSG9sZGVyc0xlblxufVxuXG5mdW5jdGlvbiBfYnl0ZUxlbmd0aCAoYjY0LCB2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuKSB7XG4gIHJldHVybiAoKHZhbGlkTGVuICsgcGxhY2VIb2xkZXJzTGVuKSAqIDMgLyA0KSAtIHBsYWNlSG9sZGVyc0xlblxufVxuXG5mdW5jdGlvbiB0b0J5dGVBcnJheSAoYjY0KSB7XG4gIHZhciB0bXBcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuXG4gIHZhciBhcnIgPSBuZXcgQXJyKF9ieXRlTGVuZ3RoKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikpXG5cbiAgdmFyIGN1ckJ5dGUgPSAwXG5cbiAgLy8gaWYgdGhlcmUgYXJlIHBsYWNlaG9sZGVycywgb25seSBnZXQgdXAgdG8gdGhlIGxhc3QgY29tcGxldGUgNCBjaGFyc1xuICB2YXIgbGVuID0gcGxhY2VIb2xkZXJzTGVuID4gMFxuICAgID8gdmFsaWRMZW4gLSA0XG4gICAgOiB2YWxpZExlblxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTgpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCAxMikgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildIDw8IDYpIHxcbiAgICAgIHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMyldXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDE2KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICBpZiAocGxhY2VIb2xkZXJzTGVuID09PSAyKSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA+PiA0KVxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMSkge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxMCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDQpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA+PiAyKVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBhcnJcbn1cblxuZnVuY3Rpb24gdHJpcGxldFRvQmFzZTY0IChudW0pIHtcbiAgcmV0dXJuIGxvb2t1cFtudW0gPj4gMTggJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiAxMiAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtID4+IDYgJiAweDNGXSArXG4gICAgbG9va3VwW251bSAmIDB4M0ZdXG59XG5cbmZ1bmN0aW9uIGVuY29kZUNodW5rICh1aW50OCwgc3RhcnQsIGVuZCkge1xuICB2YXIgdG1wXG4gIHZhciBvdXRwdXQgPSBbXVxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gMykge1xuICAgIHRtcCA9XG4gICAgICAoKHVpbnQ4W2ldIDw8IDE2KSAmIDB4RkYwMDAwKSArXG4gICAgICAoKHVpbnQ4W2kgKyAxXSA8PCA4KSAmIDB4RkYwMCkgK1xuICAgICAgKHVpbnQ4W2kgKyAyXSAmIDB4RkYpXG4gICAgb3V0cHV0LnB1c2godHJpcGxldFRvQmFzZTY0KHRtcCkpXG4gIH1cbiAgcmV0dXJuIG91dHB1dC5qb2luKCcnKVxufVxuXG5mdW5jdGlvbiBmcm9tQnl0ZUFycmF5ICh1aW50OCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW4gPSB1aW50OC5sZW5ndGhcbiAgdmFyIGV4dHJhQnl0ZXMgPSBsZW4gJSAzIC8vIGlmIHdlIGhhdmUgMSBieXRlIGxlZnQsIHBhZCAyIGJ5dGVzXG4gIHZhciBwYXJ0cyA9IFtdXG4gIHZhciBtYXhDaHVua0xlbmd0aCA9IDE2MzgzIC8vIG11c3QgYmUgbXVsdGlwbGUgb2YgM1xuXG4gIC8vIGdvIHRocm91Z2ggdGhlIGFycmF5IGV2ZXJ5IHRocmVlIGJ5dGVzLCB3ZSdsbCBkZWFsIHdpdGggdHJhaWxpbmcgc3R1ZmYgbGF0ZXJcbiAgZm9yICh2YXIgaSA9IDAsIGxlbjIgPSBsZW4gLSBleHRyYUJ5dGVzOyBpIDwgbGVuMjsgaSArPSBtYXhDaHVua0xlbmd0aCkge1xuICAgIHBhcnRzLnB1c2goZW5jb2RlQ2h1bmsoXG4gICAgICB1aW50OCwgaSwgKGkgKyBtYXhDaHVua0xlbmd0aCkgPiBsZW4yID8gbGVuMiA6IChpICsgbWF4Q2h1bmtMZW5ndGgpXG4gICAgKSlcbiAgfVxuXG4gIC8vIHBhZCB0aGUgZW5kIHdpdGggemVyb3MsIGJ1dCBtYWtlIHN1cmUgdG8gbm90IGZvcmdldCB0aGUgZXh0cmEgYnl0ZXNcbiAgaWYgKGV4dHJhQnl0ZXMgPT09IDEpIHtcbiAgICB0bXAgPSB1aW50OFtsZW4gLSAxXVxuICAgIHBhcnRzLnB1c2goXG4gICAgICBsb29rdXBbdG1wID4+IDJdICtcbiAgICAgIGxvb2t1cFsodG1wIDw8IDQpICYgMHgzRl0gK1xuICAgICAgJz09J1xuICAgIClcbiAgfSBlbHNlIGlmIChleHRyYUJ5dGVzID09PSAyKSB7XG4gICAgdG1wID0gKHVpbnQ4W2xlbiAtIDJdIDw8IDgpICsgdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAxMF0gK1xuICAgICAgbG9va3VwWyh0bXAgPj4gNCkgJiAweDNGXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCAyKSAmIDB4M0ZdICtcbiAgICAgICc9J1xuICAgIClcbiAgfVxuXG4gIHJldHVybiBwYXJ0cy5qb2luKCcnKVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/base64-js/index.js\n");

/***/ }),

/***/ "./node_modules/big-integer/BigInteger.js":
/*!************************************************!*\
  !*** ./node_modules/big-integer/BigInteger.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        LOG_MAX_INT = Math.log(MAX_INT);\r\n\r\n    function Integer(v, radix) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 ? parseValue(v) : parseBase(v, radix);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        var value = n.value;\r\n        if (value === 0) return false;\r\n        if (value === 1) return true;\r\n        if (value === 2) return this.isEven();\r\n        return this.mod(n).equals(Integer[0]);\r\n    };\r\n    SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(25)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    BigInteger.prototype.isPrime = function () {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs(),\r\n            nPrev = n.prev();\r\n        var a = [2, 3, 5, 7, 11, 13, 17, 19],\r\n            b = nPrev,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2);\r\n        for (i = 0; i < a.length; i++) {\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.equals(Integer[1]) || x.equals(nPrev)) continue;\r\n            for (t = true, d = b; t && d.lesser(nPrev); d = d.multiply(2)) {\r\n                x = x.square().mod(n);\r\n                if (x.equals(nPrev)) t = false;\r\n            }\r\n            if (t) return false;\r\n        }\r\n        return true;\r\n    };\r\n    SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        // use the Fermat primality test\r\n        for (var i = 0; i < t; i++) {\r\n            var a = bigInt.randBetween(2, n.minus(2));\r\n            if (!a.modPow(n.prev(), n).isUnit()) return false; // definitely composite\r\n        }\r\n        return true; // large chance of being prime\r\n    };\r\n    SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.equals(bigInt.zero)) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.equals(1)) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return ((typeof n === \"number\" || typeof n === \"string\") && +Math.abs(n) <= BASE) ||\r\n            (n instanceof BigInteger && n.value.length <= 1);\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (n) {\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (n) {\r\n        var remQuo;\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value, x = typeof v === \"number\" ? v | LOBMASK_I : v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = Math.min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\r\n        var length = range.value.length - 1;\r\n        var result = [], restricted = true;\r\n        for (var i = length; i >= 0; i--) {\r\n            var top = restricted ? range.value[i] : BASE;\r\n            var digit = truncate(Math.random() * top);\r\n            result.unshift(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        result = arrayToSmall(result);\r\n        return low.add(typeof result === \"number\" ? new SmallInteger(result) : new BigInteger(result, false));\r\n    }\r\n    var parseBase = function (text, base) {\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        for (var i = 0; i < length; i++) {\r\n            var c = text[i].toLowerCase();\r\n            if (c === \"-\") continue;\r\n            if (/[a-z0-9]/.test(c)) {\r\n                if (/[0-9]/.test(c) && +c >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                } else if (c.charCodeAt(0) - 87 >= absBase) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        if (2 <= base && base <= 36) {\r\n            if (length <= LOG_MAX_INT / Math.log(base)) {\r\n                var result = parseInt(text, base);\r\n                if (isNaN(result)) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n                return new SmallInteger(parseInt(text, base));\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i].toLowerCase(),\r\n                charCode = c.charCodeAt(0);\r\n            if (48 <= charCode && charCode <= 57) digits.push(parseValue(c));\r\n            else if (97 <= charCode && charCode <= 122) digits.push(parseValue(c.charCodeAt(0) - 87));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\");\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit) {\r\n        if (digit <= 35) {\r\n            return \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit);\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(+n - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.equals(1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(+n))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(stringify).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix);\r\n        return String(this.value);\r\n    };\r\n    BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = new SmallInteger(i);\r\n        if (i > 0) Integer[-i] = new SmallInteger(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (true) {\r\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\r\n        return bigInt;\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n}\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/big-integer/BigInteger.js\n");

/***/ }),

/***/ "./node_modules/binary-search-bounds/search-bounds.js":
/*!************************************************************!*\
  !*** ./node_modules/binary-search-bounds/search-bounds.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction compileSearch(funcName, predicate, reversed, extraArgs, earlyOut) {\n  var code = [\n    \"function \", funcName, \"(a,l,h,\", extraArgs.join(\",\"),  \"){\",\nearlyOut ? \"\" : \"var i=\", (reversed ? \"l-1\" : \"h+1\"),\n\";while(l<=h){\\\nvar m=(l+h)>>>1,x=a[m]\"]\n  if(earlyOut) {\n    if(predicate.indexOf(\"c\") < 0) {\n      code.push(\";if(x===y){return m}else if(x<=y){\")\n    } else {\n      code.push(\";var p=c(x,y);if(p===0){return m}else if(p<=0){\")\n    }\n  } else {\n    code.push(\";if(\", predicate, \"){i=m;\")\n  }\n  if(reversed) {\n    code.push(\"l=m+1}else{h=m-1}\")\n  } else {\n    code.push(\"h=m-1}else{l=m+1}\")\n  }\n  code.push(\"}\")\n  if(earlyOut) {\n    code.push(\"return -1};\")\n  } else {\n    code.push(\"return i};\")\n  }\n  return code.join(\"\")\n}\n\nfunction compileBoundsSearch(predicate, reversed, suffix, earlyOut) {\n  var result = new Function([\n  compileSearch(\"A\", \"x\" + predicate + \"y\", reversed, [\"y\"], earlyOut),\n  compileSearch(\"P\", \"c(x,y)\" + predicate + \"0\", reversed, [\"y\", \"c\"], earlyOut),\n\"function dispatchBsearch\", suffix, \"(a,y,c,l,h){\\\nif(typeof(c)==='function'){\\\nreturn P(a,(l===void 0)?0:l|0,(h===void 0)?a.length-1:h|0,y,c)\\\n}else{\\\nreturn A(a,(c===void 0)?0:c|0,(l===void 0)?a.length-1:l|0,y)\\\n}}\\\nreturn dispatchBsearch\", suffix].join(\"\"))\n  return result()\n}\n\nmodule.exports = {\n  ge: compileBoundsSearch(\">=\", false, \"GE\"),\n  gt: compileBoundsSearch(\">\", false, \"GT\"),\n  lt: compileBoundsSearch(\"<\", true, \"LT\"),\n  le: compileBoundsSearch(\"<=\", true, \"LE\"),\n  eq: compileBoundsSearch(\"-\", true, \"EQ\", true)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmluYXJ5LXNlYXJjaC1ib3VuZHMvc2VhcmNoLWJvdW5kcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9iaW5hcnktc2VhcmNoLWJvdW5kcy9zZWFyY2gtYm91bmRzLmpzP2NjNzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCJcblxuZnVuY3Rpb24gY29tcGlsZVNlYXJjaChmdW5jTmFtZSwgcHJlZGljYXRlLCByZXZlcnNlZCwgZXh0cmFBcmdzLCBlYXJseU91dCkge1xuICB2YXIgY29kZSA9IFtcbiAgICBcImZ1bmN0aW9uIFwiLCBmdW5jTmFtZSwgXCIoYSxsLGgsXCIsIGV4dHJhQXJncy5qb2luKFwiLFwiKSwgIFwiKXtcIixcbmVhcmx5T3V0ID8gXCJcIiA6IFwidmFyIGk9XCIsIChyZXZlcnNlZCA/IFwibC0xXCIgOiBcImgrMVwiKSxcblwiO3doaWxlKGw8PWgpe1xcXG52YXIgbT0obCtoKT4+PjEseD1hW21dXCJdXG4gIGlmKGVhcmx5T3V0KSB7XG4gICAgaWYocHJlZGljYXRlLmluZGV4T2YoXCJjXCIpIDwgMCkge1xuICAgICAgY29kZS5wdXNoKFwiO2lmKHg9PT15KXtyZXR1cm4gbX1lbHNlIGlmKHg8PXkpe1wiKVxuICAgIH0gZWxzZSB7XG4gICAgICBjb2RlLnB1c2goXCI7dmFyIHA9Yyh4LHkpO2lmKHA9PT0wKXtyZXR1cm4gbX1lbHNlIGlmKHA8PTApe1wiKVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBjb2RlLnB1c2goXCI7aWYoXCIsIHByZWRpY2F0ZSwgXCIpe2k9bTtcIilcbiAgfVxuICBpZihyZXZlcnNlZCkge1xuICAgIGNvZGUucHVzaChcImw9bSsxfWVsc2V7aD1tLTF9XCIpXG4gIH0gZWxzZSB7XG4gICAgY29kZS5wdXNoKFwiaD1tLTF9ZWxzZXtsPW0rMX1cIilcbiAgfVxuICBjb2RlLnB1c2goXCJ9XCIpXG4gIGlmKGVhcmx5T3V0KSB7XG4gICAgY29kZS5wdXNoKFwicmV0dXJuIC0xfTtcIilcbiAgfSBlbHNlIHtcbiAgICBjb2RlLnB1c2goXCJyZXR1cm4gaX07XCIpXG4gIH1cbiAgcmV0dXJuIGNvZGUuam9pbihcIlwiKVxufVxuXG5mdW5jdGlvbiBjb21waWxlQm91bmRzU2VhcmNoKHByZWRpY2F0ZSwgcmV2ZXJzZWQsIHN1ZmZpeCwgZWFybHlPdXQpIHtcbiAgdmFyIHJlc3VsdCA9IG5ldyBGdW5jdGlvbihbXG4gIGNvbXBpbGVTZWFyY2goXCJBXCIsIFwieFwiICsgcHJlZGljYXRlICsgXCJ5XCIsIHJldmVyc2VkLCBbXCJ5XCJdLCBlYXJseU91dCksXG4gIGNvbXBpbGVTZWFyY2goXCJQXCIsIFwiYyh4LHkpXCIgKyBwcmVkaWNhdGUgKyBcIjBcIiwgcmV2ZXJzZWQsIFtcInlcIiwgXCJjXCJdLCBlYXJseU91dCksXG5cImZ1bmN0aW9uIGRpc3BhdGNoQnNlYXJjaFwiLCBzdWZmaXgsIFwiKGEseSxjLGwsaCl7XFxcbmlmKHR5cGVvZihjKT09PSdmdW5jdGlvbicpe1xcXG5yZXR1cm4gUChhLChsPT09dm9pZCAwKT8wOmx8MCwoaD09PXZvaWQgMCk/YS5sZW5ndGgtMTpofDAseSxjKVxcXG59ZWxzZXtcXFxucmV0dXJuIEEoYSwoYz09PXZvaWQgMCk/MDpjfDAsKGw9PT12b2lkIDApP2EubGVuZ3RoLTE6bHwwLHkpXFxcbn19XFxcbnJldHVybiBkaXNwYXRjaEJzZWFyY2hcIiwgc3VmZml4XS5qb2luKFwiXCIpKVxuICByZXR1cm4gcmVzdWx0KClcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdlOiBjb21waWxlQm91bmRzU2VhcmNoKFwiPj1cIiwgZmFsc2UsIFwiR0VcIiksXG4gIGd0OiBjb21waWxlQm91bmRzU2VhcmNoKFwiPlwiLCBmYWxzZSwgXCJHVFwiKSxcbiAgbHQ6IGNvbXBpbGVCb3VuZHNTZWFyY2goXCI8XCIsIHRydWUsIFwiTFRcIiksXG4gIGxlOiBjb21waWxlQm91bmRzU2VhcmNoKFwiPD1cIiwgdHJ1ZSwgXCJMRVwiKSxcbiAgZXE6IGNvbXBpbGVCb3VuZHNTZWFyY2goXCItXCIsIHRydWUsIFwiRVFcIiwgdHJ1ZSlcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/binary-search-bounds/search-bounds.js\n");

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/buffer/index.js\n");

/***/ }),

/***/ "./node_modules/builtin-status-codes/browser.js":
/*!******************************************************!*\
  !*** ./node_modules/builtin-status-codes/browser.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYnVpbHRpbi1zdGF0dXMtY29kZXMvYnJvd3Nlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9idWlsdGluLXN0YXR1cy1jb2Rlcy9icm93c2VyLmpzPzhjMDUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gIFwiMTAwXCI6IFwiQ29udGludWVcIixcbiAgXCIxMDFcIjogXCJTd2l0Y2hpbmcgUHJvdG9jb2xzXCIsXG4gIFwiMTAyXCI6IFwiUHJvY2Vzc2luZ1wiLFxuICBcIjIwMFwiOiBcIk9LXCIsXG4gIFwiMjAxXCI6IFwiQ3JlYXRlZFwiLFxuICBcIjIwMlwiOiBcIkFjY2VwdGVkXCIsXG4gIFwiMjAzXCI6IFwiTm9uLUF1dGhvcml0YXRpdmUgSW5mb3JtYXRpb25cIixcbiAgXCIyMDRcIjogXCJObyBDb250ZW50XCIsXG4gIFwiMjA1XCI6IFwiUmVzZXQgQ29udGVudFwiLFxuICBcIjIwNlwiOiBcIlBhcnRpYWwgQ29udGVudFwiLFxuICBcIjIwN1wiOiBcIk11bHRpLVN0YXR1c1wiLFxuICBcIjIwOFwiOiBcIkFscmVhZHkgUmVwb3J0ZWRcIixcbiAgXCIyMjZcIjogXCJJTSBVc2VkXCIsXG4gIFwiMzAwXCI6IFwiTXVsdGlwbGUgQ2hvaWNlc1wiLFxuICBcIjMwMVwiOiBcIk1vdmVkIFBlcm1hbmVudGx5XCIsXG4gIFwiMzAyXCI6IFwiRm91bmRcIixcbiAgXCIzMDNcIjogXCJTZWUgT3RoZXJcIixcbiAgXCIzMDRcIjogXCJOb3QgTW9kaWZpZWRcIixcbiAgXCIzMDVcIjogXCJVc2UgUHJveHlcIixcbiAgXCIzMDdcIjogXCJUZW1wb3JhcnkgUmVkaXJlY3RcIixcbiAgXCIzMDhcIjogXCJQZXJtYW5lbnQgUmVkaXJlY3RcIixcbiAgXCI0MDBcIjogXCJCYWQgUmVxdWVzdFwiLFxuICBcIjQwMVwiOiBcIlVuYXV0aG9yaXplZFwiLFxuICBcIjQwMlwiOiBcIlBheW1lbnQgUmVxdWlyZWRcIixcbiAgXCI0MDNcIjogXCJGb3JiaWRkZW5cIixcbiAgXCI0MDRcIjogXCJOb3QgRm91bmRcIixcbiAgXCI0MDVcIjogXCJNZXRob2QgTm90IEFsbG93ZWRcIixcbiAgXCI0MDZcIjogXCJOb3QgQWNjZXB0YWJsZVwiLFxuICBcIjQwN1wiOiBcIlByb3h5IEF1dGhlbnRpY2F0aW9uIFJlcXVpcmVkXCIsXG4gIFwiNDA4XCI6IFwiUmVxdWVzdCBUaW1lb3V0XCIsXG4gIFwiNDA5XCI6IFwiQ29uZmxpY3RcIixcbiAgXCI0MTBcIjogXCJHb25lXCIsXG4gIFwiNDExXCI6IFwiTGVuZ3RoIFJlcXVpcmVkXCIsXG4gIFwiNDEyXCI6IFwiUHJlY29uZGl0aW9uIEZhaWxlZFwiLFxuICBcIjQxM1wiOiBcIlBheWxvYWQgVG9vIExhcmdlXCIsXG4gIFwiNDE0XCI6IFwiVVJJIFRvbyBMb25nXCIsXG4gIFwiNDE1XCI6IFwiVW5zdXBwb3J0ZWQgTWVkaWEgVHlwZVwiLFxuICBcIjQxNlwiOiBcIlJhbmdlIE5vdCBTYXRpc2ZpYWJsZVwiLFxuICBcIjQxN1wiOiBcIkV4cGVjdGF0aW9uIEZhaWxlZFwiLFxuICBcIjQxOFwiOiBcIkknbSBhIHRlYXBvdFwiLFxuICBcIjQyMVwiOiBcIk1pc2RpcmVjdGVkIFJlcXVlc3RcIixcbiAgXCI0MjJcIjogXCJVbnByb2Nlc3NhYmxlIEVudGl0eVwiLFxuICBcIjQyM1wiOiBcIkxvY2tlZFwiLFxuICBcIjQyNFwiOiBcIkZhaWxlZCBEZXBlbmRlbmN5XCIsXG4gIFwiNDI1XCI6IFwiVW5vcmRlcmVkIENvbGxlY3Rpb25cIixcbiAgXCI0MjZcIjogXCJVcGdyYWRlIFJlcXVpcmVkXCIsXG4gIFwiNDI4XCI6IFwiUHJlY29uZGl0aW9uIFJlcXVpcmVkXCIsXG4gIFwiNDI5XCI6IFwiVG9vIE1hbnkgUmVxdWVzdHNcIixcbiAgXCI0MzFcIjogXCJSZXF1ZXN0IEhlYWRlciBGaWVsZHMgVG9vIExhcmdlXCIsXG4gIFwiNDUxXCI6IFwiVW5hdmFpbGFibGUgRm9yIExlZ2FsIFJlYXNvbnNcIixcbiAgXCI1MDBcIjogXCJJbnRlcm5hbCBTZXJ2ZXIgRXJyb3JcIixcbiAgXCI1MDFcIjogXCJOb3QgSW1wbGVtZW50ZWRcIixcbiAgXCI1MDJcIjogXCJCYWQgR2F0ZXdheVwiLFxuICBcIjUwM1wiOiBcIlNlcnZpY2UgVW5hdmFpbGFibGVcIixcbiAgXCI1MDRcIjogXCJHYXRld2F5IFRpbWVvdXRcIixcbiAgXCI1MDVcIjogXCJIVFRQIFZlcnNpb24gTm90IFN1cHBvcnRlZFwiLFxuICBcIjUwNlwiOiBcIlZhcmlhbnQgQWxzbyBOZWdvdGlhdGVzXCIsXG4gIFwiNTA3XCI6IFwiSW5zdWZmaWNpZW50IFN0b3JhZ2VcIixcbiAgXCI1MDhcIjogXCJMb29wIERldGVjdGVkXCIsXG4gIFwiNTA5XCI6IFwiQmFuZHdpZHRoIExpbWl0IEV4Y2VlZGVkXCIsXG4gIFwiNTEwXCI6IFwiTm90IEV4dGVuZGVkXCIsXG4gIFwiNTExXCI6IFwiTmV0d29yayBBdXRoZW50aWNhdGlvbiBSZXF1aXJlZFwiXG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/builtin-status-codes/browser.js\n");

/***/ }),

/***/ "./node_modules/cipher-base/index.js":
/*!*******************************************!*\
  !*** ./node_modules/cipher-base/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer\nvar Transform = __webpack_require__(/*! stream */ \"./node_modules/stream-browserify/index.js\").Transform\nvar StringDecoder = __webpack_require__(/*! string_decoder */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY2lwaGVyLWJhc2UvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvY2lwaGVyLWJhc2UvaW5kZXguanM/NjQzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXJcbnZhciBUcmFuc2Zvcm0gPSByZXF1aXJlKCdzdHJlYW0nKS5UcmFuc2Zvcm1cbnZhciBTdHJpbmdEZWNvZGVyID0gcmVxdWlyZSgnc3RyaW5nX2RlY29kZXInKS5TdHJpbmdEZWNvZGVyXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG5cbmZ1bmN0aW9uIENpcGhlckJhc2UgKGhhc2hNb2RlKSB7XG4gIFRyYW5zZm9ybS5jYWxsKHRoaXMpXG4gIHRoaXMuaGFzaE1vZGUgPSB0eXBlb2YgaGFzaE1vZGUgPT09ICdzdHJpbmcnXG4gIGlmICh0aGlzLmhhc2hNb2RlKSB7XG4gICAgdGhpc1toYXNoTW9kZV0gPSB0aGlzLl9maW5hbE9yRGlnZXN0XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5maW5hbCA9IHRoaXMuX2ZpbmFsT3JEaWdlc3RcbiAgfVxuICBpZiAodGhpcy5fZmluYWwpIHtcbiAgICB0aGlzLl9fZmluYWwgPSB0aGlzLl9maW5hbFxuICAgIHRoaXMuX2ZpbmFsID0gbnVsbFxuICB9XG4gIHRoaXMuX2RlY29kZXIgPSBudWxsXG4gIHRoaXMuX2VuY29kaW5nID0gbnVsbFxufVxuaW5oZXJpdHMoQ2lwaGVyQmFzZSwgVHJhbnNmb3JtKVxuXG5DaXBoZXJCYXNlLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoZGF0YSwgaW5wdXRFbmMsIG91dHB1dEVuYykge1xuICBpZiAodHlwZW9mIGRhdGEgPT09ICdzdHJpbmcnKSB7XG4gICAgZGF0YSA9IEJ1ZmZlci5mcm9tKGRhdGEsIGlucHV0RW5jKVxuICB9XG5cbiAgdmFyIG91dERhdGEgPSB0aGlzLl91cGRhdGUoZGF0YSlcbiAgaWYgKHRoaXMuaGFzaE1vZGUpIHJldHVybiB0aGlzXG5cbiAgaWYgKG91dHB1dEVuYykge1xuICAgIG91dERhdGEgPSB0aGlzLl90b1N0cmluZyhvdXREYXRhLCBvdXRwdXRFbmMpXG4gIH1cblxuICByZXR1cm4gb3V0RGF0YVxufVxuXG5DaXBoZXJCYXNlLnByb3RvdHlwZS5zZXRBdXRvUGFkZGluZyA9IGZ1bmN0aW9uICgpIHt9XG5DaXBoZXJCYXNlLnByb3RvdHlwZS5nZXRBdXRoVGFnID0gZnVuY3Rpb24gKCkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ3RyeWluZyB0byBnZXQgYXV0aCB0YWcgaW4gdW5zdXBwb3J0ZWQgc3RhdGUnKVxufVxuXG5DaXBoZXJCYXNlLnByb3RvdHlwZS5zZXRBdXRoVGFnID0gZnVuY3Rpb24gKCkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ3RyeWluZyB0byBzZXQgYXV0aCB0YWcgaW4gdW5zdXBwb3J0ZWQgc3RhdGUnKVxufVxuXG5DaXBoZXJCYXNlLnByb3RvdHlwZS5zZXRBQUQgPSBmdW5jdGlvbiAoKSB7XG4gIHRocm93IG5ldyBFcnJvcigndHJ5aW5nIHRvIHNldCBhYWQgaW4gdW5zdXBwb3J0ZWQgc3RhdGUnKVxufVxuXG5DaXBoZXJCYXNlLnByb3RvdHlwZS5fdHJhbnNmb3JtID0gZnVuY3Rpb24gKGRhdGEsIF8sIG5leHQpIHtcbiAgdmFyIGVyclxuICB0cnkge1xuICAgIGlmICh0aGlzLmhhc2hNb2RlKSB7XG4gICAgICB0aGlzLl91cGRhdGUoZGF0YSlcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5wdXNoKHRoaXMuX3VwZGF0ZShkYXRhKSlcbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBlcnIgPSBlXG4gIH0gZmluYWxseSB7XG4gICAgbmV4dChlcnIpXG4gIH1cbn1cbkNpcGhlckJhc2UucHJvdG90eXBlLl9mbHVzaCA9IGZ1bmN0aW9uIChkb25lKSB7XG4gIHZhciBlcnJcbiAgdHJ5IHtcbiAgICB0aGlzLnB1c2godGhpcy5fX2ZpbmFsKCkpXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBlcnIgPSBlXG4gIH1cblxuICBkb25lKGVycilcbn1cbkNpcGhlckJhc2UucHJvdG90eXBlLl9maW5hbE9yRGlnZXN0ID0gZnVuY3Rpb24gKG91dHB1dEVuYykge1xuICB2YXIgb3V0RGF0YSA9IHRoaXMuX19maW5hbCgpIHx8IEJ1ZmZlci5hbGxvYygwKVxuICBpZiAob3V0cHV0RW5jKSB7XG4gICAgb3V0RGF0YSA9IHRoaXMuX3RvU3RyaW5nKG91dERhdGEsIG91dHB1dEVuYywgdHJ1ZSlcbiAgfVxuICByZXR1cm4gb3V0RGF0YVxufVxuXG5DaXBoZXJCYXNlLnByb3RvdHlwZS5fdG9TdHJpbmcgPSBmdW5jdGlvbiAodmFsdWUsIGVuYywgZmluKSB7XG4gIGlmICghdGhpcy5fZGVjb2Rlcikge1xuICAgIHRoaXMuX2RlY29kZXIgPSBuZXcgU3RyaW5nRGVjb2RlcihlbmMpXG4gICAgdGhpcy5fZW5jb2RpbmcgPSBlbmNcbiAgfVxuXG4gIGlmICh0aGlzLl9lbmNvZGluZyAhPT0gZW5jKSB0aHJvdyBuZXcgRXJyb3IoJ2NhblxcJ3Qgc3dpdGNoIGVuY29kaW5ncycpXG5cbiAgdmFyIG91dCA9IHRoaXMuX2RlY29kZXIud3JpdGUodmFsdWUpXG4gIGlmIChmaW4pIHtcbiAgICBvdXQgKz0gdGhpcy5fZGVjb2Rlci5lbmQoKVxuICB9XG5cbiAgcmV0dXJuIG91dFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENpcGhlckJhc2VcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/cipher-base/index.js\n");

/***/ }),

/***/ "./node_modules/core-util-is/lib/util.js":
/*!***********************************************!*\
  !*** ./node_modules/core-util-is/lib/util.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29yZS11dGlsLWlzL2xpYi91dGlsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtdXRpbC1pcy9saWIvdXRpbC5qcz8zYTdjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4vLyBOT1RFOiBUaGVzZSB0eXBlIGNoZWNraW5nIGZ1bmN0aW9ucyBpbnRlbnRpb25hbGx5IGRvbid0IHVzZSBgaW5zdGFuY2VvZmBcbi8vIGJlY2F1c2UgaXQgaXMgZnJhZ2lsZSBhbmQgY2FuIGJlIGVhc2lseSBmYWtlZCB3aXRoIGBPYmplY3QuY3JlYXRlKClgLlxuXG5mdW5jdGlvbiBpc0FycmF5KGFyZykge1xuICBpZiAoQXJyYXkuaXNBcnJheSkge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGFyZyk7XG4gIH1cbiAgcmV0dXJuIG9iamVjdFRvU3RyaW5nKGFyZykgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59XG5leHBvcnRzLmlzQXJyYXkgPSBpc0FycmF5O1xuXG5mdW5jdGlvbiBpc0Jvb2xlYW4oYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnYm9vbGVhbic7XG59XG5leHBvcnRzLmlzQm9vbGVhbiA9IGlzQm9vbGVhbjtcblxuZnVuY3Rpb24gaXNOdWxsKGFyZykge1xuICByZXR1cm4gYXJnID09PSBudWxsO1xufVxuZXhwb3J0cy5pc051bGwgPSBpc051bGw7XG5cbmZ1bmN0aW9uIGlzTnVsbE9yVW5kZWZpbmVkKGFyZykge1xuICByZXR1cm4gYXJnID09IG51bGw7XG59XG5leHBvcnRzLmlzTnVsbE9yVW5kZWZpbmVkID0gaXNOdWxsT3JVbmRlZmluZWQ7XG5cbmZ1bmN0aW9uIGlzTnVtYmVyKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ251bWJlcic7XG59XG5leHBvcnRzLmlzTnVtYmVyID0gaXNOdW1iZXI7XG5cbmZ1bmN0aW9uIGlzU3RyaW5nKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ3N0cmluZyc7XG59XG5leHBvcnRzLmlzU3RyaW5nID0gaXNTdHJpbmc7XG5cbmZ1bmN0aW9uIGlzU3ltYm9sKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ3N5bWJvbCc7XG59XG5leHBvcnRzLmlzU3ltYm9sID0gaXNTeW1ib2w7XG5cbmZ1bmN0aW9uIGlzVW5kZWZpbmVkKGFyZykge1xuICByZXR1cm4gYXJnID09PSB2b2lkIDA7XG59XG5leHBvcnRzLmlzVW5kZWZpbmVkID0gaXNVbmRlZmluZWQ7XG5cbmZ1bmN0aW9uIGlzUmVnRXhwKHJlKSB7XG4gIHJldHVybiBvYmplY3RUb1N0cmluZyhyZSkgPT09ICdbb2JqZWN0IFJlZ0V4cF0nO1xufVxuZXhwb3J0cy5pc1JlZ0V4cCA9IGlzUmVnRXhwO1xuXG5mdW5jdGlvbiBpc09iamVjdChhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdvYmplY3QnICYmIGFyZyAhPT0gbnVsbDtcbn1cbmV4cG9ydHMuaXNPYmplY3QgPSBpc09iamVjdDtcblxuZnVuY3Rpb24gaXNEYXRlKGQpIHtcbiAgcmV0dXJuIG9iamVjdFRvU3RyaW5nKGQpID09PSAnW29iamVjdCBEYXRlXSc7XG59XG5leHBvcnRzLmlzRGF0ZSA9IGlzRGF0ZTtcblxuZnVuY3Rpb24gaXNFcnJvcihlKSB7XG4gIHJldHVybiAob2JqZWN0VG9TdHJpbmcoZSkgPT09ICdbb2JqZWN0IEVycm9yXScgfHwgZSBpbnN0YW5jZW9mIEVycm9yKTtcbn1cbmV4cG9ydHMuaXNFcnJvciA9IGlzRXJyb3I7XG5cbmZ1bmN0aW9uIGlzRnVuY3Rpb24oYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnZnVuY3Rpb24nO1xufVxuZXhwb3J0cy5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjtcblxuZnVuY3Rpb24gaXNQcmltaXRpdmUoYXJnKSB7XG4gIHJldHVybiBhcmcgPT09IG51bGwgfHxcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdib29sZWFuJyB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ251bWJlcicgfHxcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnIHx8XG4gICAgICAgICB0eXBlb2YgYXJnID09PSAnc3ltYm9sJyB8fCAgLy8gRVM2IHN5bWJvbFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ3VuZGVmaW5lZCc7XG59XG5leHBvcnRzLmlzUHJpbWl0aXZlID0gaXNQcmltaXRpdmU7XG5cbmV4cG9ydHMuaXNCdWZmZXIgPSBCdWZmZXIuaXNCdWZmZXI7XG5cbmZ1bmN0aW9uIG9iamVjdFRvU3RyaW5nKG8pIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/core-util-is/lib/util.js\n");

/***/ }),

/***/ "./node_modules/create-hash/md5.js":
/*!*****************************************!*\
  !*** ./node_modules/create-hash/md5.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var MD5 = __webpack_require__(/*! md5.js */ \"./node_modules/md5.js/index.js\")\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest()\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3JlYXRlLWhhc2gvbWQ1LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL2NyZWF0ZS1oYXNoL21kNS5qcz81YTc2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBNRDUgPSByZXF1aXJlKCdtZDUuanMnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChidWZmZXIpIHtcbiAgcmV0dXJuIG5ldyBNRDUoKS51cGRhdGUoYnVmZmVyKS5kaWdlc3QoKVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/create-hash/md5.js\n");

/***/ }),

/***/ "./node_modules/create-hmac/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-hmac/browser.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar Legacy = __webpack_require__(/*! ./legacy */ \"./node_modules/create-hmac/legacy.js\")\nvar Base = __webpack_require__(/*! cipher-base */ \"./node_modules/cipher-base/index.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer\nvar md5 = __webpack_require__(/*! create-hash/md5 */ \"./node_modules/create-hash/md5.js\")\nvar RIPEMD160 = __webpack_require__(/*! ripemd160 */ \"./node_modules/ripemd160/index.js\")\n\nvar sha = __webpack_require__(/*! sha.js */ \"./node_modules/sha.js/index.js\")\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3JlYXRlLWhtYWMvYnJvd3Nlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9jcmVhdGUtaG1hYy9icm93c2VyLmpzPzFhMmEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG52YXIgTGVnYWN5ID0gcmVxdWlyZSgnLi9sZWdhY3knKVxudmFyIEJhc2UgPSByZXF1aXJlKCdjaXBoZXItYmFzZScpXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXJcbnZhciBtZDUgPSByZXF1aXJlKCdjcmVhdGUtaGFzaC9tZDUnKVxudmFyIFJJUEVNRDE2MCA9IHJlcXVpcmUoJ3JpcGVtZDE2MCcpXG5cbnZhciBzaGEgPSByZXF1aXJlKCdzaGEuanMnKVxuXG52YXIgWkVST1MgPSBCdWZmZXIuYWxsb2MoMTI4KVxuXG5mdW5jdGlvbiBIbWFjIChhbGcsIGtleSkge1xuICBCYXNlLmNhbGwodGhpcywgJ2RpZ2VzdCcpXG4gIGlmICh0eXBlb2Yga2V5ID09PSAnc3RyaW5nJykge1xuICAgIGtleSA9IEJ1ZmZlci5mcm9tKGtleSlcbiAgfVxuXG4gIHZhciBibG9ja3NpemUgPSAoYWxnID09PSAnc2hhNTEyJyB8fCBhbGcgPT09ICdzaGEzODQnKSA/IDEyOCA6IDY0XG5cbiAgdGhpcy5fYWxnID0gYWxnXG4gIHRoaXMuX2tleSA9IGtleVxuICBpZiAoa2V5Lmxlbmd0aCA+IGJsb2Nrc2l6ZSkge1xuICAgIHZhciBoYXNoID0gYWxnID09PSAncm1kMTYwJyA/IG5ldyBSSVBFTUQxNjAoKSA6IHNoYShhbGcpXG4gICAga2V5ID0gaGFzaC51cGRhdGUoa2V5KS5kaWdlc3QoKVxuICB9IGVsc2UgaWYgKGtleS5sZW5ndGggPCBibG9ja3NpemUpIHtcbiAgICBrZXkgPSBCdWZmZXIuY29uY2F0KFtrZXksIFpFUk9TXSwgYmxvY2tzaXplKVxuICB9XG5cbiAgdmFyIGlwYWQgPSB0aGlzLl9pcGFkID0gQnVmZmVyLmFsbG9jVW5zYWZlKGJsb2Nrc2l6ZSlcbiAgdmFyIG9wYWQgPSB0aGlzLl9vcGFkID0gQnVmZmVyLmFsbG9jVW5zYWZlKGJsb2Nrc2l6ZSlcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGJsb2Nrc2l6ZTsgaSsrKSB7XG4gICAgaXBhZFtpXSA9IGtleVtpXSBeIDB4MzZcbiAgICBvcGFkW2ldID0ga2V5W2ldIF4gMHg1Q1xuICB9XG4gIHRoaXMuX2hhc2ggPSBhbGcgPT09ICdybWQxNjAnID8gbmV3IFJJUEVNRDE2MCgpIDogc2hhKGFsZylcbiAgdGhpcy5faGFzaC51cGRhdGUoaXBhZClcbn1cblxuaW5oZXJpdHMoSG1hYywgQmFzZSlcblxuSG1hYy5wcm90b3R5cGUuX3VwZGF0ZSA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gIHRoaXMuX2hhc2gudXBkYXRlKGRhdGEpXG59XG5cbkhtYWMucHJvdG90eXBlLl9maW5hbCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGggPSB0aGlzLl9oYXNoLmRpZ2VzdCgpXG4gIHZhciBoYXNoID0gdGhpcy5fYWxnID09PSAncm1kMTYwJyA/IG5ldyBSSVBFTUQxNjAoKSA6IHNoYSh0aGlzLl9hbGcpXG4gIHJldHVybiBoYXNoLnVwZGF0ZSh0aGlzLl9vcGFkKS51cGRhdGUoaCkuZGlnZXN0KClcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVIbWFjIChhbGcsIGtleSkge1xuICBhbGcgPSBhbGcudG9Mb3dlckNhc2UoKVxuICBpZiAoYWxnID09PSAncm1kMTYwJyB8fCBhbGcgPT09ICdyaXBlbWQxNjAnKSB7XG4gICAgcmV0dXJuIG5ldyBIbWFjKCdybWQxNjAnLCBrZXkpXG4gIH1cbiAgaWYgKGFsZyA9PT0gJ21kNScpIHtcbiAgICByZXR1cm4gbmV3IExlZ2FjeShtZDUsIGtleSlcbiAgfVxuICByZXR1cm4gbmV3IEhtYWMoYWxnLCBrZXkpXG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/create-hmac/browser.js\n");

/***/ }),

/***/ "./node_modules/create-hmac/legacy.js":
/*!********************************************!*\
  !*** ./node_modules/create-hmac/legacy.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer\n\nvar Base = __webpack_require__(/*! cipher-base */ \"./node_modules/cipher-base/index.js\")\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3JlYXRlLWhtYWMvbGVnYWN5LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL2NyZWF0ZS1obWFjL2xlZ2FjeS5qcz9kNDI0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxudmFyIEJ1ZmZlciA9IHJlcXVpcmUoJ3NhZmUtYnVmZmVyJykuQnVmZmVyXG5cbnZhciBCYXNlID0gcmVxdWlyZSgnY2lwaGVyLWJhc2UnKVxuXG52YXIgWkVST1MgPSBCdWZmZXIuYWxsb2MoMTI4KVxudmFyIGJsb2Nrc2l6ZSA9IDY0XG5cbmZ1bmN0aW9uIEhtYWMgKGFsZywga2V5KSB7XG4gIEJhc2UuY2FsbCh0aGlzLCAnZGlnZXN0JylcbiAgaWYgKHR5cGVvZiBrZXkgPT09ICdzdHJpbmcnKSB7XG4gICAga2V5ID0gQnVmZmVyLmZyb20oa2V5KVxuICB9XG5cbiAgdGhpcy5fYWxnID0gYWxnXG4gIHRoaXMuX2tleSA9IGtleVxuXG4gIGlmIChrZXkubGVuZ3RoID4gYmxvY2tzaXplKSB7XG4gICAga2V5ID0gYWxnKGtleSlcbiAgfSBlbHNlIGlmIChrZXkubGVuZ3RoIDwgYmxvY2tzaXplKSB7XG4gICAga2V5ID0gQnVmZmVyLmNvbmNhdChba2V5LCBaRVJPU10sIGJsb2Nrc2l6ZSlcbiAgfVxuXG4gIHZhciBpcGFkID0gdGhpcy5faXBhZCA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShibG9ja3NpemUpXG4gIHZhciBvcGFkID0gdGhpcy5fb3BhZCA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShibG9ja3NpemUpXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBibG9ja3NpemU7IGkrKykge1xuICAgIGlwYWRbaV0gPSBrZXlbaV0gXiAweDM2XG4gICAgb3BhZFtpXSA9IGtleVtpXSBeIDB4NUNcbiAgfVxuXG4gIHRoaXMuX2hhc2ggPSBbaXBhZF1cbn1cblxuaW5oZXJpdHMoSG1hYywgQmFzZSlcblxuSG1hYy5wcm90b3R5cGUuX3VwZGF0ZSA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gIHRoaXMuX2hhc2gucHVzaChkYXRhKVxufVxuXG5IbWFjLnByb3RvdHlwZS5fZmluYWwgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBoID0gdGhpcy5fYWxnKEJ1ZmZlci5jb25jYXQodGhpcy5faGFzaCkpXG4gIHJldHVybiB0aGlzLl9hbGcoQnVmZmVyLmNvbmNhdChbdGhpcy5fb3BhZCwgaF0pKVxufVxubW9kdWxlLmV4cG9ydHMgPSBIbWFjXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/create-hmac/legacy.js\n");

/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/events/events.js\n");

/***/ }),

/***/ "./node_modules/hash-base/index.js":
/*!*****************************************!*\
  !*** ./node_modules/hash-base/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer\nvar Transform = __webpack_require__(/*! stream */ \"./node_modules/stream-browserify/index.js\").Transform\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGFzaC1iYXNlL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL2hhc2gtYmFzZS9pbmRleC5qcz85M2U2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xudmFyIEJ1ZmZlciA9IHJlcXVpcmUoJ3NhZmUtYnVmZmVyJykuQnVmZmVyXG52YXIgVHJhbnNmb3JtID0gcmVxdWlyZSgnc3RyZWFtJykuVHJhbnNmb3JtXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG5cbmZ1bmN0aW9uIHRocm93SWZOb3RTdHJpbmdPckJ1ZmZlciAodmFsLCBwcmVmaXgpIHtcbiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIodmFsKSAmJiB0eXBlb2YgdmFsICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IocHJlZml4ICsgJyBtdXN0IGJlIGEgc3RyaW5nIG9yIGEgYnVmZmVyJylcbiAgfVxufVxuXG5mdW5jdGlvbiBIYXNoQmFzZSAoYmxvY2tTaXplKSB7XG4gIFRyYW5zZm9ybS5jYWxsKHRoaXMpXG5cbiAgdGhpcy5fYmxvY2sgPSBCdWZmZXIuYWxsb2NVbnNhZmUoYmxvY2tTaXplKVxuICB0aGlzLl9ibG9ja1NpemUgPSBibG9ja1NpemVcbiAgdGhpcy5fYmxvY2tPZmZzZXQgPSAwXG4gIHRoaXMuX2xlbmd0aCA9IFswLCAwLCAwLCAwXVxuXG4gIHRoaXMuX2ZpbmFsaXplZCA9IGZhbHNlXG59XG5cbmluaGVyaXRzKEhhc2hCYXNlLCBUcmFuc2Zvcm0pXG5cbkhhc2hCYXNlLnByb3RvdHlwZS5fdHJhbnNmb3JtID0gZnVuY3Rpb24gKGNodW5rLCBlbmNvZGluZywgY2FsbGJhY2spIHtcbiAgdmFyIGVycm9yID0gbnVsbFxuICB0cnkge1xuICAgIHRoaXMudXBkYXRlKGNodW5rLCBlbmNvZGluZylcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgZXJyb3IgPSBlcnJcbiAgfVxuXG4gIGNhbGxiYWNrKGVycm9yKVxufVxuXG5IYXNoQmFzZS5wcm90b3R5cGUuX2ZsdXNoID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gIHZhciBlcnJvciA9IG51bGxcbiAgdHJ5IHtcbiAgICB0aGlzLnB1c2godGhpcy5kaWdlc3QoKSlcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgZXJyb3IgPSBlcnJcbiAgfVxuXG4gIGNhbGxiYWNrKGVycm9yKVxufVxuXG5IYXNoQmFzZS5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gKGRhdGEsIGVuY29kaW5nKSB7XG4gIHRocm93SWZOb3RTdHJpbmdPckJ1ZmZlcihkYXRhLCAnRGF0YScpXG4gIGlmICh0aGlzLl9maW5hbGl6ZWQpIHRocm93IG5ldyBFcnJvcignRGlnZXN0IGFscmVhZHkgY2FsbGVkJylcbiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIoZGF0YSkpIGRhdGEgPSBCdWZmZXIuZnJvbShkYXRhLCBlbmNvZGluZylcblxuICAvLyBjb25zdW1lIGRhdGFcbiAgdmFyIGJsb2NrID0gdGhpcy5fYmxvY2tcbiAgdmFyIG9mZnNldCA9IDBcbiAgd2hpbGUgKHRoaXMuX2Jsb2NrT2Zmc2V0ICsgZGF0YS5sZW5ndGggLSBvZmZzZXQgPj0gdGhpcy5fYmxvY2tTaXplKSB7XG4gICAgZm9yICh2YXIgaSA9IHRoaXMuX2Jsb2NrT2Zmc2V0OyBpIDwgdGhpcy5fYmxvY2tTaXplOykgYmxvY2tbaSsrXSA9IGRhdGFbb2Zmc2V0KytdXG4gICAgdGhpcy5fdXBkYXRlKClcbiAgICB0aGlzLl9ibG9ja09mZnNldCA9IDBcbiAgfVxuICB3aGlsZSAob2Zmc2V0IDwgZGF0YS5sZW5ndGgpIGJsb2NrW3RoaXMuX2Jsb2NrT2Zmc2V0KytdID0gZGF0YVtvZmZzZXQrK11cblxuICAvLyB1cGRhdGUgbGVuZ3RoXG4gIGZvciAodmFyIGogPSAwLCBjYXJyeSA9IGRhdGEubGVuZ3RoICogODsgY2FycnkgPiAwOyArK2opIHtcbiAgICB0aGlzLl9sZW5ndGhbal0gKz0gY2FycnlcbiAgICBjYXJyeSA9ICh0aGlzLl9sZW5ndGhbal0gLyAweDAxMDAwMDAwMDApIHwgMFxuICAgIGlmIChjYXJyeSA+IDApIHRoaXMuX2xlbmd0aFtqXSAtPSAweDAxMDAwMDAwMDAgKiBjYXJyeVxuICB9XG5cbiAgcmV0dXJuIHRoaXNcbn1cblxuSGFzaEJhc2UucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiAoKSB7XG4gIHRocm93IG5ldyBFcnJvcignX3VwZGF0ZSBpcyBub3QgaW1wbGVtZW50ZWQnKVxufVxuXG5IYXNoQmFzZS5wcm90b3R5cGUuZGlnZXN0ID0gZnVuY3Rpb24gKGVuY29kaW5nKSB7XG4gIGlmICh0aGlzLl9maW5hbGl6ZWQpIHRocm93IG5ldyBFcnJvcignRGlnZXN0IGFscmVhZHkgY2FsbGVkJylcbiAgdGhpcy5fZmluYWxpemVkID0gdHJ1ZVxuXG4gIHZhciBkaWdlc3QgPSB0aGlzLl9kaWdlc3QoKVxuICBpZiAoZW5jb2RpbmcgIT09IHVuZGVmaW5lZCkgZGlnZXN0ID0gZGlnZXN0LnRvU3RyaW5nKGVuY29kaW5nKVxuXG4gIC8vIHJlc2V0IHN0YXRlXG4gIHRoaXMuX2Jsb2NrLmZpbGwoMClcbiAgdGhpcy5fYmxvY2tPZmZzZXQgPSAwXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgNDsgKytpKSB0aGlzLl9sZW5ndGhbaV0gPSAwXG5cbiAgcmV0dXJuIGRpZ2VzdFxufVxuXG5IYXNoQmFzZS5wcm90b3R5cGUuX2RpZ2VzdCA9IGZ1bmN0aW9uICgpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdfZGlnZXN0IGlzIG5vdCBpbXBsZW1lbnRlZCcpXG59XG5cbm1vZHVsZS5leHBvcnRzID0gSGFzaEJhc2VcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/hash-base/index.js\n");

/***/ }),

/***/ "./node_modules/https-browserify/index.js":
/*!************************************************!*\
  !*** ./node_modules/https-browserify/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var http = __webpack_require__(/*! http */ \"./node_modules/stream-http/index.js\")\nvar url = __webpack_require__(/*! url */ \"./node_modules/url/url.js\")\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHR0cHMtYnJvd3NlcmlmeS9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9odHRwcy1icm93c2VyaWZ5L2luZGV4LmpzPzI0ZjgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGh0dHAgPSByZXF1aXJlKCdodHRwJylcbnZhciB1cmwgPSByZXF1aXJlKCd1cmwnKVxuXG52YXIgaHR0cHMgPSBtb2R1bGUuZXhwb3J0c1xuXG5mb3IgKHZhciBrZXkgaW4gaHR0cCkge1xuICBpZiAoaHR0cC5oYXNPd25Qcm9wZXJ0eShrZXkpKSBodHRwc1trZXldID0gaHR0cFtrZXldXG59XG5cbmh0dHBzLnJlcXVlc3QgPSBmdW5jdGlvbiAocGFyYW1zLCBjYikge1xuICBwYXJhbXMgPSB2YWxpZGF0ZVBhcmFtcyhwYXJhbXMpXG4gIHJldHVybiBodHRwLnJlcXVlc3QuY2FsbCh0aGlzLCBwYXJhbXMsIGNiKVxufVxuXG5odHRwcy5nZXQgPSBmdW5jdGlvbiAocGFyYW1zLCBjYikge1xuICBwYXJhbXMgPSB2YWxpZGF0ZVBhcmFtcyhwYXJhbXMpXG4gIHJldHVybiBodHRwLmdldC5jYWxsKHRoaXMsIHBhcmFtcywgY2IpXG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlUGFyYW1zIChwYXJhbXMpIHtcbiAgaWYgKHR5cGVvZiBwYXJhbXMgPT09ICdzdHJpbmcnKSB7XG4gICAgcGFyYW1zID0gdXJsLnBhcnNlKHBhcmFtcylcbiAgfVxuICBpZiAoIXBhcmFtcy5wcm90b2NvbCkge1xuICAgIHBhcmFtcy5wcm90b2NvbCA9ICdodHRwczonXG4gIH1cbiAgaWYgKHBhcmFtcy5wcm90b2NvbCAhPT0gJ2h0dHBzOicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1Byb3RvY29sIFwiJyArIHBhcmFtcy5wcm90b2NvbCArICdcIiBub3Qgc3VwcG9ydGVkLiBFeHBlY3RlZCBcImh0dHBzOlwiJylcbiAgfVxuICByZXR1cm4gcGFyYW1zXG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/https-browserify/index.js\n");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9pZWVlNzU0L2luZGV4LmpzPzkxNTIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5yZWFkID0gZnVuY3Rpb24gKGJ1ZmZlciwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG1cbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIG5CaXRzID0gLTdcbiAgdmFyIGkgPSBpc0xFID8gKG5CeXRlcyAtIDEpIDogMFxuICB2YXIgZCA9IGlzTEUgPyAtMSA6IDFcbiAgdmFyIHMgPSBidWZmZXJbb2Zmc2V0ICsgaV1cblxuICBpICs9IGRcblxuICBlID0gcyAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBzID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBlTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IGUgPSAoZSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBtID0gZSAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBlID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBtTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IG0gPSAobSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBpZiAoZSA9PT0gMCkge1xuICAgIGUgPSAxIC0gZUJpYXNcbiAgfSBlbHNlIGlmIChlID09PSBlTWF4KSB7XG4gICAgcmV0dXJuIG0gPyBOYU4gOiAoKHMgPyAtMSA6IDEpICogSW5maW5pdHkpXG4gIH0gZWxzZSB7XG4gICAgbSA9IG0gKyBNYXRoLnBvdygyLCBtTGVuKVxuICAgIGUgPSBlIC0gZUJpYXNcbiAgfVxuICByZXR1cm4gKHMgPyAtMSA6IDEpICogbSAqIE1hdGgucG93KDIsIGUgLSBtTGVuKVxufVxuXG5leHBvcnRzLndyaXRlID0gZnVuY3Rpb24gKGJ1ZmZlciwgdmFsdWUsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlLCBtLCBjXG4gIHZhciBlTGVuID0gKG5CeXRlcyAqIDgpIC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBydCA9IChtTGVuID09PSAyMyA/IE1hdGgucG93KDIsIC0yNCkgLSBNYXRoLnBvdygyLCAtNzcpIDogMClcbiAgdmFyIGkgPSBpc0xFID8gMCA6IChuQnl0ZXMgLSAxKVxuICB2YXIgZCA9IGlzTEUgPyAxIDogLTFcbiAgdmFyIHMgPSB2YWx1ZSA8IDAgfHwgKHZhbHVlID09PSAwICYmIDEgLyB2YWx1ZSA8IDApID8gMSA6IDBcblxuICB2YWx1ZSA9IE1hdGguYWJzKHZhbHVlKVxuXG4gIGlmIChpc05hTih2YWx1ZSkgfHwgdmFsdWUgPT09IEluZmluaXR5KSB7XG4gICAgbSA9IGlzTmFOKHZhbHVlKSA/IDEgOiAwXG4gICAgZSA9IGVNYXhcbiAgfSBlbHNlIHtcbiAgICBlID0gTWF0aC5mbG9vcihNYXRoLmxvZyh2YWx1ZSkgLyBNYXRoLkxOMilcbiAgICBpZiAodmFsdWUgKiAoYyA9IE1hdGgucG93KDIsIC1lKSkgPCAxKSB7XG4gICAgICBlLS1cbiAgICAgIGMgKj0gMlxuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIHZhbHVlICs9IHJ0IC8gY1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSArPSBydCAqIE1hdGgucG93KDIsIDEgLSBlQmlhcylcbiAgICB9XG4gICAgaWYgKHZhbHVlICogYyA+PSAyKSB7XG4gICAgICBlKytcbiAgICAgIGMgLz0gMlxuICAgIH1cblxuICAgIGlmIChlICsgZUJpYXMgPj0gZU1heCkge1xuICAgICAgbSA9IDBcbiAgICAgIGUgPSBlTWF4XG4gICAgfSBlbHNlIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgbSA9ICgodmFsdWUgKiBjKSAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSBlICsgZUJpYXNcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHZhbHVlICogTWF0aC5wb3coMiwgZUJpYXMgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gMFxuICAgIH1cbiAgfVxuXG4gIGZvciAoOyBtTGVuID49IDg7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IG0gJiAweGZmLCBpICs9IGQsIG0gLz0gMjU2LCBtTGVuIC09IDgpIHt9XG5cbiAgZSA9IChlIDw8IG1MZW4pIHwgbVxuICBlTGVuICs9IG1MZW5cbiAgZm9yICg7IGVMZW4gPiAwOyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBlICYgMHhmZiwgaSArPSBkLCBlIC89IDI1NiwgZUxlbiAtPSA4KSB7fVxuXG4gIGJ1ZmZlcltvZmZzZXQgKyBpIC0gZF0gfD0gcyAqIDEyOFxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ieee754/index.js\n");

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaW5oZXJpdHMvaW5oZXJpdHNfYnJvd3Nlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9pbmhlcml0cy9pbmhlcml0c19icm93c2VyLmpzPzNmYjUiXSwic291cmNlc0NvbnRlbnQiOlsiaWYgKHR5cGVvZiBPYmplY3QuY3JlYXRlID09PSAnZnVuY3Rpb24nKSB7XG4gIC8vIGltcGxlbWVudGF0aW9uIGZyb20gc3RhbmRhcmQgbm9kZS5qcyAndXRpbCcgbW9kdWxlXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICBjdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDdG9yLnByb3RvdHlwZSwge1xuICAgICAgY29uc3RydWN0b3I6IHtcbiAgICAgICAgdmFsdWU6IGN0b3IsXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICB9XG4gICAgfSk7XG4gIH07XG59IGVsc2Uge1xuICAvLyBvbGQgc2Nob29sIHNoaW0gZm9yIG9sZCBicm93c2Vyc1xuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3Rvcikge1xuICAgIGN0b3Iuc3VwZXJfID0gc3VwZXJDdG9yXG4gICAgdmFyIFRlbXBDdG9yID0gZnVuY3Rpb24gKCkge31cbiAgICBUZW1wQ3Rvci5wcm90b3R5cGUgPSBzdXBlckN0b3IucHJvdG90eXBlXG4gICAgY3Rvci5wcm90b3R5cGUgPSBuZXcgVGVtcEN0b3IoKVxuICAgIGN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gY3RvclxuICB9XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/inherits/inherits_browser.js\n");

/***/ }),

/***/ "./node_modules/int64-buffer/int64-buffer.js":
/*!***************************************************!*\
  !*** ./node_modules/int64-buffer/int64-buffer.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// int64-buffer.js\n\n/*jshint -W018 */ // Confusing use of '!'.\n/*jshint -W030 */ // Expected an assignment or function call and instead saw an expression.\n/*jshint -W093 */ // Did you mean to return a conditional instead of an assignment?\n\nvar Uint64BE, Int64BE, Uint64LE, Int64LE;\n\n!function(exports) {\n  // constants\n\n  var UNDEFINED = \"undefined\";\n  var BUFFER = (UNDEFINED !== typeof Buffer) && Buffer;\n  var UINT8ARRAY = (UNDEFINED !== typeof Uint8Array) && Uint8Array;\n  var ARRAYBUFFER = (UNDEFINED !== typeof ArrayBuffer) && ArrayBuffer;\n  var ZERO = [0, 0, 0, 0, 0, 0, 0, 0];\n  var isArray = Array.isArray || _isArray;\n  var BIT32 = 4294967296;\n  var BIT24 = 16777216;\n\n  // storage class\n\n  var storage; // Array;\n\n  // generate classes\n\n  Uint64BE = factory(\"Uint64BE\", true, true);\n  Int64BE = factory(\"Int64BE\", true, false);\n  Uint64LE = factory(\"Uint64LE\", false, true);\n  Int64LE = factory(\"Int64LE\", false, false);\n\n  // class factory\n\n  function factory(name, bigendian, unsigned) {\n    var posH = bigendian ? 0 : 4;\n    var posL = bigendian ? 4 : 0;\n    var pos0 = bigendian ? 0 : 3;\n    var pos1 = bigendian ? 1 : 2;\n    var pos2 = bigendian ? 2 : 1;\n    var pos3 = bigendian ? 3 : 0;\n    var fromPositive = bigendian ? fromPositiveBE : fromPositiveLE;\n    var fromNegative = bigendian ? fromNegativeBE : fromNegativeLE;\n    var proto = Int64.prototype;\n    var isName = \"is\" + name;\n    var _isInt64 = \"_\" + isName;\n\n    // properties\n    proto.buffer = void 0;\n    proto.offset = 0;\n    proto[_isInt64] = true;\n\n    // methods\n    proto.toNumber = toNumber;\n    proto.toString = toString;\n    proto.toJSON = toNumber;\n    proto.toArray = toArray;\n\n    // add .toBuffer() method only when Buffer available\n    if (BUFFER) proto.toBuffer = toBuffer;\n\n    // add .toArrayBuffer() method only when Uint8Array available\n    if (UINT8ARRAY) proto.toArrayBuffer = toArrayBuffer;\n\n    // isUint64BE, isInt64BE\n    Int64[isName] = isInt64;\n\n    // CommonJS\n    exports[name] = Int64;\n\n    return Int64;\n\n    // constructor\n    function Int64(buffer, offset, value, raddix) {\n      if (!(this instanceof Int64)) return new Int64(buffer, offset, value, raddix);\n      return init(this, buffer, offset, value, raddix);\n    }\n\n    // isUint64BE, isInt64BE\n    function isInt64(b) {\n      return !!(b && b[_isInt64]);\n    }\n\n    // initializer\n    function init(that, buffer, offset, value, raddix) {\n      if (UINT8ARRAY && ARRAYBUFFER) {\n        if (buffer instanceof ARRAYBUFFER) buffer = new UINT8ARRAY(buffer);\n        if (value instanceof ARRAYBUFFER) value = new UINT8ARRAY(value);\n      }\n\n      // Int64BE() style\n      if (!buffer && !offset && !value && !storage) {\n        // shortcut to initialize with zero\n        that.buffer = newArray(ZERO, 0);\n        return;\n      }\n\n      // Int64BE(value, raddix) style\n      if (!isValidBuffer(buffer, offset)) {\n        var _storage = storage || Array;\n        raddix = offset;\n        value = buffer;\n        offset = 0;\n        buffer = new _storage(8);\n      }\n\n      that.buffer = buffer;\n      that.offset = offset |= 0;\n\n      // Int64BE(buffer, offset) style\n      if (UNDEFINED === typeof value) return;\n\n      // Int64BE(buffer, offset, value, raddix) style\n      if (\"string\" === typeof value) {\n        fromString(buffer, offset, value, raddix || 10);\n      } else if (isValidBuffer(value, raddix)) {\n        fromArray(buffer, offset, value, raddix);\n      } else if (\"number\" === typeof raddix) {\n        writeInt32(buffer, offset + posH, value); // high\n        writeInt32(buffer, offset + posL, raddix); // low\n      } else if (value > 0) {\n        fromPositive(buffer, offset, value); // positive\n      } else if (value < 0) {\n        fromNegative(buffer, offset, value); // negative\n      } else {\n        fromArray(buffer, offset, ZERO, 0); // zero, NaN and others\n      }\n    }\n\n    function fromString(buffer, offset, str, raddix) {\n      var pos = 0;\n      var len = str.length;\n      var high = 0;\n      var low = 0;\n      if (str[0] === \"-\") pos++;\n      var sign = pos;\n      while (pos < len) {\n        var chr = parseInt(str[pos++], raddix);\n        if (!(chr >= 0)) break; // NaN\n        low = low * raddix + chr;\n        high = high * raddix + Math.floor(low / BIT32);\n        low %= BIT32;\n      }\n      if (sign) {\n        high = ~high;\n        if (low) {\n          low = BIT32 - low;\n        } else {\n          high++;\n        }\n      }\n      writeInt32(buffer, offset + posH, high);\n      writeInt32(buffer, offset + posL, low);\n    }\n\n    function toNumber() {\n      var buffer = this.buffer;\n      var offset = this.offset;\n      var high = readInt32(buffer, offset + posH);\n      var low = readInt32(buffer, offset + posL);\n      if (!unsigned) high |= 0; // a trick to get signed\n      return high ? (high * BIT32 + low) : low;\n    }\n\n    function toString(radix) {\n      var buffer = this.buffer;\n      var offset = this.offset;\n      var high = readInt32(buffer, offset + posH);\n      var low = readInt32(buffer, offset + posL);\n      var str = \"\";\n      var sign = !unsigned && (high & 0x80000000);\n      if (sign) {\n        high = ~high;\n        low = BIT32 - low;\n      }\n      radix = radix || 10;\n      while (1) {\n        var mod = (high % radix) * BIT32 + low;\n        high = Math.floor(high / radix);\n        low = Math.floor(mod / radix);\n        str = (mod % radix).toString(radix) + str;\n        if (!high && !low) break;\n      }\n      if (sign) {\n        str = \"-\" + str;\n      }\n      return str;\n    }\n\n    function writeInt32(buffer, offset, value) {\n      buffer[offset + pos3] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos2] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos1] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos0] = value & 255;\n    }\n\n    function readInt32(buffer, offset) {\n      return (buffer[offset + pos0] * BIT24) +\n        (buffer[offset + pos1] << 16) +\n        (buffer[offset + pos2] << 8) +\n        buffer[offset + pos3];\n    }\n  }\n\n  function toArray(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    storage = null; // Array\n    if (raw !== false && offset === 0 && buffer.length === 8 && isArray(buffer)) return buffer;\n    return newArray(buffer, offset);\n  }\n\n  function toBuffer(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    storage = BUFFER;\n    if (raw !== false && offset === 0 && buffer.length === 8 && Buffer.isBuffer(buffer)) return buffer;\n    var dest = new BUFFER(8);\n    fromArray(dest, 0, buffer, offset);\n    return dest;\n  }\n\n  function toArrayBuffer(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    var arrbuf = buffer.buffer;\n    storage = UINT8ARRAY;\n    if (raw !== false && offset === 0 && (arrbuf instanceof ARRAYBUFFER) && arrbuf.byteLength === 8) return arrbuf;\n    var dest = new UINT8ARRAY(8);\n    fromArray(dest, 0, buffer, offset);\n    return dest.buffer;\n  }\n\n  function isValidBuffer(buffer, offset) {\n    var len = buffer && buffer.length;\n    offset |= 0;\n    return len && (offset + 8 <= len) && (\"string\" !== typeof buffer[offset]);\n  }\n\n  function fromArray(destbuf, destoff, srcbuf, srcoff) {\n    destoff |= 0;\n    srcoff |= 0;\n    for (var i = 0; i < 8; i++) {\n      destbuf[destoff++] = srcbuf[srcoff++] & 255;\n    }\n  }\n\n  function newArray(buffer, offset) {\n    return Array.prototype.slice.call(buffer, offset, offset + 8);\n  }\n\n  function fromPositiveBE(buffer, offset, value) {\n    var pos = offset + 8;\n    while (pos > offset) {\n      buffer[--pos] = value & 255;\n      value /= 256;\n    }\n  }\n\n  function fromNegativeBE(buffer, offset, value) {\n    var pos = offset + 8;\n    value++;\n    while (pos > offset) {\n      buffer[--pos] = ((-value) & 255) ^ 255;\n      value /= 256;\n    }\n  }\n\n  function fromPositiveLE(buffer, offset, value) {\n    var end = offset + 8;\n    while (offset < end) {\n      buffer[offset++] = value & 255;\n      value /= 256;\n    }\n  }\n\n  function fromNegativeLE(buffer, offset, value) {\n    var end = offset + 8;\n    value++;\n    while (offset < end) {\n      buffer[offset++] = ((-value) & 255) ^ 255;\n      value /= 256;\n    }\n  }\n\n  // https://github.com/retrofox/is-array\n  function _isArray(val) {\n    return !!val && \"[object Array]\" == Object.prototype.toString.call(val);\n  }\n\n}(typeof exports === 'object' && typeof exports.nodeName !== 'string' ? exports : (this || {}));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/int64-buffer/int64-buffer.js\n");

/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9pc2FycmF5L2luZGV4LmpzP2UzZGIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoYXJyKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/isarray/index.js\n");

/***/ }),

/***/ "./node_modules/md5.js/index.js":
/*!**************************************!*\
  !*** ./node_modules/md5.js/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar HashBase = __webpack_require__(/*! hash-base */ \"./node_modules/hash-base/index.js\")\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = new Buffer(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWQ1LmpzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL21kNS5qcy9pbmRleC5qcz9mNTc2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxudmFyIEhhc2hCYXNlID0gcmVxdWlyZSgnaGFzaC1iYXNlJylcblxudmFyIEFSUkFZMTYgPSBuZXcgQXJyYXkoMTYpXG5cbmZ1bmN0aW9uIE1ENSAoKSB7XG4gIEhhc2hCYXNlLmNhbGwodGhpcywgNjQpXG5cbiAgLy8gc3RhdGVcbiAgdGhpcy5fYSA9IDB4Njc0NTIzMDFcbiAgdGhpcy5fYiA9IDB4ZWZjZGFiODlcbiAgdGhpcy5fYyA9IDB4OThiYWRjZmVcbiAgdGhpcy5fZCA9IDB4MTAzMjU0NzZcbn1cblxuaW5oZXJpdHMoTUQ1LCBIYXNoQmFzZSlcblxuTUQ1LnByb3RvdHlwZS5fdXBkYXRlID0gZnVuY3Rpb24gKCkge1xuICB2YXIgTSA9IEFSUkFZMTZcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCAxNjsgKytpKSBNW2ldID0gdGhpcy5fYmxvY2sucmVhZEludDMyTEUoaSAqIDQpXG5cbiAgdmFyIGEgPSB0aGlzLl9hXG4gIHZhciBiID0gdGhpcy5fYlxuICB2YXIgYyA9IHRoaXMuX2NcbiAgdmFyIGQgPSB0aGlzLl9kXG5cbiAgYSA9IGZuRihhLCBiLCBjLCBkLCBNWzBdLCAweGQ3NmFhNDc4LCA3KVxuICBkID0gZm5GKGQsIGEsIGIsIGMsIE1bMV0sIDB4ZThjN2I3NTYsIDEyKVxuICBjID0gZm5GKGMsIGQsIGEsIGIsIE1bMl0sIDB4MjQyMDcwZGIsIDE3KVxuICBiID0gZm5GKGIsIGMsIGQsIGEsIE1bM10sIDB4YzFiZGNlZWUsIDIyKVxuICBhID0gZm5GKGEsIGIsIGMsIGQsIE1bNF0sIDB4ZjU3YzBmYWYsIDcpXG4gIGQgPSBmbkYoZCwgYSwgYiwgYywgTVs1XSwgMHg0Nzg3YzYyYSwgMTIpXG4gIGMgPSBmbkYoYywgZCwgYSwgYiwgTVs2XSwgMHhhODMwNDYxMywgMTcpXG4gIGIgPSBmbkYoYiwgYywgZCwgYSwgTVs3XSwgMHhmZDQ2OTUwMSwgMjIpXG4gIGEgPSBmbkYoYSwgYiwgYywgZCwgTVs4XSwgMHg2OTgwOThkOCwgNylcbiAgZCA9IGZuRihkLCBhLCBiLCBjLCBNWzldLCAweDhiNDRmN2FmLCAxMilcbiAgYyA9IGZuRihjLCBkLCBhLCBiLCBNWzEwXSwgMHhmZmZmNWJiMSwgMTcpXG4gIGIgPSBmbkYoYiwgYywgZCwgYSwgTVsxMV0sIDB4ODk1Y2Q3YmUsIDIyKVxuICBhID0gZm5GKGEsIGIsIGMsIGQsIE1bMTJdLCAweDZiOTAxMTIyLCA3KVxuICBkID0gZm5GKGQsIGEsIGIsIGMsIE1bMTNdLCAweGZkOTg3MTkzLCAxMilcbiAgYyA9IGZuRihjLCBkLCBhLCBiLCBNWzE0XSwgMHhhNjc5NDM4ZSwgMTcpXG4gIGIgPSBmbkYoYiwgYywgZCwgYSwgTVsxNV0sIDB4NDliNDA4MjEsIDIyKVxuXG4gIGEgPSBmbkcoYSwgYiwgYywgZCwgTVsxXSwgMHhmNjFlMjU2MiwgNSlcbiAgZCA9IGZuRyhkLCBhLCBiLCBjLCBNWzZdLCAweGMwNDBiMzQwLCA5KVxuICBjID0gZm5HKGMsIGQsIGEsIGIsIE1bMTFdLCAweDI2NWU1YTUxLCAxNClcbiAgYiA9IGZuRyhiLCBjLCBkLCBhLCBNWzBdLCAweGU5YjZjN2FhLCAyMClcbiAgYSA9IGZuRyhhLCBiLCBjLCBkLCBNWzVdLCAweGQ2MmYxMDVkLCA1KVxuICBkID0gZm5HKGQsIGEsIGIsIGMsIE1bMTBdLCAweDAyNDQxNDUzLCA5KVxuICBjID0gZm5HKGMsIGQsIGEsIGIsIE1bMTVdLCAweGQ4YTFlNjgxLCAxNClcbiAgYiA9IGZuRyhiLCBjLCBkLCBhLCBNWzRdLCAweGU3ZDNmYmM4LCAyMClcbiAgYSA9IGZuRyhhLCBiLCBjLCBkLCBNWzldLCAweDIxZTFjZGU2LCA1KVxuICBkID0gZm5HKGQsIGEsIGIsIGMsIE1bMTRdLCAweGMzMzcwN2Q2LCA5KVxuICBjID0gZm5HKGMsIGQsIGEsIGIsIE1bM10sIDB4ZjRkNTBkODcsIDE0KVxuICBiID0gZm5HKGIsIGMsIGQsIGEsIE1bOF0sIDB4NDU1YTE0ZWQsIDIwKVxuICBhID0gZm5HKGEsIGIsIGMsIGQsIE1bMTNdLCAweGE5ZTNlOTA1LCA1KVxuICBkID0gZm5HKGQsIGEsIGIsIGMsIE1bMl0sIDB4ZmNlZmEzZjgsIDkpXG4gIGMgPSBmbkcoYywgZCwgYSwgYiwgTVs3XSwgMHg2NzZmMDJkOSwgMTQpXG4gIGIgPSBmbkcoYiwgYywgZCwgYSwgTVsxMl0sIDB4OGQyYTRjOGEsIDIwKVxuXG4gIGEgPSBmbkgoYSwgYiwgYywgZCwgTVs1XSwgMHhmZmZhMzk0MiwgNClcbiAgZCA9IGZuSChkLCBhLCBiLCBjLCBNWzhdLCAweDg3NzFmNjgxLCAxMSlcbiAgYyA9IGZuSChjLCBkLCBhLCBiLCBNWzExXSwgMHg2ZDlkNjEyMiwgMTYpXG4gIGIgPSBmbkgoYiwgYywgZCwgYSwgTVsxNF0sIDB4ZmRlNTM4MGMsIDIzKVxuICBhID0gZm5IKGEsIGIsIGMsIGQsIE1bMV0sIDB4YTRiZWVhNDQsIDQpXG4gIGQgPSBmbkgoZCwgYSwgYiwgYywgTVs0XSwgMHg0YmRlY2ZhOSwgMTEpXG4gIGMgPSBmbkgoYywgZCwgYSwgYiwgTVs3XSwgMHhmNmJiNGI2MCwgMTYpXG4gIGIgPSBmbkgoYiwgYywgZCwgYSwgTVsxMF0sIDB4YmViZmJjNzAsIDIzKVxuICBhID0gZm5IKGEsIGIsIGMsIGQsIE1bMTNdLCAweDI4OWI3ZWM2LCA0KVxuICBkID0gZm5IKGQsIGEsIGIsIGMsIE1bMF0sIDB4ZWFhMTI3ZmEsIDExKVxuICBjID0gZm5IKGMsIGQsIGEsIGIsIE1bM10sIDB4ZDRlZjMwODUsIDE2KVxuICBiID0gZm5IKGIsIGMsIGQsIGEsIE1bNl0sIDB4MDQ4ODFkMDUsIDIzKVxuICBhID0gZm5IKGEsIGIsIGMsIGQsIE1bOV0sIDB4ZDlkNGQwMzksIDQpXG4gIGQgPSBmbkgoZCwgYSwgYiwgYywgTVsxMl0sIDB4ZTZkYjk5ZTUsIDExKVxuICBjID0gZm5IKGMsIGQsIGEsIGIsIE1bMTVdLCAweDFmYTI3Y2Y4LCAxNilcbiAgYiA9IGZuSChiLCBjLCBkLCBhLCBNWzJdLCAweGM0YWM1NjY1LCAyMylcblxuICBhID0gZm5JKGEsIGIsIGMsIGQsIE1bMF0sIDB4ZjQyOTIyNDQsIDYpXG4gIGQgPSBmbkkoZCwgYSwgYiwgYywgTVs3XSwgMHg0MzJhZmY5NywgMTApXG4gIGMgPSBmbkkoYywgZCwgYSwgYiwgTVsxNF0sIDB4YWI5NDIzYTcsIDE1KVxuICBiID0gZm5JKGIsIGMsIGQsIGEsIE1bNV0sIDB4ZmM5M2EwMzksIDIxKVxuICBhID0gZm5JKGEsIGIsIGMsIGQsIE1bMTJdLCAweDY1NWI1OWMzLCA2KVxuICBkID0gZm5JKGQsIGEsIGIsIGMsIE1bM10sIDB4OGYwY2NjOTIsIDEwKVxuICBjID0gZm5JKGMsIGQsIGEsIGIsIE1bMTBdLCAweGZmZWZmNDdkLCAxNSlcbiAgYiA9IGZuSShiLCBjLCBkLCBhLCBNWzFdLCAweDg1ODQ1ZGQxLCAyMSlcbiAgYSA9IGZuSShhLCBiLCBjLCBkLCBNWzhdLCAweDZmYTg3ZTRmLCA2KVxuICBkID0gZm5JKGQsIGEsIGIsIGMsIE1bMTVdLCAweGZlMmNlNmUwLCAxMClcbiAgYyA9IGZuSShjLCBkLCBhLCBiLCBNWzZdLCAweGEzMDE0MzE0LCAxNSlcbiAgYiA9IGZuSShiLCBjLCBkLCBhLCBNWzEzXSwgMHg0ZTA4MTFhMSwgMjEpXG4gIGEgPSBmbkkoYSwgYiwgYywgZCwgTVs0XSwgMHhmNzUzN2U4MiwgNilcbiAgZCA9IGZuSShkLCBhLCBiLCBjLCBNWzExXSwgMHhiZDNhZjIzNSwgMTApXG4gIGMgPSBmbkkoYywgZCwgYSwgYiwgTVsyXSwgMHgyYWQ3ZDJiYiwgMTUpXG4gIGIgPSBmbkkoYiwgYywgZCwgYSwgTVs5XSwgMHhlYjg2ZDM5MSwgMjEpXG5cbiAgdGhpcy5fYSA9ICh0aGlzLl9hICsgYSkgfCAwXG4gIHRoaXMuX2IgPSAodGhpcy5fYiArIGIpIHwgMFxuICB0aGlzLl9jID0gKHRoaXMuX2MgKyBjKSB8IDBcbiAgdGhpcy5fZCA9ICh0aGlzLl9kICsgZCkgfCAwXG59XG5cbk1ENS5wcm90b3R5cGUuX2RpZ2VzdCA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gY3JlYXRlIHBhZGRpbmcgYW5kIGhhbmRsZSBibG9ja3NcbiAgdGhpcy5fYmxvY2tbdGhpcy5fYmxvY2tPZmZzZXQrK10gPSAweDgwXG4gIGlmICh0aGlzLl9ibG9ja09mZnNldCA+IDU2KSB7XG4gICAgdGhpcy5fYmxvY2suZmlsbCgwLCB0aGlzLl9ibG9ja09mZnNldCwgNjQpXG4gICAgdGhpcy5fdXBkYXRlKClcbiAgICB0aGlzLl9ibG9ja09mZnNldCA9IDBcbiAgfVxuXG4gIHRoaXMuX2Jsb2NrLmZpbGwoMCwgdGhpcy5fYmxvY2tPZmZzZXQsIDU2KVxuICB0aGlzLl9ibG9jay53cml0ZVVJbnQzMkxFKHRoaXMuX2xlbmd0aFswXSwgNTYpXG4gIHRoaXMuX2Jsb2NrLndyaXRlVUludDMyTEUodGhpcy5fbGVuZ3RoWzFdLCA2MClcbiAgdGhpcy5fdXBkYXRlKClcblxuICAvLyBwcm9kdWNlIHJlc3VsdFxuICB2YXIgYnVmZmVyID0gbmV3IEJ1ZmZlcigxNilcbiAgYnVmZmVyLndyaXRlSW50MzJMRSh0aGlzLl9hLCAwKVxuICBidWZmZXIud3JpdGVJbnQzMkxFKHRoaXMuX2IsIDQpXG4gIGJ1ZmZlci53cml0ZUludDMyTEUodGhpcy5fYywgOClcbiAgYnVmZmVyLndyaXRlSW50MzJMRSh0aGlzLl9kLCAxMilcbiAgcmV0dXJuIGJ1ZmZlclxufVxuXG5mdW5jdGlvbiByb3RsICh4LCBuKSB7XG4gIHJldHVybiAoeCA8PCBuKSB8ICh4ID4+PiAoMzIgLSBuKSlcbn1cblxuZnVuY3Rpb24gZm5GIChhLCBiLCBjLCBkLCBtLCBrLCBzKSB7XG4gIHJldHVybiAocm90bCgoYSArICgoYiAmIGMpIHwgKCh+YikgJiBkKSkgKyBtICsgaykgfCAwLCBzKSArIGIpIHwgMFxufVxuXG5mdW5jdGlvbiBmbkcgKGEsIGIsIGMsIGQsIG0sIGssIHMpIHtcbiAgcmV0dXJuIChyb3RsKChhICsgKChiICYgZCkgfCAoYyAmICh+ZCkpKSArIG0gKyBrKSB8IDAsIHMpICsgYikgfCAwXG59XG5cbmZ1bmN0aW9uIGZuSCAoYSwgYiwgYywgZCwgbSwgaywgcykge1xuICByZXR1cm4gKHJvdGwoKGEgKyAoYiBeIGMgXiBkKSArIG0gKyBrKSB8IDAsIHMpICsgYikgfCAwXG59XG5cbmZ1bmN0aW9uIGZuSSAoYSwgYiwgYywgZCwgbSwgaywgcykge1xuICByZXR1cm4gKHJvdGwoKGEgKyAoKGMgXiAoYiB8ICh+ZCkpKSkgKyBtICsgaykgfCAwLCBzKSArIGIpIHwgMFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IE1ENVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/md5.js/index.js\n");

/***/ }),

/***/ "./node_modules/node-libs-browser/mock/net.js":
/*!****************************************************!*\
  !*** ./node_modules/node-libs-browser/mock/net.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.createServer =\nexports.createConnection =\nexports.connect =\nfunction () {};\n\nexports.isIP =\nexports.isIPv4 =\nexports.isIPv6 =\nfunction () { return true };\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbm9kZS1saWJzLWJyb3dzZXIvbW9jay9uZXQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvbm9kZS1saWJzLWJyb3dzZXIvbW9jay9uZXQuanM/YTA0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLmNyZWF0ZVNlcnZlciA9XG5leHBvcnRzLmNyZWF0ZUNvbm5lY3Rpb24gPVxuZXhwb3J0cy5jb25uZWN0ID1cbmZ1bmN0aW9uICgpIHt9O1xuXG5leHBvcnRzLmlzSVAgPVxuZXhwb3J0cy5pc0lQdjQgPVxuZXhwb3J0cy5pc0lQdjYgPVxuZnVuY3Rpb24gKCkgeyByZXR1cm4gdHJ1ZSB9O1xuXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/node-libs-browser/mock/net.js\n");

/***/ }),

/***/ "./node_modules/node-libs-browser/mock/tls.js":
/*!****************************************************!*\
  !*** ./node_modules/node-libs-browser/mock/tls.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// todo\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbm9kZS1saWJzLWJyb3dzZXIvbW9jay90bHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvbm9kZS1saWJzLWJyb3dzZXIvbW9jay90bHMuanM/NDdlYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0b2RvXG4iXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/node-libs-browser/mock/tls.js\n");

/***/ }),

/***/ "./node_modules/os-browserify/browser.js":
/*!***********************************************!*\
  !*** ./node_modules/os-browserify/browser.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvb3MtYnJvd3NlcmlmeS9icm93c2VyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL29zLWJyb3dzZXJpZnkvYnJvd3Nlci5qcz8zYzQzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMuZW5kaWFubmVzcyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICdMRScgfTtcblxuZXhwb3J0cy5ob3N0bmFtZSA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodHlwZW9mIGxvY2F0aW9uICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gbG9jYXRpb24uaG9zdG5hbWVcbiAgICB9XG4gICAgZWxzZSByZXR1cm4gJyc7XG59O1xuXG5leHBvcnRzLmxvYWRhdmcgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbXSB9O1xuXG5leHBvcnRzLnVwdGltZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDAgfTtcblxuZXhwb3J0cy5mcmVlbWVtID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBOdW1iZXIuTUFYX1ZBTFVFO1xufTtcblxuZXhwb3J0cy50b3RhbG1lbSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gTnVtYmVyLk1BWF9WQUxVRTtcbn07XG5cbmV4cG9ydHMuY3B1cyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFtdIH07XG5cbmV4cG9ydHMudHlwZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICdCcm93c2VyJyB9O1xuXG5leHBvcnRzLnJlbGVhc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBuYXZpZ2F0b3IuYXBwVmVyc2lvbjtcbiAgICB9XG4gICAgcmV0dXJuICcnO1xufTtcblxuZXhwb3J0cy5uZXR3b3JrSW50ZXJmYWNlc1xuPSBleHBvcnRzLmdldE5ldHdvcmtJbnRlcmZhY2VzXG49IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHt9IH07XG5cbmV4cG9ydHMuYXJjaCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICdqYXZhc2NyaXB0JyB9O1xuXG5leHBvcnRzLnBsYXRmb3JtID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJ2Jyb3dzZXInIH07XG5cbmV4cG9ydHMudG1wZGlyID0gZXhwb3J0cy50bXBEaXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuICcvdG1wJztcbn07XG5cbmV4cG9ydHMuRU9MID0gJ1xcbic7XG5cbmV4cG9ydHMuaG9tZWRpciA9IGZ1bmN0aW9uICgpIHtcblx0cmV0dXJuICcvJ1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/os-browserify/browser.js\n");

/***/ }),

/***/ "./node_modules/priorityqueuejs/index.js":
/*!***********************************************!*\
  !*** ./node_modules/priorityqueuejs/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Expose `PriorityQueue`.\n */\nmodule.exports = PriorityQueue;\n\n/**\n * Initializes a new empty `PriorityQueue` with the given `comparator(a, b)`\n * function, uses `.DEFAULT_COMPARATOR()` when no function is provided.\n *\n * The comparator function must return a positive number when `a > b`, 0 when\n * `a == b` and a negative number when `a < b`.\n *\n * @param {Function}\n * @return {PriorityQueue}\n * @api public\n */\nfunction PriorityQueue(comparator) {\n  this._comparator = comparator || PriorityQueue.DEFAULT_COMPARATOR;\n  this._elements = [];\n}\n\n/**\n * Compares `a` and `b`, when `a > b` it returns a positive number, when\n * it returns 0 and when `a < b` it returns a negative number.\n *\n * @param {String|Number} a\n * @param {String|Number} b\n * @return {Number}\n * @api public\n */\nPriorityQueue.DEFAULT_COMPARATOR = function(a, b) {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a - b;\n  } else {\n    a = a.toString();\n    b = b.toString();\n\n    if (a == b) return 0;\n\n    return (a > b) ? 1 : -1;\n  }\n};\n\n/**\n * Returns whether the priority queue is empty or not.\n *\n * @return {Boolean}\n * @api public\n */\nPriorityQueue.prototype.isEmpty = function() {\n  return this.size() === 0;\n};\n\n/**\n * Peeks at the top element of the priority queue.\n *\n * @return {Object}\n * @throws {Error} when the queue is empty.\n * @api public\n */\nPriorityQueue.prototype.peek = function() {\n  if (this.isEmpty()) throw new Error('PriorityQueue is empty');\n\n  return this._elements[0];\n};\n\n/**\n * Dequeues the top element of the priority queue.\n *\n * @return {Object}\n * @throws {Error} when the queue is empty.\n * @api public\n */\nPriorityQueue.prototype.deq = function() {\n  var first = this.peek();\n  var last = this._elements.pop();\n  var size = this.size();\n\n  if (size === 0) return first;\n\n  this._elements[0] = last;\n  var current = 0;\n\n  while (current < size) {\n    var largest = current;\n    var left = (2 * current) + 1;\n    var right = (2 * current) + 2;\n\n    if (left < size && this._compare(left, largest) >= 0) {\n      largest = left;\n    }\n\n    if (right < size && this._compare(right, largest) >= 0) {\n      largest = right;\n    }\n\n    if (largest === current) break;\n\n    this._swap(largest, current);\n    current = largest;\n  }\n\n  return first;\n};\n\n/**\n * Enqueues the `element` at the priority queue and returns its new size.\n *\n * @param {Object} element\n * @return {Number}\n * @api public\n */\nPriorityQueue.prototype.enq = function(element) {\n  var size = this._elements.push(element);\n  var current = size - 1;\n\n  while (current > 0) {\n    var parent = Math.floor((current - 1) / 2);\n\n    if (this._compare(current, parent) <= 0) break;\n\n    this._swap(parent, current);\n    current = parent;\n  }\n\n  return size;\n};\n\n/**\n * Returns the size of the priority queue.\n *\n * @return {Number}\n * @api public\n */\nPriorityQueue.prototype.size = function() {\n  return this._elements.length;\n};\n\n/**\n *  Iterates over queue elements\n *\n *  @param {Function} fn\n */\nPriorityQueue.prototype.forEach = function(fn) {\n  return this._elements.forEach(fn);\n};\n\n/**\n * Compares the values at position `a` and `b` in the priority queue using its\n * comparator function.\n *\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @api private\n */\nPriorityQueue.prototype._compare = function(a, b) {\n  return this._comparator(this._elements[a], this._elements[b]);\n};\n\n/**\n * Swaps the values at position `a` and `b` in the priority queue.\n *\n * @param {Number} a\n * @param {Number} b\n * @api private\n */\nPriorityQueue.prototype._swap = function(a, b) {\n  var aux = this._elements[a];\n  this._elements[a] = this._elements[b];\n  this._elements[b] = aux;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJpb3JpdHlxdWV1ZWpzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL3ByaW9yaXR5cXVldWVqcy9pbmRleC5qcz8wMjVlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXhwb3NlIGBQcmlvcml0eVF1ZXVlYC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBQcmlvcml0eVF1ZXVlO1xuXG4vKipcbiAqIEluaXRpYWxpemVzIGEgbmV3IGVtcHR5IGBQcmlvcml0eVF1ZXVlYCB3aXRoIHRoZSBnaXZlbiBgY29tcGFyYXRvcihhLCBiKWBcbiAqIGZ1bmN0aW9uLCB1c2VzIGAuREVGQVVMVF9DT01QQVJBVE9SKClgIHdoZW4gbm8gZnVuY3Rpb24gaXMgcHJvdmlkZWQuXG4gKlxuICogVGhlIGNvbXBhcmF0b3IgZnVuY3Rpb24gbXVzdCByZXR1cm4gYSBwb3NpdGl2ZSBudW1iZXIgd2hlbiBgYSA+IGJgLCAwIHdoZW5cbiAqIGBhID09IGJgIGFuZCBhIG5lZ2F0aXZlIG51bWJlciB3aGVuIGBhIDwgYmAuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn1cbiAqIEByZXR1cm4ge1ByaW9yaXR5UXVldWV9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5mdW5jdGlvbiBQcmlvcml0eVF1ZXVlKGNvbXBhcmF0b3IpIHtcbiAgdGhpcy5fY29tcGFyYXRvciA9IGNvbXBhcmF0b3IgfHwgUHJpb3JpdHlRdWV1ZS5ERUZBVUxUX0NPTVBBUkFUT1I7XG4gIHRoaXMuX2VsZW1lbnRzID0gW107XG59XG5cbi8qKlxuICogQ29tcGFyZXMgYGFgIGFuZCBgYmAsIHdoZW4gYGEgPiBiYCBpdCByZXR1cm5zIGEgcG9zaXRpdmUgbnVtYmVyLCB3aGVuXG4gKiBpdCByZXR1cm5zIDAgYW5kIHdoZW4gYGEgPCBiYCBpdCByZXR1cm5zIGEgbmVnYXRpdmUgbnVtYmVyLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfE51bWJlcn0gYVxuICogQHBhcmFtIHtTdHJpbmd8TnVtYmVyfSBiXG4gKiBAcmV0dXJuIHtOdW1iZXJ9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5Qcmlvcml0eVF1ZXVlLkRFRkFVTFRfQ09NUEFSQVRPUiA9IGZ1bmN0aW9uKGEsIGIpIHtcbiAgaWYgKHR5cGVvZiBhID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgYiA9PT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gYSAtIGI7XG4gIH0gZWxzZSB7XG4gICAgYSA9IGEudG9TdHJpbmcoKTtcbiAgICBiID0gYi50b1N0cmluZygpO1xuXG4gICAgaWYgKGEgPT0gYikgcmV0dXJuIDA7XG5cbiAgICByZXR1cm4gKGEgPiBiKSA/IDEgOiAtMTtcbiAgfVxufTtcblxuLyoqXG4gKiBSZXR1cm5zIHdoZXRoZXIgdGhlIHByaW9yaXR5IHF1ZXVlIGlzIGVtcHR5IG9yIG5vdC5cbiAqXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICogQGFwaSBwdWJsaWNcbiAqL1xuUHJpb3JpdHlRdWV1ZS5wcm90b3R5cGUuaXNFbXB0eSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5zaXplKCkgPT09IDA7XG59O1xuXG4vKipcbiAqIFBlZWtzIGF0IHRoZSB0b3AgZWxlbWVudCBvZiB0aGUgcHJpb3JpdHkgcXVldWUuXG4gKlxuICogQHJldHVybiB7T2JqZWN0fVxuICogQHRocm93cyB7RXJyb3J9IHdoZW4gdGhlIHF1ZXVlIGlzIGVtcHR5LlxuICogQGFwaSBwdWJsaWNcbiAqL1xuUHJpb3JpdHlRdWV1ZS5wcm90b3R5cGUucGVlayA9IGZ1bmN0aW9uKCkge1xuICBpZiAodGhpcy5pc0VtcHR5KCkpIHRocm93IG5ldyBFcnJvcignUHJpb3JpdHlRdWV1ZSBpcyBlbXB0eScpO1xuXG4gIHJldHVybiB0aGlzLl9lbGVtZW50c1swXTtcbn07XG5cbi8qKlxuICogRGVxdWV1ZXMgdGhlIHRvcCBlbGVtZW50IG9mIHRoZSBwcmlvcml0eSBxdWV1ZS5cbiAqXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKiBAdGhyb3dzIHtFcnJvcn0gd2hlbiB0aGUgcXVldWUgaXMgZW1wdHkuXG4gKiBAYXBpIHB1YmxpY1xuICovXG5Qcmlvcml0eVF1ZXVlLnByb3RvdHlwZS5kZXEgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGZpcnN0ID0gdGhpcy5wZWVrKCk7XG4gIHZhciBsYXN0ID0gdGhpcy5fZWxlbWVudHMucG9wKCk7XG4gIHZhciBzaXplID0gdGhpcy5zaXplKCk7XG5cbiAgaWYgKHNpemUgPT09IDApIHJldHVybiBmaXJzdDtcblxuICB0aGlzLl9lbGVtZW50c1swXSA9IGxhc3Q7XG4gIHZhciBjdXJyZW50ID0gMDtcblxuICB3aGlsZSAoY3VycmVudCA8IHNpemUpIHtcbiAgICB2YXIgbGFyZ2VzdCA9IGN1cnJlbnQ7XG4gICAgdmFyIGxlZnQgPSAoMiAqIGN1cnJlbnQpICsgMTtcbiAgICB2YXIgcmlnaHQgPSAoMiAqIGN1cnJlbnQpICsgMjtcblxuICAgIGlmIChsZWZ0IDwgc2l6ZSAmJiB0aGlzLl9jb21wYXJlKGxlZnQsIGxhcmdlc3QpID49IDApIHtcbiAgICAgIGxhcmdlc3QgPSBsZWZ0O1xuICAgIH1cblxuICAgIGlmIChyaWdodCA8IHNpemUgJiYgdGhpcy5fY29tcGFyZShyaWdodCwgbGFyZ2VzdCkgPj0gMCkge1xuICAgICAgbGFyZ2VzdCA9IHJpZ2h0O1xuICAgIH1cblxuICAgIGlmIChsYXJnZXN0ID09PSBjdXJyZW50KSBicmVhaztcblxuICAgIHRoaXMuX3N3YXAobGFyZ2VzdCwgY3VycmVudCk7XG4gICAgY3VycmVudCA9IGxhcmdlc3Q7XG4gIH1cblxuICByZXR1cm4gZmlyc3Q7XG59O1xuXG4vKipcbiAqIEVucXVldWVzIHRoZSBgZWxlbWVudGAgYXQgdGhlIHByaW9yaXR5IHF1ZXVlIGFuZCByZXR1cm5zIGl0cyBuZXcgc2l6ZS5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gZWxlbWVudFxuICogQHJldHVybiB7TnVtYmVyfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuUHJpb3JpdHlRdWV1ZS5wcm90b3R5cGUuZW5xID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICB2YXIgc2l6ZSA9IHRoaXMuX2VsZW1lbnRzLnB1c2goZWxlbWVudCk7XG4gIHZhciBjdXJyZW50ID0gc2l6ZSAtIDE7XG5cbiAgd2hpbGUgKGN1cnJlbnQgPiAwKSB7XG4gICAgdmFyIHBhcmVudCA9IE1hdGguZmxvb3IoKGN1cnJlbnQgLSAxKSAvIDIpO1xuXG4gICAgaWYgKHRoaXMuX2NvbXBhcmUoY3VycmVudCwgcGFyZW50KSA8PSAwKSBicmVhaztcblxuICAgIHRoaXMuX3N3YXAocGFyZW50LCBjdXJyZW50KTtcbiAgICBjdXJyZW50ID0gcGFyZW50O1xuICB9XG5cbiAgcmV0dXJuIHNpemU7XG59O1xuXG4vKipcbiAqIFJldHVybnMgdGhlIHNpemUgb2YgdGhlIHByaW9yaXR5IHF1ZXVlLlxuICpcbiAqIEByZXR1cm4ge051bWJlcn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblByaW9yaXR5UXVldWUucHJvdG90eXBlLnNpemUgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuX2VsZW1lbnRzLmxlbmd0aDtcbn07XG5cbi8qKlxuICogIEl0ZXJhdGVzIG92ZXIgcXVldWUgZWxlbWVudHNcbiAqXG4gKiAgQHBhcmFtIHtGdW5jdGlvbn0gZm5cbiAqL1xuUHJpb3JpdHlRdWV1ZS5wcm90b3R5cGUuZm9yRWFjaCA9IGZ1bmN0aW9uKGZuKSB7XG4gIHJldHVybiB0aGlzLl9lbGVtZW50cy5mb3JFYWNoKGZuKTtcbn07XG5cbi8qKlxuICogQ29tcGFyZXMgdGhlIHZhbHVlcyBhdCBwb3NpdGlvbiBgYWAgYW5kIGBiYCBpbiB0aGUgcHJpb3JpdHkgcXVldWUgdXNpbmcgaXRzXG4gKiBjb21wYXJhdG9yIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBhXG4gKiBAcGFyYW0ge051bWJlcn0gYlxuICogQHJldHVybiB7TnVtYmVyfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblByaW9yaXR5UXVldWUucHJvdG90eXBlLl9jb21wYXJlID0gZnVuY3Rpb24oYSwgYikge1xuICByZXR1cm4gdGhpcy5fY29tcGFyYXRvcih0aGlzLl9lbGVtZW50c1thXSwgdGhpcy5fZWxlbWVudHNbYl0pO1xufTtcblxuLyoqXG4gKiBTd2FwcyB0aGUgdmFsdWVzIGF0IHBvc2l0aW9uIGBhYCBhbmQgYGJgIGluIHRoZSBwcmlvcml0eSBxdWV1ZS5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gYVxuICogQHBhcmFtIHtOdW1iZXJ9IGJcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5Qcmlvcml0eVF1ZXVlLnByb3RvdHlwZS5fc3dhcCA9IGZ1bmN0aW9uKGEsIGIpIHtcbiAgdmFyIGF1eCA9IHRoaXMuX2VsZW1lbnRzW2FdO1xuICB0aGlzLl9lbGVtZW50c1thXSA9IHRoaXMuX2VsZW1lbnRzW2JdO1xuICB0aGlzLl9lbGVtZW50c1tiXSA9IGF1eDtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/priorityqueuejs/index.js\n");

/***/ }),

/***/ "./node_modules/process-nextick-args/index.js":
/*!****************************************************!*\
  !*** ./node_modules/process-nextick-args/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy1uZXh0aWNrLWFyZ3MvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy1uZXh0aWNrLWFyZ3MvaW5kZXguanM/OTY2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmICghcHJvY2Vzcy52ZXJzaW9uIHx8XG4gICAgcHJvY2Vzcy52ZXJzaW9uLmluZGV4T2YoJ3YwLicpID09PSAwIHx8XG4gICAgcHJvY2Vzcy52ZXJzaW9uLmluZGV4T2YoJ3YxLicpID09PSAwICYmIHByb2Nlc3MudmVyc2lvbi5pbmRleE9mKCd2MS44LicpICE9PSAwKSB7XG4gIG1vZHVsZS5leHBvcnRzID0geyBuZXh0VGljazogbmV4dFRpY2sgfTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcHJvY2Vzc1xufVxuXG5mdW5jdGlvbiBuZXh0VGljayhmbiwgYXJnMSwgYXJnMiwgYXJnMykge1xuICBpZiAodHlwZW9mIGZuICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJjYWxsYmFja1wiIGFyZ3VtZW50IG11c3QgYmUgYSBmdW5jdGlvbicpO1xuICB9XG4gIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICB2YXIgYXJncywgaTtcbiAgc3dpdGNoIChsZW4pIHtcbiAgY2FzZSAwOlxuICBjYXNlIDE6XG4gICAgcmV0dXJuIHByb2Nlc3MubmV4dFRpY2soZm4pO1xuICBjYXNlIDI6XG4gICAgcmV0dXJuIHByb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24gYWZ0ZXJUaWNrT25lKCkge1xuICAgICAgZm4uY2FsbChudWxsLCBhcmcxKTtcbiAgICB9KTtcbiAgY2FzZSAzOlxuICAgIHJldHVybiBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uIGFmdGVyVGlja1R3bygpIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgYXJnMSwgYXJnMik7XG4gICAgfSk7XG4gIGNhc2UgNDpcbiAgICByZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiBhZnRlclRpY2tUaHJlZSgpIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgYXJnMSwgYXJnMiwgYXJnMyk7XG4gICAgfSk7XG4gIGRlZmF1bHQ6XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gLSAxKTtcbiAgICBpID0gMDtcbiAgICB3aGlsZSAoaSA8IGFyZ3MubGVuZ3RoKSB7XG4gICAgICBhcmdzW2krK10gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuICAgIHJldHVybiBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uIGFmdGVyVGljaygpIHtcbiAgICAgIGZuLmFwcGx5KG51bGwsIGFyZ3MpO1xuICAgIH0pO1xuICB9XG59XG5cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/process-nextick-args/index.js\n");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ }),

/***/ "./node_modules/punycode/punycode.js":
/*!*******************************************!*\
  !*** ./node_modules/punycode/punycode.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\t\treturn punycode;\n\t\t}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module), __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/punycode/punycode.js\n");

/***/ }),

/***/ "./node_modules/querystring-es3/decode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/decode.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2RlY29kZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvZGVjb2RlLmpzPzkxZGQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbid1c2Ugc3RyaWN0JztcblxuLy8gSWYgb2JqLmhhc093blByb3BlcnR5IGhhcyBiZWVuIG92ZXJyaWRkZW4sIHRoZW4gY2FsbGluZ1xuLy8gb2JqLmhhc093blByb3BlcnR5KHByb3ApIHdpbGwgYnJlYWsuXG4vLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9qb3llbnQvbm9kZS9pc3N1ZXMvMTcwN1xuZnVuY3Rpb24gaGFzT3duUHJvcGVydHkob2JqLCBwcm9wKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihxcywgc2VwLCBlcSwgb3B0aW9ucykge1xuICBzZXAgPSBzZXAgfHwgJyYnO1xuICBlcSA9IGVxIHx8ICc9JztcbiAgdmFyIG9iaiA9IHt9O1xuXG4gIGlmICh0eXBlb2YgcXMgIT09ICdzdHJpbmcnIHx8IHFzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBvYmo7XG4gIH1cblxuICB2YXIgcmVnZXhwID0gL1xcKy9nO1xuICBxcyA9IHFzLnNwbGl0KHNlcCk7XG5cbiAgdmFyIG1heEtleXMgPSAxMDAwO1xuICBpZiAob3B0aW9ucyAmJiB0eXBlb2Ygb3B0aW9ucy5tYXhLZXlzID09PSAnbnVtYmVyJykge1xuICAgIG1heEtleXMgPSBvcHRpb25zLm1heEtleXM7XG4gIH1cblxuICB2YXIgbGVuID0gcXMubGVuZ3RoO1xuICAvLyBtYXhLZXlzIDw9IDAgbWVhbnMgdGhhdCB3ZSBzaG91bGQgbm90IGxpbWl0IGtleXMgY291bnRcbiAgaWYgKG1heEtleXMgPiAwICYmIGxlbiA+IG1heEtleXMpIHtcbiAgICBsZW4gPSBtYXhLZXlzO1xuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47ICsraSkge1xuICAgIHZhciB4ID0gcXNbaV0ucmVwbGFjZShyZWdleHAsICclMjAnKSxcbiAgICAgICAgaWR4ID0geC5pbmRleE9mKGVxKSxcbiAgICAgICAga3N0ciwgdnN0ciwgaywgdjtcblxuICAgIGlmIChpZHggPj0gMCkge1xuICAgICAga3N0ciA9IHguc3Vic3RyKDAsIGlkeCk7XG4gICAgICB2c3RyID0geC5zdWJzdHIoaWR4ICsgMSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGtzdHIgPSB4O1xuICAgICAgdnN0ciA9ICcnO1xuICAgIH1cblxuICAgIGsgPSBkZWNvZGVVUklDb21wb25lbnQoa3N0cik7XG4gICAgdiA9IGRlY29kZVVSSUNvbXBvbmVudCh2c3RyKTtcblxuICAgIGlmICghaGFzT3duUHJvcGVydHkob2JqLCBrKSkge1xuICAgICAgb2JqW2tdID0gdjtcbiAgICB9IGVsc2UgaWYgKGlzQXJyYXkob2JqW2tdKSkge1xuICAgICAgb2JqW2tdLnB1c2godik7XG4gICAgfSBlbHNlIHtcbiAgICAgIG9ialtrXSA9IFtvYmpba10sIHZdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvYmo7XG59O1xuXG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKHhzKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoeHMpID09PSAnW29iamVjdCBBcnJheV0nO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/querystring-es3/decode.js\n");

/***/ }),

/***/ "./node_modules/querystring-es3/encode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/encode.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2VuY29kZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvZW5jb2RlLmpzP2UwOTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIHN0cmluZ2lmeVByaW1pdGl2ZSA9IGZ1bmN0aW9uKHYpIHtcbiAgc3dpdGNoICh0eXBlb2Ygdikge1xuICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICByZXR1cm4gdjtcblxuICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgcmV0dXJuIHYgPyAndHJ1ZScgOiAnZmFsc2UnO1xuXG4gICAgY2FzZSAnbnVtYmVyJzpcbiAgICAgIHJldHVybiBpc0Zpbml0ZSh2KSA/IHYgOiAnJztcblxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJyc7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob2JqLCBzZXAsIGVxLCBuYW1lKSB7XG4gIHNlcCA9IHNlcCB8fCAnJic7XG4gIGVxID0gZXEgfHwgJz0nO1xuICBpZiAob2JqID09PSBudWxsKSB7XG4gICAgb2JqID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvYmogPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIG1hcChvYmplY3RLZXlzKG9iaiksIGZ1bmN0aW9uKGspIHtcbiAgICAgIHZhciBrcyA9IGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoaykpICsgZXE7XG4gICAgICBpZiAoaXNBcnJheShvYmpba10pKSB7XG4gICAgICAgIHJldHVybiBtYXAob2JqW2tdLCBmdW5jdGlvbih2KSB7XG4gICAgICAgICAgcmV0dXJuIGtzICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZSh2KSk7XG4gICAgICAgIH0pLmpvaW4oc2VwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBrcyArIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUob2JqW2tdKSk7XG4gICAgICB9XG4gICAgfSkuam9pbihzZXApO1xuXG4gIH1cblxuICBpZiAoIW5hbWUpIHJldHVybiAnJztcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUobmFtZSkpICsgZXEgK1xuICAgICAgICAgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShvYmopKTtcbn07XG5cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoeHMpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh4cykgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuXG5mdW5jdGlvbiBtYXAgKHhzLCBmKSB7XG4gIGlmICh4cy5tYXApIHJldHVybiB4cy5tYXAoZik7XG4gIHZhciByZXMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB4cy5sZW5ndGg7IGkrKykge1xuICAgIHJlcy5wdXNoKGYoeHNbaV0sIGkpKTtcbiAgfVxuICByZXR1cm4gcmVzO1xufVxuXG52YXIgb2JqZWN0S2V5cyA9IE9iamVjdC5rZXlzIHx8IGZ1bmN0aW9uIChvYmopIHtcbiAgdmFyIHJlcyA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHJlcy5wdXNoKGtleSk7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/querystring-es3/encode.js\n");

/***/ }),

/***/ "./node_modules/querystring-es3/index.js":
/*!***********************************************!*\
  !*** ./node_modules/querystring-es3/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.decode = exports.parse = __webpack_require__(/*! ./decode */ \"./node_modules/querystring-es3/decode.js\");\nexports.encode = exports.stringify = __webpack_require__(/*! ./encode */ \"./node_modules/querystring-es3/encode.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nLWVzMy9pbmRleC5qcz9iMzgzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5kZWNvZGUgPSBleHBvcnRzLnBhcnNlID0gcmVxdWlyZSgnLi9kZWNvZGUnKTtcbmV4cG9ydHMuZW5jb2RlID0gZXhwb3J0cy5zdHJpbmdpZnkgPSByZXF1aXJlKCcuL2VuY29kZScpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/querystring-es3/index.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/duplex-browser.js":
/*!********************************************************!*\
  !*** ./node_modules/readable-stream/duplex-browser.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2R1cGxleC1icm93c2VyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9kdXBsZXgtYnJvd3Nlci5qcz8wOTYwIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV9kdXBsZXguanMnKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/duplex-browser.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_duplex.js":
/*!************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_duplex.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nvar Readable = __webpack_require__(/*! ./_stream_readable */ \"./node_modules/readable-stream/lib/_stream_readable.js\");\nvar Writable = __webpack_require__(/*! ./_stream_writable */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX2R1cGxleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fZHVwbGV4LmpzP2IxOWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbi8vIGEgZHVwbGV4IHN0cmVhbSBpcyBqdXN0IGEgc3RyZWFtIHRoYXQgaXMgYm90aCByZWFkYWJsZSBhbmQgd3JpdGFibGUuXG4vLyBTaW5jZSBKUyBkb2Vzbid0IGhhdmUgbXVsdGlwbGUgcHJvdG90eXBhbCBpbmhlcml0YW5jZSwgdGhpcyBjbGFzc1xuLy8gcHJvdG90eXBhbGx5IGluaGVyaXRzIGZyb20gUmVhZGFibGUsIGFuZCB0aGVuIHBhcmFzaXRpY2FsbHkgZnJvbVxuLy8gV3JpdGFibGUuXG5cbid1c2Ugc3RyaWN0JztcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cblxudmFyIHBuYSA9IHJlcXVpcmUoJ3Byb2Nlc3MtbmV4dGljay1hcmdzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciBvYmplY3RLZXlzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24gKG9iaikge1xuICB2YXIga2V5cyA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAga2V5cy5wdXNoKGtleSk7XG4gIH1yZXR1cm4ga2V5cztcbn07XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxubW9kdWxlLmV4cG9ydHMgPSBEdXBsZXg7XG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgdXRpbCA9IHJlcXVpcmUoJ2NvcmUtdXRpbC1pcycpO1xudXRpbC5pbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxudmFyIFJlYWRhYmxlID0gcmVxdWlyZSgnLi9fc3RyZWFtX3JlYWRhYmxlJyk7XG52YXIgV3JpdGFibGUgPSByZXF1aXJlKCcuL19zdHJlYW1fd3JpdGFibGUnKTtcblxudXRpbC5pbmhlcml0cyhEdXBsZXgsIFJlYWRhYmxlKTtcblxudmFyIGtleXMgPSBvYmplY3RLZXlzKFdyaXRhYmxlLnByb3RvdHlwZSk7XG5mb3IgKHZhciB2ID0gMDsgdiA8IGtleXMubGVuZ3RoOyB2KyspIHtcbiAgdmFyIG1ldGhvZCA9IGtleXNbdl07XG4gIGlmICghRHVwbGV4LnByb3RvdHlwZVttZXRob2RdKSBEdXBsZXgucHJvdG90eXBlW21ldGhvZF0gPSBXcml0YWJsZS5wcm90b3R5cGVbbWV0aG9kXTtcbn1cblxuZnVuY3Rpb24gRHVwbGV4KG9wdGlvbnMpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIER1cGxleCkpIHJldHVybiBuZXcgRHVwbGV4KG9wdGlvbnMpO1xuXG4gIFJlYWRhYmxlLmNhbGwodGhpcywgb3B0aW9ucyk7XG4gIFdyaXRhYmxlLmNhbGwodGhpcywgb3B0aW9ucyk7XG5cbiAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5yZWFkYWJsZSA9PT0gZmFsc2UpIHRoaXMucmVhZGFibGUgPSBmYWxzZTtcblxuICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLndyaXRhYmxlID09PSBmYWxzZSkgdGhpcy53cml0YWJsZSA9IGZhbHNlO1xuXG4gIHRoaXMuYWxsb3dIYWxmT3BlbiA9IHRydWU7XG4gIGlmIChvcHRpb25zICYmIG9wdGlvbnMuYWxsb3dIYWxmT3BlbiA9PT0gZmFsc2UpIHRoaXMuYWxsb3dIYWxmT3BlbiA9IGZhbHNlO1xuXG4gIHRoaXMub25jZSgnZW5kJywgb25lbmQpO1xufVxuXG4vLyB0aGUgbm8taGFsZi1vcGVuIGVuZm9yY2VyXG5mdW5jdGlvbiBvbmVuZCgpIHtcbiAgLy8gaWYgd2UgYWxsb3cgaGFsZi1vcGVuIHN0YXRlLCBvciBpZiB0aGUgd3JpdGFibGUgc2lkZSBlbmRlZCxcbiAgLy8gdGhlbiB3ZSdyZSBvay5cbiAgaWYgKHRoaXMuYWxsb3dIYWxmT3BlbiB8fCB0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkKSByZXR1cm47XG5cbiAgLy8gbm8gbW9yZSBkYXRhIGNhbiBiZSB3cml0dGVuLlxuICAvLyBCdXQgYWxsb3cgbW9yZSB3cml0ZXMgdG8gaGFwcGVuIGluIHRoaXMgdGljay5cbiAgcG5hLm5leHRUaWNrKG9uRW5kTlQsIHRoaXMpO1xufVxuXG5mdW5jdGlvbiBvbkVuZE5UKHNlbGYpIHtcbiAgc2VsZi5lbmQoKTtcbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KER1cGxleC5wcm90b3R5cGUsICdkZXN0cm95ZWQnLCB7XG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLl9yZWFkYWJsZVN0YXRlID09PSB1bmRlZmluZWQgfHwgdGhpcy5fd3JpdGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCAmJiB0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZDtcbiAgfSxcbiAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAvLyB3ZSBpZ25vcmUgdGhlIHZhbHVlIGlmIHRoZSBzdHJlYW1cbiAgICAvLyBoYXMgbm90IGJlZW4gaW5pdGlhbGl6ZWQgeWV0XG4gICAgaWYgKHRoaXMuX3JlYWRhYmxlU3RhdGUgPT09IHVuZGVmaW5lZCB8fCB0aGlzLl93cml0YWJsZVN0YXRlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LCB0aGUgdXNlciBpcyBleHBsaWNpdGx5XG4gICAgLy8gbWFuYWdpbmcgZGVzdHJveWVkXG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB2YWx1ZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZCA9IHZhbHVlO1xuICB9XG59KTtcblxuRHVwbGV4LnByb3RvdHlwZS5fZGVzdHJveSA9IGZ1bmN0aW9uIChlcnIsIGNiKSB7XG4gIHRoaXMucHVzaChudWxsKTtcbiAgdGhpcy5lbmQoKTtcblxuICBwbmEubmV4dFRpY2soY2IsIGVycik7XG59O1xuXG5mdW5jdGlvbiBmb3JFYWNoKHhzLCBmKSB7XG4gIGZvciAodmFyIGkgPSAwLCBsID0geHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgZih4c1tpXSwgaSk7XG4gIH1cbn0iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_duplex.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_passthrough.js":
/*!*****************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\n\nmodule.exports = PassThrough;\n\nvar Transform = __webpack_require__(/*! ./_stream_transform */ \"./node_modules/readable-stream/lib/_stream_transform.js\");\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3Bhc3N0aHJvdWdoLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV9wYXNzdGhyb3VnaC5qcz83ODBmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4vLyBhIHBhc3N0aHJvdWdoIHN0cmVhbS5cbi8vIGJhc2ljYWxseSBqdXN0IHRoZSBtb3N0IG1pbmltYWwgc29ydCBvZiBUcmFuc2Zvcm0gc3RyZWFtLlxuLy8gRXZlcnkgd3JpdHRlbiBjaHVuayBnZXRzIG91dHB1dCBhcy1pcy5cblxuJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBhc3NUaHJvdWdoO1xuXG52YXIgVHJhbnNmb3JtID0gcmVxdWlyZSgnLi9fc3RyZWFtX3RyYW5zZm9ybScpO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIHV0aWwgPSByZXF1aXJlKCdjb3JlLXV0aWwtaXMnKTtcbnV0aWwuaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpO1xuLyo8L3JlcGxhY2VtZW50PiovXG5cbnV0aWwuaW5oZXJpdHMoUGFzc1Rocm91Z2gsIFRyYW5zZm9ybSk7XG5cbmZ1bmN0aW9uIFBhc3NUaHJvdWdoKG9wdGlvbnMpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFBhc3NUaHJvdWdoKSkgcmV0dXJuIG5ldyBQYXNzVGhyb3VnaChvcHRpb25zKTtcblxuICBUcmFuc2Zvcm0uY2FsbCh0aGlzLCBvcHRpb25zKTtcbn1cblxuUGFzc1Rocm91Z2gucHJvdG90eXBlLl90cmFuc2Zvcm0gPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nLCBjYikge1xuICBjYihudWxsLCBjaHVuayk7XG59OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_passthrough.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_readable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_readable.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = __webpack_require__(/*! util */ 2);\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = __webpack_require__(/*! ./internal/streams/BufferList */ \"./node_modules/readable-stream/lib/internal/streams/BufferList.js\");\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/readable-stream/lib/internal/streams/destroy.js\");\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_readable.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_transform.js":
/*!***************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_transform.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\n\nmodule.exports = Transform;\n\nvar Duplex = __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_transform.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_writable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_writable.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: __webpack_require__(/*! util-deprecate */ \"./node_modules/util-deprecate/browser.js\")\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/readable-stream/lib/internal/streams/destroy.js\");\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_writable.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/BufferList.js":
/*!*************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/BufferList.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\nvar util = __webpack_require__(/*! util */ 3);\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL0J1ZmZlckxpc3QuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL0J1ZmZlckxpc3QuanM/NWUxYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBCdWZmZXIgPSByZXF1aXJlKCdzYWZlLWJ1ZmZlcicpLkJ1ZmZlcjtcbnZhciB1dGlsID0gcmVxdWlyZSgndXRpbCcpO1xuXG5mdW5jdGlvbiBjb3B5QnVmZmVyKHNyYywgdGFyZ2V0LCBvZmZzZXQpIHtcbiAgc3JjLmNvcHkodGFyZ2V0LCBvZmZzZXQpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQnVmZmVyTGlzdCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQnVmZmVyTGlzdCk7XG5cbiAgICB0aGlzLmhlYWQgPSBudWxsO1xuICAgIHRoaXMudGFpbCA9IG51bGw7XG4gICAgdGhpcy5sZW5ndGggPSAwO1xuICB9XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uIHB1c2godikge1xuICAgIHZhciBlbnRyeSA9IHsgZGF0YTogdiwgbmV4dDogbnVsbCB9O1xuICAgIGlmICh0aGlzLmxlbmd0aCA+IDApIHRoaXMudGFpbC5uZXh0ID0gZW50cnk7ZWxzZSB0aGlzLmhlYWQgPSBlbnRyeTtcbiAgICB0aGlzLnRhaWwgPSBlbnRyeTtcbiAgICArK3RoaXMubGVuZ3RoO1xuICB9O1xuXG4gIEJ1ZmZlckxpc3QucHJvdG90eXBlLnVuc2hpZnQgPSBmdW5jdGlvbiB1bnNoaWZ0KHYpIHtcbiAgICB2YXIgZW50cnkgPSB7IGRhdGE6IHYsIG5leHQ6IHRoaXMuaGVhZCB9O1xuICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMCkgdGhpcy50YWlsID0gZW50cnk7XG4gICAgdGhpcy5oZWFkID0gZW50cnk7XG4gICAgKyt0aGlzLmxlbmd0aDtcbiAgfTtcblxuICBCdWZmZXJMaXN0LnByb3RvdHlwZS5zaGlmdCA9IGZ1bmN0aW9uIHNoaWZ0KCkge1xuICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIHZhciByZXQgPSB0aGlzLmhlYWQuZGF0YTtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDEpIHRoaXMuaGVhZCA9IHRoaXMudGFpbCA9IG51bGw7ZWxzZSB0aGlzLmhlYWQgPSB0aGlzLmhlYWQubmV4dDtcbiAgICAtLXRoaXMubGVuZ3RoO1xuICAgIHJldHVybiByZXQ7XG4gIH07XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUuY2xlYXIgPSBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICB0aGlzLmhlYWQgPSB0aGlzLnRhaWwgPSBudWxsO1xuICAgIHRoaXMubGVuZ3RoID0gMDtcbiAgfTtcblxuICBCdWZmZXJMaXN0LnByb3RvdHlwZS5qb2luID0gZnVuY3Rpb24gam9pbihzKSB7XG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAwKSByZXR1cm4gJyc7XG4gICAgdmFyIHAgPSB0aGlzLmhlYWQ7XG4gICAgdmFyIHJldCA9ICcnICsgcC5kYXRhO1xuICAgIHdoaWxlIChwID0gcC5uZXh0KSB7XG4gICAgICByZXQgKz0gcyArIHAuZGF0YTtcbiAgICB9cmV0dXJuIHJldDtcbiAgfTtcblxuICBCdWZmZXJMaXN0LnByb3RvdHlwZS5jb25jYXQgPSBmdW5jdGlvbiBjb25jYXQobikge1xuICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIEJ1ZmZlci5hbGxvYygwKTtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDEpIHJldHVybiB0aGlzLmhlYWQuZGF0YTtcbiAgICB2YXIgcmV0ID0gQnVmZmVyLmFsbG9jVW5zYWZlKG4gPj4+IDApO1xuICAgIHZhciBwID0gdGhpcy5oZWFkO1xuICAgIHZhciBpID0gMDtcbiAgICB3aGlsZSAocCkge1xuICAgICAgY29weUJ1ZmZlcihwLmRhdGEsIHJldCwgaSk7XG4gICAgICBpICs9IHAuZGF0YS5sZW5ndGg7XG4gICAgICBwID0gcC5uZXh0O1xuICAgIH1cbiAgICByZXR1cm4gcmV0O1xuICB9O1xuXG4gIHJldHVybiBCdWZmZXJMaXN0O1xufSgpO1xuXG5pZiAodXRpbCAmJiB1dGlsLmluc3BlY3QgJiYgdXRpbC5pbnNwZWN0LmN1c3RvbSkge1xuICBtb2R1bGUuZXhwb3J0cy5wcm90b3R5cGVbdXRpbC5pbnNwZWN0LmN1c3RvbV0gPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIG9iaiA9IHV0aWwuaW5zcGVjdCh7IGxlbmd0aDogdGhpcy5sZW5ndGggfSk7XG4gICAgcmV0dXJuIHRoaXMuY29uc3RydWN0b3IubmFtZSArICcgJyArIG9iajtcbiAgfTtcbn0iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/BufferList.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!**********************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL2Rlc3Ryb3kuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL2Rlc3Ryb3kuanM/NDY4MSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qPHJlcGxhY2VtZW50PiovXG5cbnZhciBwbmEgPSByZXF1aXJlKCdwcm9jZXNzLW5leHRpY2stYXJncycpO1xuLyo8L3JlcGxhY2VtZW50PiovXG5cbi8vIHVuZG9jdW1lbnRlZCBjYigpIEFQSSwgbmVlZGVkIGZvciBjb3JlLCBub3QgZm9yIHB1YmxpYyBBUElcbmZ1bmN0aW9uIGRlc3Ryb3koZXJyLCBjYikge1xuICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gIHZhciByZWFkYWJsZURlc3Ryb3llZCA9IHRoaXMuX3JlYWRhYmxlU3RhdGUgJiYgdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQ7XG4gIHZhciB3cml0YWJsZURlc3Ryb3llZCA9IHRoaXMuX3dyaXRhYmxlU3RhdGUgJiYgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQ7XG5cbiAgaWYgKHJlYWRhYmxlRGVzdHJveWVkIHx8IHdyaXRhYmxlRGVzdHJveWVkKSB7XG4gICAgaWYgKGNiKSB7XG4gICAgICBjYihlcnIpO1xuICAgIH0gZWxzZSBpZiAoZXJyICYmICghdGhpcy5fd3JpdGFibGVTdGF0ZSB8fCAhdGhpcy5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQpKSB7XG4gICAgICBwbmEubmV4dFRpY2soZW1pdEVycm9yTlQsIHRoaXMsIGVycik7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLy8gd2Ugc2V0IGRlc3Ryb3llZCB0byB0cnVlIGJlZm9yZSBmaXJpbmcgZXJyb3IgY2FsbGJhY2tzIGluIG9yZGVyXG4gIC8vIHRvIG1ha2UgaXQgcmUtZW50cmFuY2Ugc2FmZSBpbiBjYXNlIGRlc3Ryb3koKSBpcyBjYWxsZWQgd2l0aGluIGNhbGxiYWNrc1xuXG4gIGlmICh0aGlzLl9yZWFkYWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB0cnVlO1xuICB9XG5cbiAgLy8gaWYgdGhpcyBpcyBhIGR1cGxleCBzdHJlYW0gbWFyayB0aGUgd3JpdGFibGUgcGFydCBhcyBkZXN0cm95ZWQgYXMgd2VsbFxuICBpZiAodGhpcy5fd3JpdGFibGVTdGF0ZSkge1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkID0gdHJ1ZTtcbiAgfVxuXG4gIHRoaXMuX2Rlc3Ryb3koZXJyIHx8IG51bGwsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICBpZiAoIWNiICYmIGVycikge1xuICAgICAgcG5hLm5leHRUaWNrKGVtaXRFcnJvck5ULCBfdGhpcywgZXJyKTtcbiAgICAgIGlmIChfdGhpcy5fd3JpdGFibGVTdGF0ZSkge1xuICAgICAgICBfdGhpcy5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQgPSB0cnVlO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoY2IpIHtcbiAgICAgIGNiKGVycik7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gdGhpcztcbn1cblxuZnVuY3Rpb24gdW5kZXN0cm95KCkge1xuICBpZiAodGhpcy5fcmVhZGFibGVTdGF0ZSkge1xuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkID0gZmFsc2U7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5yZWFkaW5nID0gZmFsc2U7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5lbmRlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZW5kRW1pdHRlZCA9IGZhbHNlO1xuICB9XG5cbiAgaWYgKHRoaXMuX3dyaXRhYmxlU3RhdGUpIHtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZCA9IGZhbHNlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kZWQgPSBmYWxzZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmVuZGluZyA9IGZhbHNlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZmluaXNoZWQgPSBmYWxzZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCA9IGZhbHNlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGVtaXRFcnJvck5UKHNlbGYsIGVycikge1xuICBzZWxmLmVtaXQoJ2Vycm9yJywgZXJyKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGRlc3Ryb3k6IGRlc3Ryb3ksXG4gIHVuZGVzdHJveTogdW5kZXN0cm95XG59OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/destroy.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3N0cmVhbS1icm93c2VyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9zdHJlYW0tYnJvd3Nlci5qcz80MjliIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/stream-browser.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/passthrough.js":
/*!*****************************************************!*\
  !*** ./node_modules/readable-stream/passthrough.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./readable */ \"./node_modules/readable-stream/readable-browser.js\").PassThrough\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3Bhc3N0aHJvdWdoLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9wYXNzdGhyb3VnaC5qcz9jMmFlIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9yZWFkYWJsZScpLlBhc3NUaHJvdWdoXG4iXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/passthrough.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/readable-browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/readable-stream/readable-browser.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ \"./node_modules/readable-stream/lib/_stream_readable.js\");\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\nexports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\nexports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ \"./node_modules/readable-stream/lib/_stream_transform.js\");\nexports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ \"./node_modules/readable-stream/lib/_stream_passthrough.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3JlYWRhYmxlLWJyb3dzZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3JlYWRhYmxlLWJyb3dzZXIuanM/ZTM3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX3JlYWRhYmxlLmpzJyk7XG5leHBvcnRzLlN0cmVhbSA9IGV4cG9ydHM7XG5leHBvcnRzLlJlYWRhYmxlID0gZXhwb3J0cztcbmV4cG9ydHMuV3JpdGFibGUgPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX3dyaXRhYmxlLmpzJyk7XG5leHBvcnRzLkR1cGxleCA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fZHVwbGV4LmpzJyk7XG5leHBvcnRzLlRyYW5zZm9ybSA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fdHJhbnNmb3JtLmpzJyk7XG5leHBvcnRzLlBhc3NUaHJvdWdoID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV9wYXNzdGhyb3VnaC5qcycpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/readable-browser.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/transform.js":
/*!***************************************************!*\
  !*** ./node_modules/readable-stream/transform.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./readable */ \"./node_modules/readable-stream/readable-browser.js\").Transform\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3RyYW5zZm9ybS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vdHJhbnNmb3JtLmpzP2QxN2IiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL3JlYWRhYmxlJykuVHJhbnNmb3JtXG4iXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/transform.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/writable-browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/readable-stream/writable-browser.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/_stream_writable.js */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3dyaXRhYmxlLWJyb3dzZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3dyaXRhYmxlLWJyb3dzZXIuanM/MmM2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fd3JpdGFibGUuanMnKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/writable-browser.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/index.js":
/*!*****************************************!*\
  !*** ./node_modules/ripemd160/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar HashBase = __webpack_require__(/*! hash-base */ \"./node_modules/hash-base/index.js\")\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmlwZW1kMTYwL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL3JpcGVtZDE2MC9pbmRleC5qcz9iNWNhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xudmFyIEJ1ZmZlciA9IHJlcXVpcmUoJ2J1ZmZlcicpLkJ1ZmZlclxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxudmFyIEhhc2hCYXNlID0gcmVxdWlyZSgnaGFzaC1iYXNlJylcblxudmFyIEFSUkFZMTYgPSBuZXcgQXJyYXkoMTYpXG5cbnZhciB6bCA9IFtcbiAgMCwgMSwgMiwgMywgNCwgNSwgNiwgNywgOCwgOSwgMTAsIDExLCAxMiwgMTMsIDE0LCAxNSxcbiAgNywgNCwgMTMsIDEsIDEwLCA2LCAxNSwgMywgMTIsIDAsIDksIDUsIDIsIDE0LCAxMSwgOCxcbiAgMywgMTAsIDE0LCA0LCA5LCAxNSwgOCwgMSwgMiwgNywgMCwgNiwgMTMsIDExLCA1LCAxMixcbiAgMSwgOSwgMTEsIDEwLCAwLCA4LCAxMiwgNCwgMTMsIDMsIDcsIDE1LCAxNCwgNSwgNiwgMixcbiAgNCwgMCwgNSwgOSwgNywgMTIsIDIsIDEwLCAxNCwgMSwgMywgOCwgMTEsIDYsIDE1LCAxM1xuXVxuXG52YXIgenIgPSBbXG4gIDUsIDE0LCA3LCAwLCA5LCAyLCAxMSwgNCwgMTMsIDYsIDE1LCA4LCAxLCAxMCwgMywgMTIsXG4gIDYsIDExLCAzLCA3LCAwLCAxMywgNSwgMTAsIDE0LCAxNSwgOCwgMTIsIDQsIDksIDEsIDIsXG4gIDE1LCA1LCAxLCAzLCA3LCAxNCwgNiwgOSwgMTEsIDgsIDEyLCAyLCAxMCwgMCwgNCwgMTMsXG4gIDgsIDYsIDQsIDEsIDMsIDExLCAxNSwgMCwgNSwgMTIsIDIsIDEzLCA5LCA3LCAxMCwgMTQsXG4gIDEyLCAxNSwgMTAsIDQsIDEsIDUsIDgsIDcsIDYsIDIsIDEzLCAxNCwgMCwgMywgOSwgMTFcbl1cblxudmFyIHNsID0gW1xuICAxMSwgMTQsIDE1LCAxMiwgNSwgOCwgNywgOSwgMTEsIDEzLCAxNCwgMTUsIDYsIDcsIDksIDgsXG4gIDcsIDYsIDgsIDEzLCAxMSwgOSwgNywgMTUsIDcsIDEyLCAxNSwgOSwgMTEsIDcsIDEzLCAxMixcbiAgMTEsIDEzLCA2LCA3LCAxNCwgOSwgMTMsIDE1LCAxNCwgOCwgMTMsIDYsIDUsIDEyLCA3LCA1LFxuICAxMSwgMTIsIDE0LCAxNSwgMTQsIDE1LCA5LCA4LCA5LCAxNCwgNSwgNiwgOCwgNiwgNSwgMTIsXG4gIDksIDE1LCA1LCAxMSwgNiwgOCwgMTMsIDEyLCA1LCAxMiwgMTMsIDE0LCAxMSwgOCwgNSwgNlxuXVxuXG52YXIgc3IgPSBbXG4gIDgsIDksIDksIDExLCAxMywgMTUsIDE1LCA1LCA3LCA3LCA4LCAxMSwgMTQsIDE0LCAxMiwgNixcbiAgOSwgMTMsIDE1LCA3LCAxMiwgOCwgOSwgMTEsIDcsIDcsIDEyLCA3LCA2LCAxNSwgMTMsIDExLFxuICA5LCA3LCAxNSwgMTEsIDgsIDYsIDYsIDE0LCAxMiwgMTMsIDUsIDE0LCAxMywgMTMsIDcsIDUsXG4gIDE1LCA1LCA4LCAxMSwgMTQsIDE0LCA2LCAxNCwgNiwgOSwgMTIsIDksIDEyLCA1LCAxNSwgOCxcbiAgOCwgNSwgMTIsIDksIDEyLCA1LCAxNCwgNiwgOCwgMTMsIDYsIDUsIDE1LCAxMywgMTEsIDExXG5dXG5cbnZhciBobCA9IFsweDAwMDAwMDAwLCAweDVhODI3OTk5LCAweDZlZDllYmExLCAweDhmMWJiY2RjLCAweGE5NTNmZDRlXVxudmFyIGhyID0gWzB4NTBhMjhiZTYsIDB4NWM0ZGQxMjQsIDB4NmQ3MDNlZjMsIDB4N2E2ZDc2ZTksIDB4MDAwMDAwMDBdXG5cbmZ1bmN0aW9uIFJJUEVNRDE2MCAoKSB7XG4gIEhhc2hCYXNlLmNhbGwodGhpcywgNjQpXG5cbiAgLy8gc3RhdGVcbiAgdGhpcy5fYSA9IDB4Njc0NTIzMDFcbiAgdGhpcy5fYiA9IDB4ZWZjZGFiODlcbiAgdGhpcy5fYyA9IDB4OThiYWRjZmVcbiAgdGhpcy5fZCA9IDB4MTAzMjU0NzZcbiAgdGhpcy5fZSA9IDB4YzNkMmUxZjBcbn1cblxuaW5oZXJpdHMoUklQRU1EMTYwLCBIYXNoQmFzZSlcblxuUklQRU1EMTYwLnByb3RvdHlwZS5fdXBkYXRlID0gZnVuY3Rpb24gKCkge1xuICB2YXIgd29yZHMgPSBBUlJBWTE2XG4gIGZvciAodmFyIGogPSAwOyBqIDwgMTY7ICsraikgd29yZHNbal0gPSB0aGlzLl9ibG9jay5yZWFkSW50MzJMRShqICogNClcblxuICB2YXIgYWwgPSB0aGlzLl9hIHwgMFxuICB2YXIgYmwgPSB0aGlzLl9iIHwgMFxuICB2YXIgY2wgPSB0aGlzLl9jIHwgMFxuICB2YXIgZGwgPSB0aGlzLl9kIHwgMFxuICB2YXIgZWwgPSB0aGlzLl9lIHwgMFxuXG4gIHZhciBhciA9IHRoaXMuX2EgfCAwXG4gIHZhciBiciA9IHRoaXMuX2IgfCAwXG4gIHZhciBjciA9IHRoaXMuX2MgfCAwXG4gIHZhciBkciA9IHRoaXMuX2QgfCAwXG4gIHZhciBlciA9IHRoaXMuX2UgfCAwXG5cbiAgLy8gY29tcHV0YXRpb25cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCA4MDsgaSArPSAxKSB7XG4gICAgdmFyIHRsXG4gICAgdmFyIHRyXG4gICAgaWYgKGkgPCAxNikge1xuICAgICAgdGwgPSBmbjEoYWwsIGJsLCBjbCwgZGwsIGVsLCB3b3Jkc1t6bFtpXV0sIGhsWzBdLCBzbFtpXSlcbiAgICAgIHRyID0gZm41KGFyLCBiciwgY3IsIGRyLCBlciwgd29yZHNbenJbaV1dLCBoclswXSwgc3JbaV0pXG4gICAgfSBlbHNlIGlmIChpIDwgMzIpIHtcbiAgICAgIHRsID0gZm4yKGFsLCBibCwgY2wsIGRsLCBlbCwgd29yZHNbemxbaV1dLCBobFsxXSwgc2xbaV0pXG4gICAgICB0ciA9IGZuNChhciwgYnIsIGNyLCBkciwgZXIsIHdvcmRzW3pyW2ldXSwgaHJbMV0sIHNyW2ldKVxuICAgIH0gZWxzZSBpZiAoaSA8IDQ4KSB7XG4gICAgICB0bCA9IGZuMyhhbCwgYmwsIGNsLCBkbCwgZWwsIHdvcmRzW3psW2ldXSwgaGxbMl0sIHNsW2ldKVxuICAgICAgdHIgPSBmbjMoYXIsIGJyLCBjciwgZHIsIGVyLCB3b3Jkc1t6cltpXV0sIGhyWzJdLCBzcltpXSlcbiAgICB9IGVsc2UgaWYgKGkgPCA2NCkge1xuICAgICAgdGwgPSBmbjQoYWwsIGJsLCBjbCwgZGwsIGVsLCB3b3Jkc1t6bFtpXV0sIGhsWzNdLCBzbFtpXSlcbiAgICAgIHRyID0gZm4yKGFyLCBiciwgY3IsIGRyLCBlciwgd29yZHNbenJbaV1dLCBoclszXSwgc3JbaV0pXG4gICAgfSBlbHNlIHsgLy8gaWYgKGk8ODApIHtcbiAgICAgIHRsID0gZm41KGFsLCBibCwgY2wsIGRsLCBlbCwgd29yZHNbemxbaV1dLCBobFs0XSwgc2xbaV0pXG4gICAgICB0ciA9IGZuMShhciwgYnIsIGNyLCBkciwgZXIsIHdvcmRzW3pyW2ldXSwgaHJbNF0sIHNyW2ldKVxuICAgIH1cblxuICAgIGFsID0gZWxcbiAgICBlbCA9IGRsXG4gICAgZGwgPSByb3RsKGNsLCAxMClcbiAgICBjbCA9IGJsXG4gICAgYmwgPSB0bFxuXG4gICAgYXIgPSBlclxuICAgIGVyID0gZHJcbiAgICBkciA9IHJvdGwoY3IsIDEwKVxuICAgIGNyID0gYnJcbiAgICBiciA9IHRyXG4gIH1cblxuICAvLyB1cGRhdGUgc3RhdGVcbiAgdmFyIHQgPSAodGhpcy5fYiArIGNsICsgZHIpIHwgMFxuICB0aGlzLl9iID0gKHRoaXMuX2MgKyBkbCArIGVyKSB8IDBcbiAgdGhpcy5fYyA9ICh0aGlzLl9kICsgZWwgKyBhcikgfCAwXG4gIHRoaXMuX2QgPSAodGhpcy5fZSArIGFsICsgYnIpIHwgMFxuICB0aGlzLl9lID0gKHRoaXMuX2EgKyBibCArIGNyKSB8IDBcbiAgdGhpcy5fYSA9IHRcbn1cblxuUklQRU1EMTYwLnByb3RvdHlwZS5fZGlnZXN0ID0gZnVuY3Rpb24gKCkge1xuICAvLyBjcmVhdGUgcGFkZGluZyBhbmQgaGFuZGxlIGJsb2Nrc1xuICB0aGlzLl9ibG9ja1t0aGlzLl9ibG9ja09mZnNldCsrXSA9IDB4ODBcbiAgaWYgKHRoaXMuX2Jsb2NrT2Zmc2V0ID4gNTYpIHtcbiAgICB0aGlzLl9ibG9jay5maWxsKDAsIHRoaXMuX2Jsb2NrT2Zmc2V0LCA2NClcbiAgICB0aGlzLl91cGRhdGUoKVxuICAgIHRoaXMuX2Jsb2NrT2Zmc2V0ID0gMFxuICB9XG5cbiAgdGhpcy5fYmxvY2suZmlsbCgwLCB0aGlzLl9ibG9ja09mZnNldCwgNTYpXG4gIHRoaXMuX2Jsb2NrLndyaXRlVUludDMyTEUodGhpcy5fbGVuZ3RoWzBdLCA1NilcbiAgdGhpcy5fYmxvY2sud3JpdGVVSW50MzJMRSh0aGlzLl9sZW5ndGhbMV0sIDYwKVxuICB0aGlzLl91cGRhdGUoKVxuXG4gIC8vIHByb2R1Y2UgcmVzdWx0XG4gIHZhciBidWZmZXIgPSBCdWZmZXIuYWxsb2MgPyBCdWZmZXIuYWxsb2MoMjApIDogbmV3IEJ1ZmZlcigyMClcbiAgYnVmZmVyLndyaXRlSW50MzJMRSh0aGlzLl9hLCAwKVxuICBidWZmZXIud3JpdGVJbnQzMkxFKHRoaXMuX2IsIDQpXG4gIGJ1ZmZlci53cml0ZUludDMyTEUodGhpcy5fYywgOClcbiAgYnVmZmVyLndyaXRlSW50MzJMRSh0aGlzLl9kLCAxMilcbiAgYnVmZmVyLndyaXRlSW50MzJMRSh0aGlzLl9lLCAxNilcbiAgcmV0dXJuIGJ1ZmZlclxufVxuXG5mdW5jdGlvbiByb3RsICh4LCBuKSB7XG4gIHJldHVybiAoeCA8PCBuKSB8ICh4ID4+PiAoMzIgLSBuKSlcbn1cblxuZnVuY3Rpb24gZm4xIChhLCBiLCBjLCBkLCBlLCBtLCBrLCBzKSB7XG4gIHJldHVybiAocm90bCgoYSArIChiIF4gYyBeIGQpICsgbSArIGspIHwgMCwgcykgKyBlKSB8IDBcbn1cblxuZnVuY3Rpb24gZm4yIChhLCBiLCBjLCBkLCBlLCBtLCBrLCBzKSB7XG4gIHJldHVybiAocm90bCgoYSArICgoYiAmIGMpIHwgKCh+YikgJiBkKSkgKyBtICsgaykgfCAwLCBzKSArIGUpIHwgMFxufVxuXG5mdW5jdGlvbiBmbjMgKGEsIGIsIGMsIGQsIGUsIG0sIGssIHMpIHtcbiAgcmV0dXJuIChyb3RsKChhICsgKChiIHwgKH5jKSkgXiBkKSArIG0gKyBrKSB8IDAsIHMpICsgZSkgfCAwXG59XG5cbmZ1bmN0aW9uIGZuNCAoYSwgYiwgYywgZCwgZSwgbSwgaywgcykge1xuICByZXR1cm4gKHJvdGwoKGEgKyAoKGIgJiBkKSB8IChjICYgKH5kKSkpICsgbSArIGspIHwgMCwgcykgKyBlKSB8IDBcbn1cblxuZnVuY3Rpb24gZm41IChhLCBiLCBjLCBkLCBlLCBtLCBrLCBzKSB7XG4gIHJldHVybiAocm90bCgoYSArIChiIF4gKGMgfCAofmQpKSkgKyBtICsgaykgfCAwLCBzKSArIGUpIHwgMFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFJJUEVNRDE2MFxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/index.js\n");

/***/ }),

/***/ "./node_modules/safe-buffer/index.js":
/*!*******************************************!*\
  !*** ./node_modules/safe-buffer/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2FmZS1idWZmZXIvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvc2FmZS1idWZmZXIvaW5kZXguanM/ODcwNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBub2RlL25vLWRlcHJlY2F0ZWQtYXBpICovXG52YXIgYnVmZmVyID0gcmVxdWlyZSgnYnVmZmVyJylcbnZhciBCdWZmZXIgPSBidWZmZXIuQnVmZmVyXG5cbi8vIGFsdGVybmF0aXZlIHRvIHVzaW5nIE9iamVjdC5rZXlzIGZvciBvbGQgYnJvd3NlcnNcbmZ1bmN0aW9uIGNvcHlQcm9wcyAoc3JjLCBkc3QpIHtcbiAgZm9yICh2YXIga2V5IGluIHNyYykge1xuICAgIGRzdFtrZXldID0gc3JjW2tleV1cbiAgfVxufVxuaWYgKEJ1ZmZlci5mcm9tICYmIEJ1ZmZlci5hbGxvYyAmJiBCdWZmZXIuYWxsb2NVbnNhZmUgJiYgQnVmZmVyLmFsbG9jVW5zYWZlU2xvdykge1xuICBtb2R1bGUuZXhwb3J0cyA9IGJ1ZmZlclxufSBlbHNlIHtcbiAgLy8gQ29weSBwcm9wZXJ0aWVzIGZyb20gcmVxdWlyZSgnYnVmZmVyJylcbiAgY29weVByb3BzKGJ1ZmZlciwgZXhwb3J0cylcbiAgZXhwb3J0cy5CdWZmZXIgPSBTYWZlQnVmZmVyXG59XG5cbmZ1bmN0aW9uIFNhZmVCdWZmZXIgKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7XG4gIHJldHVybiBCdWZmZXIoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpXG59XG5cbi8vIENvcHkgc3RhdGljIG1ldGhvZHMgZnJvbSBCdWZmZXJcbmNvcHlQcm9wcyhCdWZmZXIsIFNhZmVCdWZmZXIpXG5cblNhZmVCdWZmZXIuZnJvbSA9IGZ1bmN0aW9uIChhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aCkge1xuICBpZiAodHlwZW9mIGFyZyA9PT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IG5vdCBiZSBhIG51bWJlcicpXG4gIH1cbiAgcmV0dXJuIEJ1ZmZlcihhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcbn1cblxuU2FmZUJ1ZmZlci5hbGxvYyA9IGZ1bmN0aW9uIChzaXplLCBmaWxsLCBlbmNvZGluZykge1xuICBpZiAodHlwZW9mIHNpemUgIT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlcicpXG4gIH1cbiAgdmFyIGJ1ZiA9IEJ1ZmZlcihzaXplKVxuICBpZiAoZmlsbCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgaWYgKHR5cGVvZiBlbmNvZGluZyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGJ1Zi5maWxsKGZpbGwsIGVuY29kaW5nKVxuICAgIH0gZWxzZSB7XG4gICAgICBidWYuZmlsbChmaWxsKVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBidWYuZmlsbCgwKVxuICB9XG4gIHJldHVybiBidWZcbn1cblxuU2FmZUJ1ZmZlci5hbGxvY1Vuc2FmZSA9IGZ1bmN0aW9uIChzaXplKSB7XG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJylcbiAgfVxuICByZXR1cm4gQnVmZmVyKHNpemUpXG59XG5cblNhZmVCdWZmZXIuYWxsb2NVbnNhZmVTbG93ID0gZnVuY3Rpb24gKHNpemUpIHtcbiAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKVxuICB9XG4gIHJldHVybiBidWZmZXIuU2xvd0J1ZmZlcihzaXplKVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/safe-buffer/index.js\n");

/***/ }),

/***/ "./node_modules/semaphore/lib/semaphore.js":
/*!*************************************************!*\
  !*** ./node_modules/semaphore/lib/semaphore.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {;(function(global) {\n\n'use strict';\n\nfunction semaphore(capacity) {\n\tvar semaphore = {\n\t\tcapacity: capacity || 1,\n\t\tcurrent: 0,\n\t\tqueue: [],\n\t\tfirstHere: false,\n\n\t\ttake: function() {\n\t\t\tif (semaphore.firstHere === false) {\n        \t\t\tsemaphore.current++;\n        \t\t\tsemaphore.firstHere = true;\n        \t\t\tvar isFirst = 1;\n      \t\t\t} else {\n        \t\t\tvar isFirst = 0;\n      \t\t\t}\n\t\t\tvar item = { n: 1 };\n\n\t\t\tif (typeof arguments[0] == 'function') {\n\t\t\t\titem.task = arguments[0];\n\t\t\t} else {\n\t\t\t\titem.n = arguments[0];\n\t\t\t}\n\n\t\t\tif (arguments.length >= 2)  {\n\t\t\t\tif (typeof arguments[1] == 'function') item.task = arguments[1];\n\t\t\t\telse item.n = arguments[1];\n\t\t\t}\n\n\t\t\tvar task = item.task;\n\t\t\titem.task = function() { task(semaphore.leave); };\n\n\t\t\tif (semaphore.current + item.n - isFirst > semaphore.capacity) {\n        \t\t\tif (isFirst === 1) {\n        \t\t\t\tsemaphore.current--;\n        \t\t\t\tsemaphore.firstHere = false;\n        \t\t\t}\n\t\t\t\treturn semaphore.queue.push(item);\n\t\t\t}\n\n\t\t\tsemaphore.current += item.n - isFirst;\n\t\t\titem.task(semaphore.leave);\n      \t\t\tif (isFirst === 1) semaphore.firstHere = false;\n\t\t},\n\n\t\tleave: function(n) {\n\t\t\tn = n || 1;\n\n\t\t\tsemaphore.current -= n;\n\n\t\t\tif (!semaphore.queue.length) {\n\t\t\t\tif (semaphore.current < 0) {\n\t\t\t\t\tthrow new Error('leave called too many times.');\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar item = semaphore.queue[0];\n\n\t\t\tif (item.n + semaphore.current > semaphore.capacity) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsemaphore.queue.shift();\n\t\t\tsemaphore.current += item.n;\n\n\t\t\tif (typeof process != 'undefined' && process && typeof process.nextTick == 'function') {\n\t\t\t\t// node.js and the like\n\t\t\t\tprocess.nextTick(item.task);\n\t\t\t} else {\n\t\t\t\tsetTimeout(item.task,0);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn semaphore;\n};\n\nif (true) {\n    // node export\n    module.exports = semaphore;\n} else {}\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VtYXBob3JlL2xpYi9zZW1hcGhvcmUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvc2VtYXBob3JlL2xpYi9zZW1hcGhvcmUuanM/YTFkOSJdLCJzb3VyY2VzQ29udGVudCI6WyI7KGZ1bmN0aW9uKGdsb2JhbCkge1xuXG4ndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIHNlbWFwaG9yZShjYXBhY2l0eSkge1xuXHR2YXIgc2VtYXBob3JlID0ge1xuXHRcdGNhcGFjaXR5OiBjYXBhY2l0eSB8fCAxLFxuXHRcdGN1cnJlbnQ6IDAsXG5cdFx0cXVldWU6IFtdLFxuXHRcdGZpcnN0SGVyZTogZmFsc2UsXG5cblx0XHR0YWtlOiBmdW5jdGlvbigpIHtcblx0XHRcdGlmIChzZW1hcGhvcmUuZmlyc3RIZXJlID09PSBmYWxzZSkge1xuICAgICAgICBcdFx0XHRzZW1hcGhvcmUuY3VycmVudCsrO1xuICAgICAgICBcdFx0XHRzZW1hcGhvcmUuZmlyc3RIZXJlID0gdHJ1ZTtcbiAgICAgICAgXHRcdFx0dmFyIGlzRmlyc3QgPSAxO1xuICAgICAgXHRcdFx0fSBlbHNlIHtcbiAgICAgICAgXHRcdFx0dmFyIGlzRmlyc3QgPSAwO1xuICAgICAgXHRcdFx0fVxuXHRcdFx0dmFyIGl0ZW0gPSB7IG46IDEgfTtcblxuXHRcdFx0aWYgKHR5cGVvZiBhcmd1bWVudHNbMF0gPT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0XHRpdGVtLnRhc2sgPSBhcmd1bWVudHNbMF07XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRpdGVtLm4gPSBhcmd1bWVudHNbMF07XG5cdFx0XHR9XG5cblx0XHRcdGlmIChhcmd1bWVudHMubGVuZ3RoID49IDIpICB7XG5cdFx0XHRcdGlmICh0eXBlb2YgYXJndW1lbnRzWzFdID09ICdmdW5jdGlvbicpIGl0ZW0udGFzayA9IGFyZ3VtZW50c1sxXTtcblx0XHRcdFx0ZWxzZSBpdGVtLm4gPSBhcmd1bWVudHNbMV07XG5cdFx0XHR9XG5cblx0XHRcdHZhciB0YXNrID0gaXRlbS50YXNrO1xuXHRcdFx0aXRlbS50YXNrID0gZnVuY3Rpb24oKSB7IHRhc2soc2VtYXBob3JlLmxlYXZlKTsgfTtcblxuXHRcdFx0aWYgKHNlbWFwaG9yZS5jdXJyZW50ICsgaXRlbS5uIC0gaXNGaXJzdCA+IHNlbWFwaG9yZS5jYXBhY2l0eSkge1xuICAgICAgICBcdFx0XHRpZiAoaXNGaXJzdCA9PT0gMSkge1xuICAgICAgICBcdFx0XHRcdHNlbWFwaG9yZS5jdXJyZW50LS07XG4gICAgICAgIFx0XHRcdFx0c2VtYXBob3JlLmZpcnN0SGVyZSA9IGZhbHNlO1xuICAgICAgICBcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBzZW1hcGhvcmUucXVldWUucHVzaChpdGVtKTtcblx0XHRcdH1cblxuXHRcdFx0c2VtYXBob3JlLmN1cnJlbnQgKz0gaXRlbS5uIC0gaXNGaXJzdDtcblx0XHRcdGl0ZW0udGFzayhzZW1hcGhvcmUubGVhdmUpO1xuICAgICAgXHRcdFx0aWYgKGlzRmlyc3QgPT09IDEpIHNlbWFwaG9yZS5maXJzdEhlcmUgPSBmYWxzZTtcblx0XHR9LFxuXG5cdFx0bGVhdmU6IGZ1bmN0aW9uKG4pIHtcblx0XHRcdG4gPSBuIHx8IDE7XG5cblx0XHRcdHNlbWFwaG9yZS5jdXJyZW50IC09IG47XG5cblx0XHRcdGlmICghc2VtYXBob3JlLnF1ZXVlLmxlbmd0aCkge1xuXHRcdFx0XHRpZiAoc2VtYXBob3JlLmN1cnJlbnQgPCAwKSB7XG5cdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCdsZWF2ZSBjYWxsZWQgdG9vIG1hbnkgdGltZXMuJyk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHZhciBpdGVtID0gc2VtYXBob3JlLnF1ZXVlWzBdO1xuXG5cdFx0XHRpZiAoaXRlbS5uICsgc2VtYXBob3JlLmN1cnJlbnQgPiBzZW1hcGhvcmUuY2FwYWNpdHkpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRzZW1hcGhvcmUucXVldWUuc2hpZnQoKTtcblx0XHRcdHNlbWFwaG9yZS5jdXJyZW50ICs9IGl0ZW0ubjtcblxuXHRcdFx0aWYgKHR5cGVvZiBwcm9jZXNzICE9ICd1bmRlZmluZWQnICYmIHByb2Nlc3MgJiYgdHlwZW9mIHByb2Nlc3MubmV4dFRpY2sgPT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0XHQvLyBub2RlLmpzIGFuZCB0aGUgbGlrZVxuXHRcdFx0XHRwcm9jZXNzLm5leHRUaWNrKGl0ZW0udGFzayk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRzZXRUaW1lb3V0KGl0ZW0udGFzaywwKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cblx0cmV0dXJuIHNlbWFwaG9yZTtcbn07XG5cbmlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHtcbiAgICAvLyBub2RlIGV4cG9ydFxuICAgIG1vZHVsZS5leHBvcnRzID0gc2VtYXBob3JlO1xufSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICAvLyBhbWQgZXhwb3J0XG4gICAgZGVmaW5lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHNlbWFwaG9yZTtcbiAgICB9KTtcbn0gZWxzZSB7XG4gICAgLy8gYnJvd3NlciBnbG9iYWxcbiAgICBnbG9iYWwuc2VtYXBob3JlID0gc2VtYXBob3JlO1xufVxufSh0aGlzKSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FRQTtBQUNBOztBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/semaphore/lib/semaphore.js\n");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/setimmediate/setImmediate.js\n");

/***/ }),

/***/ "./node_modules/sha.js/hash.js":
/*!*************************************!*\
  !*** ./node_modules/sha.js/hash.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhLmpzL2hhc2guanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvc2hhLmpzL2hhc2guanM/YjY3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXJcblxuLy8gcHJvdG90eXBlIGNsYXNzIGZvciBoYXNoIGZ1bmN0aW9uc1xuZnVuY3Rpb24gSGFzaCAoYmxvY2tTaXplLCBmaW5hbFNpemUpIHtcbiAgdGhpcy5fYmxvY2sgPSBCdWZmZXIuYWxsb2MoYmxvY2tTaXplKVxuICB0aGlzLl9maW5hbFNpemUgPSBmaW5hbFNpemVcbiAgdGhpcy5fYmxvY2tTaXplID0gYmxvY2tTaXplXG4gIHRoaXMuX2xlbiA9IDBcbn1cblxuSGFzaC5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gKGRhdGEsIGVuYykge1xuICBpZiAodHlwZW9mIGRhdGEgPT09ICdzdHJpbmcnKSB7XG4gICAgZW5jID0gZW5jIHx8ICd1dGY4J1xuICAgIGRhdGEgPSBCdWZmZXIuZnJvbShkYXRhLCBlbmMpXG4gIH1cblxuICB2YXIgYmxvY2sgPSB0aGlzLl9ibG9ja1xuICB2YXIgYmxvY2tTaXplID0gdGhpcy5fYmxvY2tTaXplXG4gIHZhciBsZW5ndGggPSBkYXRhLmxlbmd0aFxuICB2YXIgYWNjdW0gPSB0aGlzLl9sZW5cblxuICBmb3IgKHZhciBvZmZzZXQgPSAwOyBvZmZzZXQgPCBsZW5ndGg7KSB7XG4gICAgdmFyIGFzc2lnbmVkID0gYWNjdW0gJSBibG9ja1NpemVcbiAgICB2YXIgcmVtYWluZGVyID0gTWF0aC5taW4obGVuZ3RoIC0gb2Zmc2V0LCBibG9ja1NpemUgLSBhc3NpZ25lZClcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVtYWluZGVyOyBpKyspIHtcbiAgICAgIGJsb2NrW2Fzc2lnbmVkICsgaV0gPSBkYXRhW29mZnNldCArIGldXG4gICAgfVxuXG4gICAgYWNjdW0gKz0gcmVtYWluZGVyXG4gICAgb2Zmc2V0ICs9IHJlbWFpbmRlclxuXG4gICAgaWYgKChhY2N1bSAlIGJsb2NrU2l6ZSkgPT09IDApIHtcbiAgICAgIHRoaXMuX3VwZGF0ZShibG9jaylcbiAgICB9XG4gIH1cblxuICB0aGlzLl9sZW4gKz0gbGVuZ3RoXG4gIHJldHVybiB0aGlzXG59XG5cbkhhc2gucHJvdG90eXBlLmRpZ2VzdCA9IGZ1bmN0aW9uIChlbmMpIHtcbiAgdmFyIHJlbSA9IHRoaXMuX2xlbiAlIHRoaXMuX2Jsb2NrU2l6ZVxuXG4gIHRoaXMuX2Jsb2NrW3JlbV0gPSAweDgwXG5cbiAgLy8gemVybyAocmVtICsgMSkgdHJhaWxpbmcgYml0cywgd2hlcmUgKHJlbSArIDEpIGlzIHRoZSBzbWFsbGVzdFxuICAvLyBub24tbmVnYXRpdmUgc29sdXRpb24gdG8gdGhlIGVxdWF0aW9uIChsZW5ndGggKyAxICsgKHJlbSArIDEpKSA9PT0gZmluYWxTaXplIG1vZCBibG9ja1NpemVcbiAgdGhpcy5fYmxvY2suZmlsbCgwLCByZW0gKyAxKVxuXG4gIGlmIChyZW0gPj0gdGhpcy5fZmluYWxTaXplKSB7XG4gICAgdGhpcy5fdXBkYXRlKHRoaXMuX2Jsb2NrKVxuICAgIHRoaXMuX2Jsb2NrLmZpbGwoMClcbiAgfVxuXG4gIHZhciBiaXRzID0gdGhpcy5fbGVuICogOFxuXG4gIC8vIHVpbnQzMlxuICBpZiAoYml0cyA8PSAweGZmZmZmZmZmKSB7XG4gICAgdGhpcy5fYmxvY2sud3JpdGVVSW50MzJCRShiaXRzLCB0aGlzLl9ibG9ja1NpemUgLSA0KVxuXG4gIC8vIHVpbnQ2NFxuICB9IGVsc2Uge1xuICAgIHZhciBsb3dCaXRzID0gKGJpdHMgJiAweGZmZmZmZmZmKSA+Pj4gMFxuICAgIHZhciBoaWdoQml0cyA9IChiaXRzIC0gbG93Qml0cykgLyAweDEwMDAwMDAwMFxuXG4gICAgdGhpcy5fYmxvY2sud3JpdGVVSW50MzJCRShoaWdoQml0cywgdGhpcy5fYmxvY2tTaXplIC0gOClcbiAgICB0aGlzLl9ibG9jay53cml0ZVVJbnQzMkJFKGxvd0JpdHMsIHRoaXMuX2Jsb2NrU2l6ZSAtIDQpXG4gIH1cblxuICB0aGlzLl91cGRhdGUodGhpcy5fYmxvY2spXG4gIHZhciBoYXNoID0gdGhpcy5faGFzaCgpXG5cbiAgcmV0dXJuIGVuYyA/IGhhc2gudG9TdHJpbmcoZW5jKSA6IGhhc2hcbn1cblxuSGFzaC5wcm90b3R5cGUuX3VwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdfdXBkYXRlIG11c3QgYmUgaW1wbGVtZW50ZWQgYnkgc3ViY2xhc3MnKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEhhc2hcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/sha.js/hash.js\n");

/***/ }),

/***/ "./node_modules/sha.js/index.js":
/*!**************************************!*\
  !*** ./node_modules/sha.js/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = __webpack_require__(/*! ./sha */ \"./node_modules/sha.js/sha.js\")\nexports.sha1 = __webpack_require__(/*! ./sha1 */ \"./node_modules/sha.js/sha1.js\")\nexports.sha224 = __webpack_require__(/*! ./sha224 */ \"./node_modules/sha.js/sha224.js\")\nexports.sha256 = __webpack_require__(/*! ./sha256 */ \"./node_modules/sha.js/sha256.js\")\nexports.sha384 = __webpack_require__(/*! ./sha384 */ \"./node_modules/sha.js/sha384.js\")\nexports.sha512 = __webpack_require__(/*! ./sha512 */ \"./node_modules/sha.js/sha512.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhLmpzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL3NoYS5qcy9pbmRleC5qcz82OWYyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBTSEEgKGFsZ29yaXRobSkge1xuICBhbGdvcml0aG0gPSBhbGdvcml0aG0udG9Mb3dlckNhc2UoKVxuXG4gIHZhciBBbGdvcml0aG0gPSBleHBvcnRzW2FsZ29yaXRobV1cbiAgaWYgKCFBbGdvcml0aG0pIHRocm93IG5ldyBFcnJvcihhbGdvcml0aG0gKyAnIGlzIG5vdCBzdXBwb3J0ZWQgKHdlIGFjY2VwdCBwdWxsIHJlcXVlc3RzKScpXG5cbiAgcmV0dXJuIG5ldyBBbGdvcml0aG0oKVxufVxuXG5leHBvcnRzLnNoYSA9IHJlcXVpcmUoJy4vc2hhJylcbmV4cG9ydHMuc2hhMSA9IHJlcXVpcmUoJy4vc2hhMScpXG5leHBvcnRzLnNoYTIyNCA9IHJlcXVpcmUoJy4vc2hhMjI0JylcbmV4cG9ydHMuc2hhMjU2ID0gcmVxdWlyZSgnLi9zaGEyNTYnKVxuZXhwb3J0cy5zaGEzODQgPSByZXF1aXJlKCcuL3NoYTM4NCcpXG5leHBvcnRzLnNoYTUxMiA9IHJlcXVpcmUoJy4vc2hhNTEyJylcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/sha.js/index.js\n");

/***/ }),

/***/ "./node_modules/sha.js/sha.js":
/*!************************************!*\
  !*** ./node_modules/sha.js/sha.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhLmpzL3NoYS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9zaGEuanMvc2hhLmpzPzA4N2YiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIEEgSmF2YVNjcmlwdCBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgU2VjdXJlIEhhc2ggQWxnb3JpdGhtLCBTSEEtMCwgYXMgZGVmaW5lZFxuICogaW4gRklQUyBQVUIgMTgwLTFcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgZGVyaXZlZCBmcm9tIHNoYTEuanMgb2YgdGhlIHNhbWUgcmVwb3NpdG9yeS5cbiAqIFRoZSBkaWZmZXJlbmNlIGJldHdlZW4gU0hBLTAgYW5kIFNIQS0xIGlzIGp1c3QgYSBiaXR3aXNlIHJvdGF0ZSBsZWZ0XG4gKiBvcGVyYXRpb24gd2FzIGFkZGVkLlxuICovXG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbnZhciBIYXNoID0gcmVxdWlyZSgnLi9oYXNoJylcbnZhciBCdWZmZXIgPSByZXF1aXJlKCdzYWZlLWJ1ZmZlcicpLkJ1ZmZlclxuXG52YXIgSyA9IFtcbiAgMHg1YTgyNzk5OSwgMHg2ZWQ5ZWJhMSwgMHg4ZjFiYmNkYyB8IDAsIDB4Y2E2MmMxZDYgfCAwXG5dXG5cbnZhciBXID0gbmV3IEFycmF5KDgwKVxuXG5mdW5jdGlvbiBTaGEgKCkge1xuICB0aGlzLmluaXQoKVxuICB0aGlzLl93ID0gV1xuXG4gIEhhc2guY2FsbCh0aGlzLCA2NCwgNTYpXG59XG5cbmluaGVyaXRzKFNoYSwgSGFzaClcblxuU2hhLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLl9hID0gMHg2NzQ1MjMwMVxuICB0aGlzLl9iID0gMHhlZmNkYWI4OVxuICB0aGlzLl9jID0gMHg5OGJhZGNmZVxuICB0aGlzLl9kID0gMHgxMDMyNTQ3NlxuICB0aGlzLl9lID0gMHhjM2QyZTFmMFxuXG4gIHJldHVybiB0aGlzXG59XG5cbmZ1bmN0aW9uIHJvdGw1IChudW0pIHtcbiAgcmV0dXJuIChudW0gPDwgNSkgfCAobnVtID4+PiAyNylcbn1cblxuZnVuY3Rpb24gcm90bDMwIChudW0pIHtcbiAgcmV0dXJuIChudW0gPDwgMzApIHwgKG51bSA+Pj4gMilcbn1cblxuZnVuY3Rpb24gZnQgKHMsIGIsIGMsIGQpIHtcbiAgaWYgKHMgPT09IDApIHJldHVybiAoYiAmIGMpIHwgKCh+YikgJiBkKVxuICBpZiAocyA9PT0gMikgcmV0dXJuIChiICYgYykgfCAoYiAmIGQpIHwgKGMgJiBkKVxuICByZXR1cm4gYiBeIGMgXiBkXG59XG5cblNoYS5wcm90b3R5cGUuX3VwZGF0ZSA9IGZ1bmN0aW9uIChNKSB7XG4gIHZhciBXID0gdGhpcy5fd1xuXG4gIHZhciBhID0gdGhpcy5fYSB8IDBcbiAgdmFyIGIgPSB0aGlzLl9iIHwgMFxuICB2YXIgYyA9IHRoaXMuX2MgfCAwXG4gIHZhciBkID0gdGhpcy5fZCB8IDBcbiAgdmFyIGUgPSB0aGlzLl9lIHwgMFxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgMTY7ICsraSkgV1tpXSA9IE0ucmVhZEludDMyQkUoaSAqIDQpXG4gIGZvciAoOyBpIDwgODA7ICsraSkgV1tpXSA9IFdbaSAtIDNdIF4gV1tpIC0gOF0gXiBXW2kgLSAxNF0gXiBXW2kgLSAxNl1cblxuICBmb3IgKHZhciBqID0gMDsgaiA8IDgwOyArK2opIHtcbiAgICB2YXIgcyA9IH5+KGogLyAyMClcbiAgICB2YXIgdCA9IChyb3RsNShhKSArIGZ0KHMsIGIsIGMsIGQpICsgZSArIFdbal0gKyBLW3NdKSB8IDBcblxuICAgIGUgPSBkXG4gICAgZCA9IGNcbiAgICBjID0gcm90bDMwKGIpXG4gICAgYiA9IGFcbiAgICBhID0gdFxuICB9XG5cbiAgdGhpcy5fYSA9IChhICsgdGhpcy5fYSkgfCAwXG4gIHRoaXMuX2IgPSAoYiArIHRoaXMuX2IpIHwgMFxuICB0aGlzLl9jID0gKGMgKyB0aGlzLl9jKSB8IDBcbiAgdGhpcy5fZCA9IChkICsgdGhpcy5fZCkgfCAwXG4gIHRoaXMuX2UgPSAoZSArIHRoaXMuX2UpIHwgMFxufVxuXG5TaGEucHJvdG90eXBlLl9oYXNoID0gZnVuY3Rpb24gKCkge1xuICB2YXIgSCA9IEJ1ZmZlci5hbGxvY1Vuc2FmZSgyMClcblxuICBILndyaXRlSW50MzJCRSh0aGlzLl9hIHwgMCwgMClcbiAgSC53cml0ZUludDMyQkUodGhpcy5fYiB8IDAsIDQpXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2MgfCAwLCA4KVxuICBILndyaXRlSW50MzJCRSh0aGlzLl9kIHwgMCwgMTIpXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2UgfCAwLCAxNilcblxuICByZXR1cm4gSFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFNoYVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/sha.js/sha.js\n");

/***/ }),

/***/ "./node_modules/sha.js/sha1.js":
/*!*************************************!*\
  !*** ./node_modules/sha.js/sha1.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhLmpzL3NoYTEuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvc2hhLmpzL3NoYTEuanM/N2U3OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQSBKYXZhU2NyaXB0IGltcGxlbWVudGF0aW9uIG9mIHRoZSBTZWN1cmUgSGFzaCBBbGdvcml0aG0sIFNIQS0xLCBhcyBkZWZpbmVkXG4gKiBpbiBGSVBTIFBVQiAxODAtMVxuICogVmVyc2lvbiAyLjFhIENvcHlyaWdodCBQYXVsIEpvaG5zdG9uIDIwMDAgLSAyMDAyLlxuICogT3RoZXIgY29udHJpYnV0b3JzOiBHcmVnIEhvbHQsIEFuZHJldyBLZXBlcnQsIFlkbmFyLCBMb3N0aW5ldFxuICogRGlzdHJpYnV0ZWQgdW5kZXIgdGhlIEJTRCBMaWNlbnNlXG4gKiBTZWUgaHR0cDovL3BhamhvbWUub3JnLnVrL2NyeXB0L21kNSBmb3IgZGV0YWlscy5cbiAqL1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG52YXIgSGFzaCA9IHJlcXVpcmUoJy4vaGFzaCcpXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXJcblxudmFyIEsgPSBbXG4gIDB4NWE4Mjc5OTksIDB4NmVkOWViYTEsIDB4OGYxYmJjZGMgfCAwLCAweGNhNjJjMWQ2IHwgMFxuXVxuXG52YXIgVyA9IG5ldyBBcnJheSg4MClcblxuZnVuY3Rpb24gU2hhMSAoKSB7XG4gIHRoaXMuaW5pdCgpXG4gIHRoaXMuX3cgPSBXXG5cbiAgSGFzaC5jYWxsKHRoaXMsIDY0LCA1Nilcbn1cblxuaW5oZXJpdHMoU2hhMSwgSGFzaClcblxuU2hhMS5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5fYSA9IDB4Njc0NTIzMDFcbiAgdGhpcy5fYiA9IDB4ZWZjZGFiODlcbiAgdGhpcy5fYyA9IDB4OThiYWRjZmVcbiAgdGhpcy5fZCA9IDB4MTAzMjU0NzZcbiAgdGhpcy5fZSA9IDB4YzNkMmUxZjBcblxuICByZXR1cm4gdGhpc1xufVxuXG5mdW5jdGlvbiByb3RsMSAobnVtKSB7XG4gIHJldHVybiAobnVtIDw8IDEpIHwgKG51bSA+Pj4gMzEpXG59XG5cbmZ1bmN0aW9uIHJvdGw1IChudW0pIHtcbiAgcmV0dXJuIChudW0gPDwgNSkgfCAobnVtID4+PiAyNylcbn1cblxuZnVuY3Rpb24gcm90bDMwIChudW0pIHtcbiAgcmV0dXJuIChudW0gPDwgMzApIHwgKG51bSA+Pj4gMilcbn1cblxuZnVuY3Rpb24gZnQgKHMsIGIsIGMsIGQpIHtcbiAgaWYgKHMgPT09IDApIHJldHVybiAoYiAmIGMpIHwgKCh+YikgJiBkKVxuICBpZiAocyA9PT0gMikgcmV0dXJuIChiICYgYykgfCAoYiAmIGQpIHwgKGMgJiBkKVxuICByZXR1cm4gYiBeIGMgXiBkXG59XG5cblNoYTEucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiAoTSkge1xuICB2YXIgVyA9IHRoaXMuX3dcblxuICB2YXIgYSA9IHRoaXMuX2EgfCAwXG4gIHZhciBiID0gdGhpcy5fYiB8IDBcbiAgdmFyIGMgPSB0aGlzLl9jIHwgMFxuICB2YXIgZCA9IHRoaXMuX2QgfCAwXG4gIHZhciBlID0gdGhpcy5fZSB8IDBcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IDE2OyArK2kpIFdbaV0gPSBNLnJlYWRJbnQzMkJFKGkgKiA0KVxuICBmb3IgKDsgaSA8IDgwOyArK2kpIFdbaV0gPSByb3RsMShXW2kgLSAzXSBeIFdbaSAtIDhdIF4gV1tpIC0gMTRdIF4gV1tpIC0gMTZdKVxuXG4gIGZvciAodmFyIGogPSAwOyBqIDwgODA7ICsraikge1xuICAgIHZhciBzID0gfn4oaiAvIDIwKVxuICAgIHZhciB0ID0gKHJvdGw1KGEpICsgZnQocywgYiwgYywgZCkgKyBlICsgV1tqXSArIEtbc10pIHwgMFxuXG4gICAgZSA9IGRcbiAgICBkID0gY1xuICAgIGMgPSByb3RsMzAoYilcbiAgICBiID0gYVxuICAgIGEgPSB0XG4gIH1cblxuICB0aGlzLl9hID0gKGEgKyB0aGlzLl9hKSB8IDBcbiAgdGhpcy5fYiA9IChiICsgdGhpcy5fYikgfCAwXG4gIHRoaXMuX2MgPSAoYyArIHRoaXMuX2MpIHwgMFxuICB0aGlzLl9kID0gKGQgKyB0aGlzLl9kKSB8IDBcbiAgdGhpcy5fZSA9IChlICsgdGhpcy5fZSkgfCAwXG59XG5cblNoYTEucHJvdG90eXBlLl9oYXNoID0gZnVuY3Rpb24gKCkge1xuICB2YXIgSCA9IEJ1ZmZlci5hbGxvY1Vuc2FmZSgyMClcblxuICBILndyaXRlSW50MzJCRSh0aGlzLl9hIHwgMCwgMClcbiAgSC53cml0ZUludDMyQkUodGhpcy5fYiB8IDAsIDQpXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2MgfCAwLCA4KVxuICBILndyaXRlSW50MzJCRSh0aGlzLl9kIHwgMCwgMTIpXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2UgfCAwLCAxNilcblxuICByZXR1cm4gSFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFNoYTFcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/sha.js/sha1.js\n");

/***/ }),

/***/ "./node_modules/sha.js/sha224.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha224.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar Sha256 = __webpack_require__(/*! ./sha256 */ \"./node_modules/sha.js/sha256.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhLmpzL3NoYTIyNC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9zaGEuanMvc2hhMjI0LmpzPzcyYWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIEphdmFTY3JpcHQgaW1wbGVtZW50YXRpb24gb2YgdGhlIFNlY3VyZSBIYXNoIEFsZ29yaXRobSwgU0hBLTI1NiwgYXMgZGVmaW5lZFxuICogaW4gRklQUyAxODAtMlxuICogVmVyc2lvbiAyLjItYmV0YSBDb3B5cmlnaHQgQW5nZWwgTWFyaW4sIFBhdWwgSm9obnN0b24gMjAwMCAtIDIwMDkuXG4gKiBPdGhlciBjb250cmlidXRvcnM6IEdyZWcgSG9sdCwgQW5kcmV3IEtlcGVydCwgWWRuYXIsIExvc3RpbmV0XG4gKlxuICovXG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbnZhciBTaGEyNTYgPSByZXF1aXJlKCcuL3NoYTI1NicpXG52YXIgSGFzaCA9IHJlcXVpcmUoJy4vaGFzaCcpXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXJcblxudmFyIFcgPSBuZXcgQXJyYXkoNjQpXG5cbmZ1bmN0aW9uIFNoYTIyNCAoKSB7XG4gIHRoaXMuaW5pdCgpXG5cbiAgdGhpcy5fdyA9IFcgLy8gbmV3IEFycmF5KDY0KVxuXG4gIEhhc2guY2FsbCh0aGlzLCA2NCwgNTYpXG59XG5cbmluaGVyaXRzKFNoYTIyNCwgU2hhMjU2KVxuXG5TaGEyMjQucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuX2EgPSAweGMxMDU5ZWQ4XG4gIHRoaXMuX2IgPSAweDM2N2NkNTA3XG4gIHRoaXMuX2MgPSAweDMwNzBkZDE3XG4gIHRoaXMuX2QgPSAweGY3MGU1OTM5XG4gIHRoaXMuX2UgPSAweGZmYzAwYjMxXG4gIHRoaXMuX2YgPSAweDY4NTgxNTExXG4gIHRoaXMuX2cgPSAweDY0Zjk4ZmE3XG4gIHRoaXMuX2ggPSAweGJlZmE0ZmE0XG5cbiAgcmV0dXJuIHRoaXNcbn1cblxuU2hhMjI0LnByb3RvdHlwZS5faGFzaCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIEggPSBCdWZmZXIuYWxsb2NVbnNhZmUoMjgpXG5cbiAgSC53cml0ZUludDMyQkUodGhpcy5fYSwgMClcbiAgSC53cml0ZUludDMyQkUodGhpcy5fYiwgNClcbiAgSC53cml0ZUludDMyQkUodGhpcy5fYywgOClcbiAgSC53cml0ZUludDMyQkUodGhpcy5fZCwgMTIpXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2UsIDE2KVxuICBILndyaXRlSW50MzJCRSh0aGlzLl9mLCAyMClcbiAgSC53cml0ZUludDMyQkUodGhpcy5fZywgMjQpXG5cbiAgcmV0dXJuIEhcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTaGEyMjRcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/sha.js/sha224.js\n");

/***/ }),

/***/ "./node_modules/sha.js/sha256.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha256.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhLmpzL3NoYTI1Ni5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9zaGEuanMvc2hhMjU2LmpzP2EyNTUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIEphdmFTY3JpcHQgaW1wbGVtZW50YXRpb24gb2YgdGhlIFNlY3VyZSBIYXNoIEFsZ29yaXRobSwgU0hBLTI1NiwgYXMgZGVmaW5lZFxuICogaW4gRklQUyAxODAtMlxuICogVmVyc2lvbiAyLjItYmV0YSBDb3B5cmlnaHQgQW5nZWwgTWFyaW4sIFBhdWwgSm9obnN0b24gMjAwMCAtIDIwMDkuXG4gKiBPdGhlciBjb250cmlidXRvcnM6IEdyZWcgSG9sdCwgQW5kcmV3IEtlcGVydCwgWWRuYXIsIExvc3RpbmV0XG4gKlxuICovXG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbnZhciBIYXNoID0gcmVxdWlyZSgnLi9oYXNoJylcbnZhciBCdWZmZXIgPSByZXF1aXJlKCdzYWZlLWJ1ZmZlcicpLkJ1ZmZlclxuXG52YXIgSyA9IFtcbiAgMHg0MjhBMkY5OCwgMHg3MTM3NDQ5MSwgMHhCNUMwRkJDRiwgMHhFOUI1REJBNSxcbiAgMHgzOTU2QzI1QiwgMHg1OUYxMTFGMSwgMHg5MjNGODJBNCwgMHhBQjFDNUVENSxcbiAgMHhEODA3QUE5OCwgMHgxMjgzNUIwMSwgMHgyNDMxODVCRSwgMHg1NTBDN0RDMyxcbiAgMHg3MkJFNUQ3NCwgMHg4MERFQjFGRSwgMHg5QkRDMDZBNywgMHhDMTlCRjE3NCxcbiAgMHhFNDlCNjlDMSwgMHhFRkJFNDc4NiwgMHgwRkMxOURDNiwgMHgyNDBDQTFDQyxcbiAgMHgyREU5MkM2RiwgMHg0QTc0ODRBQSwgMHg1Q0IwQTlEQywgMHg3NkY5ODhEQSxcbiAgMHg5ODNFNTE1MiwgMHhBODMxQzY2RCwgMHhCMDAzMjdDOCwgMHhCRjU5N0ZDNyxcbiAgMHhDNkUwMEJGMywgMHhENUE3OTE0NywgMHgwNkNBNjM1MSwgMHgxNDI5Mjk2NyxcbiAgMHgyN0I3MEE4NSwgMHgyRTFCMjEzOCwgMHg0RDJDNkRGQywgMHg1MzM4MEQxMyxcbiAgMHg2NTBBNzM1NCwgMHg3NjZBMEFCQiwgMHg4MUMyQzkyRSwgMHg5MjcyMkM4NSxcbiAgMHhBMkJGRThBMSwgMHhBODFBNjY0QiwgMHhDMjRCOEI3MCwgMHhDNzZDNTFBMyxcbiAgMHhEMTkyRTgxOSwgMHhENjk5MDYyNCwgMHhGNDBFMzU4NSwgMHgxMDZBQTA3MCxcbiAgMHgxOUE0QzExNiwgMHgxRTM3NkMwOCwgMHgyNzQ4Nzc0QywgMHgzNEIwQkNCNSxcbiAgMHgzOTFDMENCMywgMHg0RUQ4QUE0QSwgMHg1QjlDQ0E0RiwgMHg2ODJFNkZGMyxcbiAgMHg3NDhGODJFRSwgMHg3OEE1NjM2RiwgMHg4NEM4NzgxNCwgMHg4Q0M3MDIwOCxcbiAgMHg5MEJFRkZGQSwgMHhBNDUwNkNFQiwgMHhCRUY5QTNGNywgMHhDNjcxNzhGMlxuXVxuXG52YXIgVyA9IG5ldyBBcnJheSg2NClcblxuZnVuY3Rpb24gU2hhMjU2ICgpIHtcbiAgdGhpcy5pbml0KClcblxuICB0aGlzLl93ID0gVyAvLyBuZXcgQXJyYXkoNjQpXG5cbiAgSGFzaC5jYWxsKHRoaXMsIDY0LCA1Nilcbn1cblxuaW5oZXJpdHMoU2hhMjU2LCBIYXNoKVxuXG5TaGEyNTYucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuX2EgPSAweDZhMDllNjY3XG4gIHRoaXMuX2IgPSAweGJiNjdhZTg1XG4gIHRoaXMuX2MgPSAweDNjNmVmMzcyXG4gIHRoaXMuX2QgPSAweGE1NGZmNTNhXG4gIHRoaXMuX2UgPSAweDUxMGU1MjdmXG4gIHRoaXMuX2YgPSAweDliMDU2ODhjXG4gIHRoaXMuX2cgPSAweDFmODNkOWFiXG4gIHRoaXMuX2ggPSAweDViZTBjZDE5XG5cbiAgcmV0dXJuIHRoaXNcbn1cblxuZnVuY3Rpb24gY2ggKHgsIHksIHopIHtcbiAgcmV0dXJuIHogXiAoeCAmICh5IF4geikpXG59XG5cbmZ1bmN0aW9uIG1haiAoeCwgeSwgeikge1xuICByZXR1cm4gKHggJiB5KSB8ICh6ICYgKHggfCB5KSlcbn1cblxuZnVuY3Rpb24gc2lnbWEwICh4KSB7XG4gIHJldHVybiAoeCA+Pj4gMiB8IHggPDwgMzApIF4gKHggPj4+IDEzIHwgeCA8PCAxOSkgXiAoeCA+Pj4gMjIgfCB4IDw8IDEwKVxufVxuXG5mdW5jdGlvbiBzaWdtYTEgKHgpIHtcbiAgcmV0dXJuICh4ID4+PiA2IHwgeCA8PCAyNikgXiAoeCA+Pj4gMTEgfCB4IDw8IDIxKSBeICh4ID4+PiAyNSB8IHggPDwgNylcbn1cblxuZnVuY3Rpb24gZ2FtbWEwICh4KSB7XG4gIHJldHVybiAoeCA+Pj4gNyB8IHggPDwgMjUpIF4gKHggPj4+IDE4IHwgeCA8PCAxNCkgXiAoeCA+Pj4gMylcbn1cblxuZnVuY3Rpb24gZ2FtbWExICh4KSB7XG4gIHJldHVybiAoeCA+Pj4gMTcgfCB4IDw8IDE1KSBeICh4ID4+PiAxOSB8IHggPDwgMTMpIF4gKHggPj4+IDEwKVxufVxuXG5TaGEyNTYucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiAoTSkge1xuICB2YXIgVyA9IHRoaXMuX3dcblxuICB2YXIgYSA9IHRoaXMuX2EgfCAwXG4gIHZhciBiID0gdGhpcy5fYiB8IDBcbiAgdmFyIGMgPSB0aGlzLl9jIHwgMFxuICB2YXIgZCA9IHRoaXMuX2QgfCAwXG4gIHZhciBlID0gdGhpcy5fZSB8IDBcbiAgdmFyIGYgPSB0aGlzLl9mIHwgMFxuICB2YXIgZyA9IHRoaXMuX2cgfCAwXG4gIHZhciBoID0gdGhpcy5faCB8IDBcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IDE2OyArK2kpIFdbaV0gPSBNLnJlYWRJbnQzMkJFKGkgKiA0KVxuICBmb3IgKDsgaSA8IDY0OyArK2kpIFdbaV0gPSAoZ2FtbWExKFdbaSAtIDJdKSArIFdbaSAtIDddICsgZ2FtbWEwKFdbaSAtIDE1XSkgKyBXW2kgLSAxNl0pIHwgMFxuXG4gIGZvciAodmFyIGogPSAwOyBqIDwgNjQ7ICsraikge1xuICAgIHZhciBUMSA9IChoICsgc2lnbWExKGUpICsgY2goZSwgZiwgZykgKyBLW2pdICsgV1tqXSkgfCAwXG4gICAgdmFyIFQyID0gKHNpZ21hMChhKSArIG1haihhLCBiLCBjKSkgfCAwXG5cbiAgICBoID0gZ1xuICAgIGcgPSBmXG4gICAgZiA9IGVcbiAgICBlID0gKGQgKyBUMSkgfCAwXG4gICAgZCA9IGNcbiAgICBjID0gYlxuICAgIGIgPSBhXG4gICAgYSA9IChUMSArIFQyKSB8IDBcbiAgfVxuXG4gIHRoaXMuX2EgPSAoYSArIHRoaXMuX2EpIHwgMFxuICB0aGlzLl9iID0gKGIgKyB0aGlzLl9iKSB8IDBcbiAgdGhpcy5fYyA9IChjICsgdGhpcy5fYykgfCAwXG4gIHRoaXMuX2QgPSAoZCArIHRoaXMuX2QpIHwgMFxuICB0aGlzLl9lID0gKGUgKyB0aGlzLl9lKSB8IDBcbiAgdGhpcy5fZiA9IChmICsgdGhpcy5fZikgfCAwXG4gIHRoaXMuX2cgPSAoZyArIHRoaXMuX2cpIHwgMFxuICB0aGlzLl9oID0gKGggKyB0aGlzLl9oKSB8IDBcbn1cblxuU2hhMjU2LnByb3RvdHlwZS5faGFzaCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIEggPSBCdWZmZXIuYWxsb2NVbnNhZmUoMzIpXG5cbiAgSC53cml0ZUludDMyQkUodGhpcy5fYSwgMClcbiAgSC53cml0ZUludDMyQkUodGhpcy5fYiwgNClcbiAgSC53cml0ZUludDMyQkUodGhpcy5fYywgOClcbiAgSC53cml0ZUludDMyQkUodGhpcy5fZCwgMTIpXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2UsIDE2KVxuICBILndyaXRlSW50MzJCRSh0aGlzLl9mLCAyMClcbiAgSC53cml0ZUludDMyQkUodGhpcy5fZywgMjQpXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2gsIDI4KVxuXG4gIHJldHVybiBIXG59XG5cbm1vZHVsZS5leHBvcnRzID0gU2hhMjU2XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/sha.js/sha256.js\n");

/***/ }),

/***/ "./node_modules/sha.js/sha384.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha384.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar SHA512 = __webpack_require__(/*! ./sha512 */ \"./node_modules/sha.js/sha512.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhLmpzL3NoYTM4NC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9zaGEuanMvc2hhMzg0LmpzP2I4MzciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxudmFyIFNIQTUxMiA9IHJlcXVpcmUoJy4vc2hhNTEyJylcbnZhciBIYXNoID0gcmVxdWlyZSgnLi9oYXNoJylcbnZhciBCdWZmZXIgPSByZXF1aXJlKCdzYWZlLWJ1ZmZlcicpLkJ1ZmZlclxuXG52YXIgVyA9IG5ldyBBcnJheSgxNjApXG5cbmZ1bmN0aW9uIFNoYTM4NCAoKSB7XG4gIHRoaXMuaW5pdCgpXG4gIHRoaXMuX3cgPSBXXG5cbiAgSGFzaC5jYWxsKHRoaXMsIDEyOCwgMTEyKVxufVxuXG5pbmhlcml0cyhTaGEzODQsIFNIQTUxMilcblxuU2hhMzg0LnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLl9haCA9IDB4Y2JiYjlkNWRcbiAgdGhpcy5fYmggPSAweDYyOWEyOTJhXG4gIHRoaXMuX2NoID0gMHg5MTU5MDE1YVxuICB0aGlzLl9kaCA9IDB4MTUyZmVjZDhcbiAgdGhpcy5fZWggPSAweDY3MzMyNjY3XG4gIHRoaXMuX2ZoID0gMHg4ZWI0NGE4N1xuICB0aGlzLl9naCA9IDB4ZGIwYzJlMGRcbiAgdGhpcy5faGggPSAweDQ3YjU0ODFkXG5cbiAgdGhpcy5fYWwgPSAweGMxMDU5ZWQ4XG4gIHRoaXMuX2JsID0gMHgzNjdjZDUwN1xuICB0aGlzLl9jbCA9IDB4MzA3MGRkMTdcbiAgdGhpcy5fZGwgPSAweGY3MGU1OTM5XG4gIHRoaXMuX2VsID0gMHhmZmMwMGIzMVxuICB0aGlzLl9mbCA9IDB4Njg1ODE1MTFcbiAgdGhpcy5fZ2wgPSAweDY0Zjk4ZmE3XG4gIHRoaXMuX2hsID0gMHhiZWZhNGZhNFxuXG4gIHJldHVybiB0aGlzXG59XG5cblNoYTM4NC5wcm90b3R5cGUuX2hhc2ggPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBIID0gQnVmZmVyLmFsbG9jVW5zYWZlKDQ4KVxuXG4gIGZ1bmN0aW9uIHdyaXRlSW50NjRCRSAoaCwgbCwgb2Zmc2V0KSB7XG4gICAgSC53cml0ZUludDMyQkUoaCwgb2Zmc2V0KVxuICAgIEgud3JpdGVJbnQzMkJFKGwsIG9mZnNldCArIDQpXG4gIH1cblxuICB3cml0ZUludDY0QkUodGhpcy5fYWgsIHRoaXMuX2FsLCAwKVxuICB3cml0ZUludDY0QkUodGhpcy5fYmgsIHRoaXMuX2JsLCA4KVxuICB3cml0ZUludDY0QkUodGhpcy5fY2gsIHRoaXMuX2NsLCAxNilcbiAgd3JpdGVJbnQ2NEJFKHRoaXMuX2RoLCB0aGlzLl9kbCwgMjQpXG4gIHdyaXRlSW50NjRCRSh0aGlzLl9laCwgdGhpcy5fZWwsIDMyKVxuICB3cml0ZUludDY0QkUodGhpcy5fZmgsIHRoaXMuX2ZsLCA0MClcblxuICByZXR1cm4gSFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFNoYTM4NFxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/sha.js/sha384.js\n");

/***/ }),

/***/ "./node_modules/sha.js/sha512.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha512.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/sha.js/sha512.js\n");

/***/ }),

/***/ "./node_modules/stream-browserify/index.js":
/*!*************************************************!*\
  !*** ./node_modules/stream-browserify/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\ninherits(Stream, EE);\nStream.Readable = __webpack_require__(/*! readable-stream/readable.js */ \"./node_modules/readable-stream/readable-browser.js\");\nStream.Writable = __webpack_require__(/*! readable-stream/writable.js */ \"./node_modules/readable-stream/writable-browser.js\");\nStream.Duplex = __webpack_require__(/*! readable-stream/duplex.js */ \"./node_modules/readable-stream/duplex-browser.js\");\nStream.Transform = __webpack_require__(/*! readable-stream/transform.js */ \"./node_modules/readable-stream/transform.js\");\nStream.PassThrough = __webpack_require__(/*! readable-stream/passthrough.js */ \"./node_modules/readable-stream/passthrough.js\");\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyZWFtLWJyb3dzZXJpZnkvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvc3RyZWFtLWJyb3dzZXJpZnkvaW5kZXguanM/ZDQ4NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxubW9kdWxlLmV4cG9ydHMgPSBTdHJlYW07XG5cbnZhciBFRSA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcjtcbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7XG5cbmluaGVyaXRzKFN0cmVhbSwgRUUpO1xuU3RyZWFtLlJlYWRhYmxlID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtL3JlYWRhYmxlLmpzJyk7XG5TdHJlYW0uV3JpdGFibGUgPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0vd3JpdGFibGUuanMnKTtcblN0cmVhbS5EdXBsZXggPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0vZHVwbGV4LmpzJyk7XG5TdHJlYW0uVHJhbnNmb3JtID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtL3RyYW5zZm9ybS5qcycpO1xuU3RyZWFtLlBhc3NUaHJvdWdoID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtL3Bhc3N0aHJvdWdoLmpzJyk7XG5cbi8vIEJhY2t3YXJkcy1jb21wYXQgd2l0aCBub2RlIDAuNC54XG5TdHJlYW0uU3RyZWFtID0gU3RyZWFtO1xuXG5cblxuLy8gb2xkLXN0eWxlIHN0cmVhbXMuICBOb3RlIHRoYXQgdGhlIHBpcGUgbWV0aG9kICh0aGUgb25seSByZWxldmFudFxuLy8gcGFydCBvZiB0aGlzIGNsYXNzKSBpcyBvdmVycmlkZGVuIGluIHRoZSBSZWFkYWJsZSBjbGFzcy5cblxuZnVuY3Rpb24gU3RyZWFtKCkge1xuICBFRS5jYWxsKHRoaXMpO1xufVxuXG5TdHJlYW0ucHJvdG90eXBlLnBpcGUgPSBmdW5jdGlvbihkZXN0LCBvcHRpb25zKSB7XG4gIHZhciBzb3VyY2UgPSB0aGlzO1xuXG4gIGZ1bmN0aW9uIG9uZGF0YShjaHVuaykge1xuICAgIGlmIChkZXN0LndyaXRhYmxlKSB7XG4gICAgICBpZiAoZmFsc2UgPT09IGRlc3Qud3JpdGUoY2h1bmspICYmIHNvdXJjZS5wYXVzZSkge1xuICAgICAgICBzb3VyY2UucGF1c2UoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBzb3VyY2Uub24oJ2RhdGEnLCBvbmRhdGEpO1xuXG4gIGZ1bmN0aW9uIG9uZHJhaW4oKSB7XG4gICAgaWYgKHNvdXJjZS5yZWFkYWJsZSAmJiBzb3VyY2UucmVzdW1lKSB7XG4gICAgICBzb3VyY2UucmVzdW1lKCk7XG4gICAgfVxuICB9XG5cbiAgZGVzdC5vbignZHJhaW4nLCBvbmRyYWluKTtcblxuICAvLyBJZiB0aGUgJ2VuZCcgb3B0aW9uIGlzIG5vdCBzdXBwbGllZCwgZGVzdC5lbmQoKSB3aWxsIGJlIGNhbGxlZCB3aGVuXG4gIC8vIHNvdXJjZSBnZXRzIHRoZSAnZW5kJyBvciAnY2xvc2UnIGV2ZW50cy4gIE9ubHkgZGVzdC5lbmQoKSBvbmNlLlxuICBpZiAoIWRlc3QuX2lzU3RkaW8gJiYgKCFvcHRpb25zIHx8IG9wdGlvbnMuZW5kICE9PSBmYWxzZSkpIHtcbiAgICBzb3VyY2Uub24oJ2VuZCcsIG9uZW5kKTtcbiAgICBzb3VyY2Uub24oJ2Nsb3NlJywgb25jbG9zZSk7XG4gIH1cblxuICB2YXIgZGlkT25FbmQgPSBmYWxzZTtcbiAgZnVuY3Rpb24gb25lbmQoKSB7XG4gICAgaWYgKGRpZE9uRW5kKSByZXR1cm47XG4gICAgZGlkT25FbmQgPSB0cnVlO1xuXG4gICAgZGVzdC5lbmQoKTtcbiAgfVxuXG5cbiAgZnVuY3Rpb24gb25jbG9zZSgpIHtcbiAgICBpZiAoZGlkT25FbmQpIHJldHVybjtcbiAgICBkaWRPbkVuZCA9IHRydWU7XG5cbiAgICBpZiAodHlwZW9mIGRlc3QuZGVzdHJveSA9PT0gJ2Z1bmN0aW9uJykgZGVzdC5kZXN0cm95KCk7XG4gIH1cblxuICAvLyBkb24ndCBsZWF2ZSBkYW5nbGluZyBwaXBlcyB3aGVuIHRoZXJlIGFyZSBlcnJvcnMuXG4gIGZ1bmN0aW9uIG9uZXJyb3IoZXIpIHtcbiAgICBjbGVhbnVwKCk7XG4gICAgaWYgKEVFLmxpc3RlbmVyQ291bnQodGhpcywgJ2Vycm9yJykgPT09IDApIHtcbiAgICAgIHRocm93IGVyOyAvLyBVbmhhbmRsZWQgc3RyZWFtIGVycm9yIGluIHBpcGUuXG4gICAgfVxuICB9XG5cbiAgc291cmNlLm9uKCdlcnJvcicsIG9uZXJyb3IpO1xuICBkZXN0Lm9uKCdlcnJvcicsIG9uZXJyb3IpO1xuXG4gIC8vIHJlbW92ZSBhbGwgdGhlIGV2ZW50IGxpc3RlbmVycyB0aGF0IHdlcmUgYWRkZWQuXG4gIGZ1bmN0aW9uIGNsZWFudXAoKSB7XG4gICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdkYXRhJywgb25kYXRhKTtcbiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCdkcmFpbicsIG9uZHJhaW4pO1xuXG4gICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdlbmQnLCBvbmVuZCk7XG4gICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdjbG9zZScsIG9uY2xvc2UpO1xuXG4gICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdlcnJvcicsIG9uZXJyb3IpO1xuICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgb25lcnJvcik7XG5cbiAgICBzb3VyY2UucmVtb3ZlTGlzdGVuZXIoJ2VuZCcsIGNsZWFudXApO1xuICAgIHNvdXJjZS5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBjbGVhbnVwKTtcblxuICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgY2xlYW51cCk7XG4gIH1cblxuICBzb3VyY2Uub24oJ2VuZCcsIGNsZWFudXApO1xuICBzb3VyY2Uub24oJ2Nsb3NlJywgY2xlYW51cCk7XG5cbiAgZGVzdC5vbignY2xvc2UnLCBjbGVhbnVwKTtcblxuICBkZXN0LmVtaXQoJ3BpcGUnLCBzb3VyY2UpO1xuXG4gIC8vIEFsbG93IGZvciB1bml4LWxpa2UgdXNhZ2U6IEEucGlwZShCKS5waXBlKEMpXG4gIHJldHVybiBkZXN0O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/stream-browserify/index.js\n");

/***/ }),

/***/ "./node_modules/stream-http/index.js":
/*!*******************************************!*\
  !*** ./node_modules/stream-http/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var ClientRequest = __webpack_require__(/*! ./lib/request */ \"./node_modules/stream-http/lib/request.js\")\nvar response = __webpack_require__(/*! ./lib/response */ \"./node_modules/stream-http/lib/response.js\")\nvar extend = __webpack_require__(/*! xtend */ \"./node_modules/xtend/immutable.js\")\nvar statusCodes = __webpack_require__(/*! builtin-status-codes */ \"./node_modules/builtin-status-codes/browser.js\")\nvar url = __webpack_require__(/*! url */ \"./node_modules/url/url.js\")\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvaW5kZXguanM/OTQ5MCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQ2xpZW50UmVxdWVzdCA9IHJlcXVpcmUoJy4vbGliL3JlcXVlc3QnKVxudmFyIHJlc3BvbnNlID0gcmVxdWlyZSgnLi9saWIvcmVzcG9uc2UnKVxudmFyIGV4dGVuZCA9IHJlcXVpcmUoJ3h0ZW5kJylcbnZhciBzdGF0dXNDb2RlcyA9IHJlcXVpcmUoJ2J1aWx0aW4tc3RhdHVzLWNvZGVzJylcbnZhciB1cmwgPSByZXF1aXJlKCd1cmwnKVxuXG52YXIgaHR0cCA9IGV4cG9ydHNcblxuaHR0cC5yZXF1ZXN0ID0gZnVuY3Rpb24gKG9wdHMsIGNiKSB7XG5cdGlmICh0eXBlb2Ygb3B0cyA9PT0gJ3N0cmluZycpXG5cdFx0b3B0cyA9IHVybC5wYXJzZShvcHRzKVxuXHRlbHNlXG5cdFx0b3B0cyA9IGV4dGVuZChvcHRzKVxuXG5cdC8vIE5vcm1hbGx5LCB0aGUgcGFnZSBpcyBsb2FkZWQgZnJvbSBodHRwIG9yIGh0dHBzLCBzbyBub3Qgc3BlY2lmeWluZyBhIHByb3RvY29sXG5cdC8vIHdpbGwgcmVzdWx0IGluIGEgKHZhbGlkKSBwcm90b2NvbC1yZWxhdGl2ZSB1cmwuIEhvd2V2ZXIsIHRoaXMgd29uJ3Qgd29yayBpZlxuXHQvLyB0aGUgcHJvdG9jb2wgaXMgc29tZXRoaW5nIGVsc2UsIGxpa2UgJ2ZpbGU6J1xuXHR2YXIgZGVmYXVsdFByb3RvY29sID0gZ2xvYmFsLmxvY2F0aW9uLnByb3RvY29sLnNlYXJjaCgvXmh0dHBzPzokLykgPT09IC0xID8gJ2h0dHA6JyA6ICcnXG5cblx0dmFyIHByb3RvY29sID0gb3B0cy5wcm90b2NvbCB8fCBkZWZhdWx0UHJvdG9jb2xcblx0dmFyIGhvc3QgPSBvcHRzLmhvc3RuYW1lIHx8IG9wdHMuaG9zdFxuXHR2YXIgcG9ydCA9IG9wdHMucG9ydFxuXHR2YXIgcGF0aCA9IG9wdHMucGF0aCB8fCAnLydcblxuXHQvLyBOZWNlc3NhcnkgZm9yIElQdjYgYWRkcmVzc2VzXG5cdGlmIChob3N0ICYmIGhvc3QuaW5kZXhPZignOicpICE9PSAtMSlcblx0XHRob3N0ID0gJ1snICsgaG9zdCArICddJ1xuXG5cdC8vIFRoaXMgbWF5IGJlIGEgcmVsYXRpdmUgdXJsLiBUaGUgYnJvd3NlciBzaG91bGQgYWx3YXlzIGJlIGFibGUgdG8gaW50ZXJwcmV0IGl0IGNvcnJlY3RseS5cblx0b3B0cy51cmwgPSAoaG9zdCA/IChwcm90b2NvbCArICcvLycgKyBob3N0KSA6ICcnKSArIChwb3J0ID8gJzonICsgcG9ydCA6ICcnKSArIHBhdGhcblx0b3B0cy5tZXRob2QgPSAob3B0cy5tZXRob2QgfHwgJ0dFVCcpLnRvVXBwZXJDYXNlKClcblx0b3B0cy5oZWFkZXJzID0gb3B0cy5oZWFkZXJzIHx8IHt9XG5cblx0Ly8gQWxzbyB2YWxpZCBvcHRzLmF1dGgsIG9wdHMubW9kZVxuXG5cdHZhciByZXEgPSBuZXcgQ2xpZW50UmVxdWVzdChvcHRzKVxuXHRpZiAoY2IpXG5cdFx0cmVxLm9uKCdyZXNwb25zZScsIGNiKVxuXHRyZXR1cm4gcmVxXG59XG5cbmh0dHAuZ2V0ID0gZnVuY3Rpb24gZ2V0IChvcHRzLCBjYikge1xuXHR2YXIgcmVxID0gaHR0cC5yZXF1ZXN0KG9wdHMsIGNiKVxuXHRyZXEuZW5kKClcblx0cmV0dXJuIHJlcVxufVxuXG5odHRwLkNsaWVudFJlcXVlc3QgPSBDbGllbnRSZXF1ZXN0XG5odHRwLkluY29taW5nTWVzc2FnZSA9IHJlc3BvbnNlLkluY29taW5nTWVzc2FnZVxuXG5odHRwLkFnZW50ID0gZnVuY3Rpb24gKCkge31cbmh0dHAuQWdlbnQuZGVmYXVsdE1heFNvY2tldHMgPSA0XG5cbmh0dHAuZ2xvYmFsQWdlbnQgPSBuZXcgaHR0cC5BZ2VudCgpXG5cbmh0dHAuU1RBVFVTX0NPREVTID0gc3RhdHVzQ29kZXNcblxuaHR0cC5NRVRIT0RTID0gW1xuXHQnQ0hFQ0tPVVQnLFxuXHQnQ09OTkVDVCcsXG5cdCdDT1BZJyxcblx0J0RFTEVURScsXG5cdCdHRVQnLFxuXHQnSEVBRCcsXG5cdCdMT0NLJyxcblx0J00tU0VBUkNIJyxcblx0J01FUkdFJyxcblx0J01LQUNUSVZJVFknLFxuXHQnTUtDT0wnLFxuXHQnTU9WRScsXG5cdCdOT1RJRlknLFxuXHQnT1BUSU9OUycsXG5cdCdQQVRDSCcsXG5cdCdQT1NUJyxcblx0J1BST1BGSU5EJyxcblx0J1BST1BQQVRDSCcsXG5cdCdQVVJHRScsXG5cdCdQVVQnLFxuXHQnUkVQT1JUJyxcblx0J1NFQVJDSCcsXG5cdCdTVUJTQ1JJQkUnLFxuXHQnVFJBQ0UnLFxuXHQnVU5MT0NLJyxcblx0J1VOU1VCU0NSSUJFJ1xuXSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/stream-http/index.js\n");

/***/ }),

/***/ "./node_modules/stream-http/lib/capability.js":
/*!****************************************************!*\
  !*** ./node_modules/stream-http/lib/capability.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\nexports.blobConstructor = false\ntry {\n\tnew Blob([new ArrayBuffer(1)])\n\texports.blobConstructor = true\n} catch (e) {}\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\n\tcheckTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nexports.vbArray = isFunction(global.VBArray)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvbGliL2NhcGFiaWxpdHkuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvbGliL2NhcGFiaWxpdHkuanM/YTlmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLmZldGNoID0gaXNGdW5jdGlvbihnbG9iYWwuZmV0Y2gpICYmIGlzRnVuY3Rpb24oZ2xvYmFsLlJlYWRhYmxlU3RyZWFtKVxuXG5leHBvcnRzLndyaXRhYmxlU3RyZWFtID0gaXNGdW5jdGlvbihnbG9iYWwuV3JpdGFibGVTdHJlYW0pXG5cbmV4cG9ydHMuYWJvcnRDb250cm9sbGVyID0gaXNGdW5jdGlvbihnbG9iYWwuQWJvcnRDb250cm9sbGVyKVxuXG5leHBvcnRzLmJsb2JDb25zdHJ1Y3RvciA9IGZhbHNlXG50cnkge1xuXHRuZXcgQmxvYihbbmV3IEFycmF5QnVmZmVyKDEpXSlcblx0ZXhwb3J0cy5ibG9iQ29uc3RydWN0b3IgPSB0cnVlXG59IGNhdGNoIChlKSB7fVxuXG4vLyBUaGUgeGhyIHJlcXVlc3QgdG8gZXhhbXBsZS5jb20gbWF5IHZpb2xhdGUgc29tZSByZXN0cmljdGl2ZSBDU1AgY29uZmlndXJhdGlvbnMsXG4vLyBzbyBpZiB3ZSdyZSBydW5uaW5nIGluIGEgYnJvd3NlciB0aGF0IHN1cHBvcnRzIGBmZXRjaGAsIGF2b2lkIGNhbGxpbmcgZ2V0WEhSKClcbi8vIGFuZCBhc3N1bWUgc3VwcG9ydCBmb3IgY2VydGFpbiBmZWF0dXJlcyBiZWxvdy5cbnZhciB4aHJcbmZ1bmN0aW9uIGdldFhIUiAoKSB7XG5cdC8vIENhY2hlIHRoZSB4aHIgdmFsdWVcblx0aWYgKHhociAhPT0gdW5kZWZpbmVkKSByZXR1cm4geGhyXG5cblx0aWYgKGdsb2JhbC5YTUxIdHRwUmVxdWVzdCkge1xuXHRcdHhociA9IG5ldyBnbG9iYWwuWE1MSHR0cFJlcXVlc3QoKVxuXHRcdC8vIElmIFhEb21haW5SZXF1ZXN0IGlzIGF2YWlsYWJsZSAoaWUgb25seSwgd2hlcmUgeGhyIG1pZ2h0IG5vdCB3b3JrXG5cdFx0Ly8gY3Jvc3MgZG9tYWluKSwgdXNlIHRoZSBwYWdlIGxvY2F0aW9uLiBPdGhlcndpc2UgdXNlIGV4YW1wbGUuY29tXG5cdFx0Ly8gTm90ZTogdGhpcyBkb2Vzbid0IGFjdHVhbGx5IG1ha2UgYW4gaHR0cCByZXF1ZXN0LlxuXHRcdHRyeSB7XG5cdFx0XHR4aHIub3BlbignR0VUJywgZ2xvYmFsLlhEb21haW5SZXF1ZXN0ID8gJy8nIDogJ2h0dHBzOi8vZXhhbXBsZS5jb20nKVxuXHRcdH0gY2F0Y2goZSkge1xuXHRcdFx0eGhyID0gbnVsbFxuXHRcdH1cblx0fSBlbHNlIHtcblx0XHQvLyBTZXJ2aWNlIHdvcmtlcnMgZG9uJ3QgaGF2ZSBYSFJcblx0XHR4aHIgPSBudWxsXG5cdH1cblx0cmV0dXJuIHhoclxufVxuXG5mdW5jdGlvbiBjaGVja1R5cGVTdXBwb3J0ICh0eXBlKSB7XG5cdHZhciB4aHIgPSBnZXRYSFIoKVxuXHRpZiAoIXhocikgcmV0dXJuIGZhbHNlXG5cdHRyeSB7XG5cdFx0eGhyLnJlc3BvbnNlVHlwZSA9IHR5cGVcblx0XHRyZXR1cm4geGhyLnJlc3BvbnNlVHlwZSA9PT0gdHlwZVxuXHR9IGNhdGNoIChlKSB7fVxuXHRyZXR1cm4gZmFsc2Vcbn1cblxuLy8gRm9yIHNvbWUgc3RyYW5nZSByZWFzb24sIFNhZmFyaSA3LjAgcmVwb3J0cyB0eXBlb2YgZ2xvYmFsLkFycmF5QnVmZmVyID09PSAnb2JqZWN0Jy5cbi8vIFNhZmFyaSA3LjEgYXBwZWFycyB0byBoYXZlIGZpeGVkIHRoaXMgYnVnLlxudmFyIGhhdmVBcnJheUJ1ZmZlciA9IHR5cGVvZiBnbG9iYWwuQXJyYXlCdWZmZXIgIT09ICd1bmRlZmluZWQnXG52YXIgaGF2ZVNsaWNlID0gaGF2ZUFycmF5QnVmZmVyICYmIGlzRnVuY3Rpb24oZ2xvYmFsLkFycmF5QnVmZmVyLnByb3RvdHlwZS5zbGljZSlcblxuLy8gSWYgZmV0Y2ggaXMgc3VwcG9ydGVkLCB0aGVuIGFycmF5YnVmZmVyIHdpbGwgYmUgc3VwcG9ydGVkIHRvby4gU2tpcCBjYWxsaW5nXG4vLyBjaGVja1R5cGVTdXBwb3J0KCksIHNpbmNlIHRoYXQgY2FsbHMgZ2V0WEhSKCkuXG5leHBvcnRzLmFycmF5YnVmZmVyID0gZXhwb3J0cy5mZXRjaCB8fCAoaGF2ZUFycmF5QnVmZmVyICYmIGNoZWNrVHlwZVN1cHBvcnQoJ2FycmF5YnVmZmVyJykpXG5cbi8vIFRoZXNlIG5leHQgdHdvIHRlc3RzIHVuYXZvaWRhYmx5IHNob3cgd2FybmluZ3MgaW4gQ2hyb21lLiBTaW5jZSBmZXRjaCB3aWxsIGFsd2F5c1xuLy8gYmUgdXNlZCBpZiBpdCdzIGF2YWlsYWJsZSwganVzdCByZXR1cm4gZmFsc2UgZm9yIHRoZXNlIHRvIGF2b2lkIHRoZSB3YXJuaW5ncy5cbmV4cG9ydHMubXNzdHJlYW0gPSAhZXhwb3J0cy5mZXRjaCAmJiBoYXZlU2xpY2UgJiYgY2hlY2tUeXBlU3VwcG9ydCgnbXMtc3RyZWFtJylcbmV4cG9ydHMubW96Y2h1bmtlZGFycmF5YnVmZmVyID0gIWV4cG9ydHMuZmV0Y2ggJiYgaGF2ZUFycmF5QnVmZmVyICYmXG5cdGNoZWNrVHlwZVN1cHBvcnQoJ21vei1jaHVua2VkLWFycmF5YnVmZmVyJylcblxuLy8gSWYgZmV0Y2ggaXMgc3VwcG9ydGVkLCB0aGVuIG92ZXJyaWRlTWltZVR5cGUgd2lsbCBiZSBzdXBwb3J0ZWQgdG9vLiBTa2lwIGNhbGxpbmdcbi8vIGdldFhIUigpLlxuZXhwb3J0cy5vdmVycmlkZU1pbWVUeXBlID0gZXhwb3J0cy5mZXRjaCB8fCAoZ2V0WEhSKCkgPyBpc0Z1bmN0aW9uKGdldFhIUigpLm92ZXJyaWRlTWltZVR5cGUpIDogZmFsc2UpXG5cbmV4cG9ydHMudmJBcnJheSA9IGlzRnVuY3Rpb24oZ2xvYmFsLlZCQXJyYXkpXG5cbmZ1bmN0aW9uIGlzRnVuY3Rpb24gKHZhbHVlKSB7XG5cdHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbidcbn1cblxueGhyID0gbnVsbCAvLyBIZWxwIGdjXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/stream-http/lib/capability.js\n");

/***/ }),

/***/ "./node_modules/stream-http/lib/request.js":
/*!*************************************************!*\
  !*** ./node_modules/stream-http/lib/request.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer, global, process) {var capability = __webpack_require__(/*! ./capability */ \"./node_modules/stream-http/lib/capability.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar response = __webpack_require__(/*! ./response */ \"./node_modules/stream-http/lib/response.js\")\nvar stream = __webpack_require__(/*! readable-stream */ \"./node_modules/stream-http/node_modules/readable-stream/readable-browser.js\")\nvar toArrayBuffer = __webpack_require__(/*! to-arraybuffer */ \"./node_modules/to-arraybuffer/index.js\")\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n\t\tif (capability.arraybuffer) {\n\t\t\tbody = toArrayBuffer(Buffer.concat(self._body))\n\t\t} else if (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn toArrayBuffer(buffer)\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tvar fetchTimer = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tglobal.clearTimeout(self._fetchTimer)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer)\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tglobal.clearTimeout(self._fetchTimer)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/stream-http/lib/request.js\n");

/***/ }),

/***/ "./node_modules/stream-http/lib/response.js":
/*!**************************************************!*\
  !*** ./node_modules/stream-http/lib/response.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process, Buffer, global) {var capability = __webpack_require__(/*! ./capability */ \"./node_modules/stream-http/lib/capability.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar stream = __webpack_require__(/*! readable-stream */ \"./node_modules/stream-http/node_modules/readable-stream/readable-browser.js\")\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, fetchTimer) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(new Buffer(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvbGliL3Jlc3BvbnNlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL3N0cmVhbS1odHRwL2xpYi9yZXNwb25zZS5qcz9jOTBiIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBjYXBhYmlsaXR5ID0gcmVxdWlyZSgnLi9jYXBhYmlsaXR5JylcbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbnZhciBzdHJlYW0gPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0nKVxuXG52YXIgclN0YXRlcyA9IGV4cG9ydHMucmVhZHlTdGF0ZXMgPSB7XG5cdFVOU0VOVDogMCxcblx0T1BFTkVEOiAxLFxuXHRIRUFERVJTX1JFQ0VJVkVEOiAyLFxuXHRMT0FESU5HOiAzLFxuXHRET05FOiA0XG59XG5cbnZhciBJbmNvbWluZ01lc3NhZ2UgPSBleHBvcnRzLkluY29taW5nTWVzc2FnZSA9IGZ1bmN0aW9uICh4aHIsIHJlc3BvbnNlLCBtb2RlLCBmZXRjaFRpbWVyKSB7XG5cdHZhciBzZWxmID0gdGhpc1xuXHRzdHJlYW0uUmVhZGFibGUuY2FsbChzZWxmKVxuXG5cdHNlbGYuX21vZGUgPSBtb2RlXG5cdHNlbGYuaGVhZGVycyA9IHt9XG5cdHNlbGYucmF3SGVhZGVycyA9IFtdXG5cdHNlbGYudHJhaWxlcnMgPSB7fVxuXHRzZWxmLnJhd1RyYWlsZXJzID0gW11cblxuXHQvLyBGYWtlIHRoZSAnY2xvc2UnIGV2ZW50LCBidXQgb25seSBvbmNlICdlbmQnIGZpcmVzXG5cdHNlbGYub24oJ2VuZCcsIGZ1bmN0aW9uICgpIHtcblx0XHQvLyBUaGUgbmV4dFRpY2sgaXMgbmVjZXNzYXJ5IHRvIHByZXZlbnQgdGhlICdyZXF1ZXN0JyBtb2R1bGUgZnJvbSBjYXVzaW5nIGFuIGluZmluaXRlIGxvb3Bcblx0XHRwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uICgpIHtcblx0XHRcdHNlbGYuZW1pdCgnY2xvc2UnKVxuXHRcdH0pXG5cdH0pXG5cblx0aWYgKG1vZGUgPT09ICdmZXRjaCcpIHtcblx0XHRzZWxmLl9mZXRjaFJlc3BvbnNlID0gcmVzcG9uc2VcblxuXHRcdHNlbGYudXJsID0gcmVzcG9uc2UudXJsXG5cdFx0c2VsZi5zdGF0dXNDb2RlID0gcmVzcG9uc2Uuc3RhdHVzXG5cdFx0c2VsZi5zdGF0dXNNZXNzYWdlID0gcmVzcG9uc2Uuc3RhdHVzVGV4dFxuXHRcdFxuXHRcdHJlc3BvbnNlLmhlYWRlcnMuZm9yRWFjaChmdW5jdGlvbiAoaGVhZGVyLCBrZXkpe1xuXHRcdFx0c2VsZi5oZWFkZXJzW2tleS50b0xvd2VyQ2FzZSgpXSA9IGhlYWRlclxuXHRcdFx0c2VsZi5yYXdIZWFkZXJzLnB1c2goa2V5LCBoZWFkZXIpXG5cdFx0fSlcblxuXHRcdGlmIChjYXBhYmlsaXR5LndyaXRhYmxlU3RyZWFtKSB7XG5cdFx0XHR2YXIgd3JpdGFibGUgPSBuZXcgV3JpdGFibGVTdHJlYW0oe1xuXHRcdFx0XHR3cml0ZTogZnVuY3Rpb24gKGNodW5rKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcblx0XHRcdFx0XHRcdGlmIChzZWxmLl9kZXN0cm95ZWQpIHtcblx0XHRcdFx0XHRcdFx0cmVqZWN0KClcblx0XHRcdFx0XHRcdH0gZWxzZSBpZihzZWxmLnB1c2gobmV3IEJ1ZmZlcihjaHVuaykpKSB7XG5cdFx0XHRcdFx0XHRcdHJlc29sdmUoKVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0c2VsZi5fcmVzdW1lRmV0Y2ggPSByZXNvbHZlXG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSlcblx0XHRcdFx0fSxcblx0XHRcdFx0Y2xvc2U6IGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRnbG9iYWwuY2xlYXJUaW1lb3V0KGZldGNoVGltZXIpXG5cdFx0XHRcdFx0aWYgKCFzZWxmLl9kZXN0cm95ZWQpXG5cdFx0XHRcdFx0XHRzZWxmLnB1c2gobnVsbClcblx0XHRcdFx0fSxcblx0XHRcdFx0YWJvcnQ6IGZ1bmN0aW9uIChlcnIpIHtcblx0XHRcdFx0XHRpZiAoIXNlbGYuX2Rlc3Ryb3llZClcblx0XHRcdFx0XHRcdHNlbGYuZW1pdCgnZXJyb3InLCBlcnIpXG5cdFx0XHRcdH1cblx0XHRcdH0pXG5cblx0XHRcdHRyeSB7XG5cdFx0XHRcdHJlc3BvbnNlLmJvZHkucGlwZVRvKHdyaXRhYmxlKS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG5cdFx0XHRcdFx0Z2xvYmFsLmNsZWFyVGltZW91dChmZXRjaFRpbWVyKVxuXHRcdFx0XHRcdGlmICghc2VsZi5fZGVzdHJveWVkKVxuXHRcdFx0XHRcdFx0c2VsZi5lbWl0KCdlcnJvcicsIGVycilcblx0XHRcdFx0fSlcblx0XHRcdFx0cmV0dXJuXG5cdFx0XHR9IGNhdGNoIChlKSB7fSAvLyBwaXBlVG8gbWV0aG9kIGlzbid0IGRlZmluZWQuIENhbid0IGZpbmQgYSBiZXR0ZXIgd2F5IHRvIGZlYXR1cmUgdGVzdCB0aGlzXG5cdFx0fVxuXHRcdC8vIGZhbGxiYWNrIGZvciB3aGVuIHdyaXRhYmxlU3RyZWFtIG9yIHBpcGVUbyBhcmVuJ3QgYXZhaWxhYmxlXG5cdFx0dmFyIHJlYWRlciA9IHJlc3BvbnNlLmJvZHkuZ2V0UmVhZGVyKClcblx0XHRmdW5jdGlvbiByZWFkICgpIHtcblx0XHRcdHJlYWRlci5yZWFkKCkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7XG5cdFx0XHRcdGlmIChzZWxmLl9kZXN0cm95ZWQpXG5cdFx0XHRcdFx0cmV0dXJuXG5cdFx0XHRcdGlmIChyZXN1bHQuZG9uZSkge1xuXHRcdFx0XHRcdGdsb2JhbC5jbGVhclRpbWVvdXQoZmV0Y2hUaW1lcilcblx0XHRcdFx0XHRzZWxmLnB1c2gobnVsbClcblx0XHRcdFx0XHRyZXR1cm5cblx0XHRcdFx0fVxuXHRcdFx0XHRzZWxmLnB1c2gobmV3IEJ1ZmZlcihyZXN1bHQudmFsdWUpKVxuXHRcdFx0XHRyZWFkKClcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcblx0XHRcdFx0Z2xvYmFsLmNsZWFyVGltZW91dChmZXRjaFRpbWVyKVxuXHRcdFx0XHRpZiAoIXNlbGYuX2Rlc3Ryb3llZClcblx0XHRcdFx0XHRzZWxmLmVtaXQoJ2Vycm9yJywgZXJyKVxuXHRcdFx0fSlcblx0XHR9XG5cdFx0cmVhZCgpXG5cdH0gZWxzZSB7XG5cdFx0c2VsZi5feGhyID0geGhyXG5cdFx0c2VsZi5fcG9zID0gMFxuXG5cdFx0c2VsZi51cmwgPSB4aHIucmVzcG9uc2VVUkxcblx0XHRzZWxmLnN0YXR1c0NvZGUgPSB4aHIuc3RhdHVzXG5cdFx0c2VsZi5zdGF0dXNNZXNzYWdlID0geGhyLnN0YXR1c1RleHRcblx0XHR2YXIgaGVhZGVycyA9IHhoci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKS5zcGxpdCgvXFxyP1xcbi8pXG5cdFx0aGVhZGVycy5mb3JFYWNoKGZ1bmN0aW9uIChoZWFkZXIpIHtcblx0XHRcdHZhciBtYXRjaGVzID0gaGVhZGVyLm1hdGNoKC9eKFteOl0rKTpcXHMqKC4qKS8pXG5cdFx0XHRpZiAobWF0Y2hlcykge1xuXHRcdFx0XHR2YXIga2V5ID0gbWF0Y2hlc1sxXS50b0xvd2VyQ2FzZSgpXG5cdFx0XHRcdGlmIChrZXkgPT09ICdzZXQtY29va2llJykge1xuXHRcdFx0XHRcdGlmIChzZWxmLmhlYWRlcnNba2V5XSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0XHRzZWxmLmhlYWRlcnNba2V5XSA9IFtdXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHNlbGYuaGVhZGVyc1trZXldLnB1c2gobWF0Y2hlc1syXSlcblx0XHRcdFx0fSBlbHNlIGlmIChzZWxmLmhlYWRlcnNba2V5XSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0c2VsZi5oZWFkZXJzW2tleV0gKz0gJywgJyArIG1hdGNoZXNbMl1cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzZWxmLmhlYWRlcnNba2V5XSA9IG1hdGNoZXNbMl1cblx0XHRcdFx0fVxuXHRcdFx0XHRzZWxmLnJhd0hlYWRlcnMucHVzaChtYXRjaGVzWzFdLCBtYXRjaGVzWzJdKVxuXHRcdFx0fVxuXHRcdH0pXG5cblx0XHRzZWxmLl9jaGFyc2V0ID0gJ3gtdXNlci1kZWZpbmVkJ1xuXHRcdGlmICghY2FwYWJpbGl0eS5vdmVycmlkZU1pbWVUeXBlKSB7XG5cdFx0XHR2YXIgbWltZVR5cGUgPSBzZWxmLnJhd0hlYWRlcnNbJ21pbWUtdHlwZSddXG5cdFx0XHRpZiAobWltZVR5cGUpIHtcblx0XHRcdFx0dmFyIGNoYXJzZXRNYXRjaCA9IG1pbWVUeXBlLm1hdGNoKC87XFxzKmNoYXJzZXQ9KFteO10pKDt8JCkvKVxuXHRcdFx0XHRpZiAoY2hhcnNldE1hdGNoKSB7XG5cdFx0XHRcdFx0c2VsZi5fY2hhcnNldCA9IGNoYXJzZXRNYXRjaFsxXS50b0xvd2VyQ2FzZSgpXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmICghc2VsZi5fY2hhcnNldClcblx0XHRcdFx0c2VsZi5fY2hhcnNldCA9ICd1dGYtOCcgLy8gYmVzdCBndWVzc1xuXHRcdH1cblx0fVxufVxuXG5pbmhlcml0cyhJbmNvbWluZ01lc3NhZ2UsIHN0cmVhbS5SZWFkYWJsZSlcblxuSW5jb21pbmdNZXNzYWdlLnByb3RvdHlwZS5fcmVhZCA9IGZ1bmN0aW9uICgpIHtcblx0dmFyIHNlbGYgPSB0aGlzXG5cblx0dmFyIHJlc29sdmUgPSBzZWxmLl9yZXN1bWVGZXRjaFxuXHRpZiAocmVzb2x2ZSkge1xuXHRcdHNlbGYuX3Jlc3VtZUZldGNoID0gbnVsbFxuXHRcdHJlc29sdmUoKVxuXHR9XG59XG5cbkluY29taW5nTWVzc2FnZS5wcm90b3R5cGUuX29uWEhSUHJvZ3Jlc3MgPSBmdW5jdGlvbiAoKSB7XG5cdHZhciBzZWxmID0gdGhpc1xuXG5cdHZhciB4aHIgPSBzZWxmLl94aHJcblxuXHR2YXIgcmVzcG9uc2UgPSBudWxsXG5cdHN3aXRjaCAoc2VsZi5fbW9kZSkge1xuXHRcdGNhc2UgJ3RleHQ6dmJhcnJheSc6IC8vIEZvciBJRTlcblx0XHRcdGlmICh4aHIucmVhZHlTdGF0ZSAhPT0gclN0YXRlcy5ET05FKVxuXHRcdFx0XHRicmVha1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0Ly8gVGhpcyBmYWlscyBpbiBJRThcblx0XHRcdFx0cmVzcG9uc2UgPSBuZXcgZ2xvYmFsLlZCQXJyYXkoeGhyLnJlc3BvbnNlQm9keSkudG9BcnJheSgpXG5cdFx0XHR9IGNhdGNoIChlKSB7fVxuXHRcdFx0aWYgKHJlc3BvbnNlICE9PSBudWxsKSB7XG5cdFx0XHRcdHNlbGYucHVzaChuZXcgQnVmZmVyKHJlc3BvbnNlKSlcblx0XHRcdFx0YnJlYWtcblx0XHRcdH1cblx0XHRcdC8vIEZhbGxzIHRocm91Z2ggaW4gSUU4XHRcblx0XHRjYXNlICd0ZXh0Jzpcblx0XHRcdHRyeSB7IC8vIFRoaXMgd2lsbCBmYWlsIHdoZW4gcmVhZHlTdGF0ZSA9IDMgaW4gSUU5LiBTd2l0Y2ggbW9kZSBhbmQgd2FpdCBmb3IgcmVhZHlTdGF0ZSA9IDRcblx0XHRcdFx0cmVzcG9uc2UgPSB4aHIucmVzcG9uc2VUZXh0XG5cdFx0XHR9IGNhdGNoIChlKSB7XG5cdFx0XHRcdHNlbGYuX21vZGUgPSAndGV4dDp2YmFycmF5J1xuXHRcdFx0XHRicmVha1xuXHRcdFx0fVxuXHRcdFx0aWYgKHJlc3BvbnNlLmxlbmd0aCA+IHNlbGYuX3Bvcykge1xuXHRcdFx0XHR2YXIgbmV3RGF0YSA9IHJlc3BvbnNlLnN1YnN0cihzZWxmLl9wb3MpXG5cdFx0XHRcdGlmIChzZWxmLl9jaGFyc2V0ID09PSAneC11c2VyLWRlZmluZWQnKSB7XG5cdFx0XHRcdFx0dmFyIGJ1ZmZlciA9IG5ldyBCdWZmZXIobmV3RGF0YS5sZW5ndGgpXG5cdFx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBuZXdEYXRhLmxlbmd0aDsgaSsrKVxuXHRcdFx0XHRcdFx0YnVmZmVyW2ldID0gbmV3RGF0YS5jaGFyQ29kZUF0KGkpICYgMHhmZlxuXG5cdFx0XHRcdFx0c2VsZi5wdXNoKGJ1ZmZlcilcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzZWxmLnB1c2gobmV3RGF0YSwgc2VsZi5fY2hhcnNldClcblx0XHRcdFx0fVxuXHRcdFx0XHRzZWxmLl9wb3MgPSByZXNwb25zZS5sZW5ndGhcblx0XHRcdH1cblx0XHRcdGJyZWFrXG5cdFx0Y2FzZSAnYXJyYXlidWZmZXInOlxuXHRcdFx0aWYgKHhoci5yZWFkeVN0YXRlICE9PSByU3RhdGVzLkRPTkUgfHwgIXhoci5yZXNwb25zZSlcblx0XHRcdFx0YnJlYWtcblx0XHRcdHJlc3BvbnNlID0geGhyLnJlc3BvbnNlXG5cdFx0XHRzZWxmLnB1c2gobmV3IEJ1ZmZlcihuZXcgVWludDhBcnJheShyZXNwb25zZSkpKVxuXHRcdFx0YnJlYWtcblx0XHRjYXNlICdtb3otY2h1bmtlZC1hcnJheWJ1ZmZlcic6IC8vIHRha2Ugd2hvbGVcblx0XHRcdHJlc3BvbnNlID0geGhyLnJlc3BvbnNlXG5cdFx0XHRpZiAoeGhyLnJlYWR5U3RhdGUgIT09IHJTdGF0ZXMuTE9BRElORyB8fCAhcmVzcG9uc2UpXG5cdFx0XHRcdGJyZWFrXG5cdFx0XHRzZWxmLnB1c2gobmV3IEJ1ZmZlcihuZXcgVWludDhBcnJheShyZXNwb25zZSkpKVxuXHRcdFx0YnJlYWtcblx0XHRjYXNlICdtcy1zdHJlYW0nOlxuXHRcdFx0cmVzcG9uc2UgPSB4aHIucmVzcG9uc2Vcblx0XHRcdGlmICh4aHIucmVhZHlTdGF0ZSAhPT0gclN0YXRlcy5MT0FESU5HKVxuXHRcdFx0XHRicmVha1xuXHRcdFx0dmFyIHJlYWRlciA9IG5ldyBnbG9iYWwuTVNTdHJlYW1SZWFkZXIoKVxuXHRcdFx0cmVhZGVyLm9ucHJvZ3Jlc3MgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdGlmIChyZWFkZXIucmVzdWx0LmJ5dGVMZW5ndGggPiBzZWxmLl9wb3MpIHtcblx0XHRcdFx0XHRzZWxmLnB1c2gobmV3IEJ1ZmZlcihuZXcgVWludDhBcnJheShyZWFkZXIucmVzdWx0LnNsaWNlKHNlbGYuX3BvcykpKSlcblx0XHRcdFx0XHRzZWxmLl9wb3MgPSByZWFkZXIucmVzdWx0LmJ5dGVMZW5ndGhcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0c2VsZi5wdXNoKG51bGwpXG5cdFx0XHR9XG5cdFx0XHQvLyByZWFkZXIub25lcnJvciA9ID8/PyAvLyBUT0RPOiB0aGlzXG5cdFx0XHRyZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIocmVzcG9uc2UpXG5cdFx0XHRicmVha1xuXHR9XG5cblx0Ly8gVGhlIG1zLXN0cmVhbSBjYXNlIGhhbmRsZXMgZW5kIHNlcGFyYXRlbHkgaW4gcmVhZGVyLm9ubG9hZCgpXG5cdGlmIChzZWxmLl94aHIucmVhZHlTdGF0ZSA9PT0gclN0YXRlcy5ET05FICYmIHNlbGYuX21vZGUgIT09ICdtcy1zdHJlYW0nKSB7XG5cdFx0c2VsZi5wdXNoKG51bGwpXG5cdH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/stream-http/lib/response.js\n");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nvar Readable = __webpack_require__(/*! ./_stream_readable */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js\");\nvar Writable = __webpack_require__(/*! ./_stream_writable */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js\");\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV9kdXBsZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV9kdXBsZXguanM/MTcxNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuLy8gYSBkdXBsZXggc3RyZWFtIGlzIGp1c3QgYSBzdHJlYW0gdGhhdCBpcyBib3RoIHJlYWRhYmxlIGFuZCB3cml0YWJsZS5cbi8vIFNpbmNlIEpTIGRvZXNuJ3QgaGF2ZSBtdWx0aXBsZSBwcm90b3R5cGFsIGluaGVyaXRhbmNlLCB0aGlzIGNsYXNzXG4vLyBwcm90b3R5cGFsbHkgaW5oZXJpdHMgZnJvbSBSZWFkYWJsZSwgYW5kIHRoZW4gcGFyYXNpdGljYWxseSBmcm9tXG4vLyBXcml0YWJsZS5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xuXG52YXIgcG5hID0gcmVxdWlyZSgncHJvY2Vzcy1uZXh0aWNrLWFyZ3MnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIG9iamVjdEtleXMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiAob2JqKSB7XG4gIHZhciBrZXlzID0gW107XG4gIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICBrZXlzLnB1c2goa2V5KTtcbiAgfXJldHVybiBrZXlzO1xufTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG5tb2R1bGUuZXhwb3J0cyA9IER1cGxleDtcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciB1dGlsID0gcmVxdWlyZSgnY29yZS11dGlsLWlzJyk7XG51dGlsLmluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG52YXIgUmVhZGFibGUgPSByZXF1aXJlKCcuL19zdHJlYW1fcmVhZGFibGUnKTtcbnZhciBXcml0YWJsZSA9IHJlcXVpcmUoJy4vX3N0cmVhbV93cml0YWJsZScpO1xuXG51dGlsLmluaGVyaXRzKER1cGxleCwgUmVhZGFibGUpO1xuXG57XG4gIC8vIGF2b2lkIHNjb3BlIGNyZWVwLCB0aGUga2V5cyBhcnJheSBjYW4gdGhlbiBiZSBjb2xsZWN0ZWRcbiAgdmFyIGtleXMgPSBvYmplY3RLZXlzKFdyaXRhYmxlLnByb3RvdHlwZSk7XG4gIGZvciAodmFyIHYgPSAwOyB2IDwga2V5cy5sZW5ndGg7IHYrKykge1xuICAgIHZhciBtZXRob2QgPSBrZXlzW3ZdO1xuICAgIGlmICghRHVwbGV4LnByb3RvdHlwZVttZXRob2RdKSBEdXBsZXgucHJvdG90eXBlW21ldGhvZF0gPSBXcml0YWJsZS5wcm90b3R5cGVbbWV0aG9kXTtcbiAgfVxufVxuXG5mdW5jdGlvbiBEdXBsZXgob3B0aW9ucykge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgRHVwbGV4KSkgcmV0dXJuIG5ldyBEdXBsZXgob3B0aW9ucyk7XG5cbiAgUmVhZGFibGUuY2FsbCh0aGlzLCBvcHRpb25zKTtcbiAgV3JpdGFibGUuY2FsbCh0aGlzLCBvcHRpb25zKTtcblxuICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLnJlYWRhYmxlID09PSBmYWxzZSkgdGhpcy5yZWFkYWJsZSA9IGZhbHNlO1xuXG4gIGlmIChvcHRpb25zICYmIG9wdGlvbnMud3JpdGFibGUgPT09IGZhbHNlKSB0aGlzLndyaXRhYmxlID0gZmFsc2U7XG5cbiAgdGhpcy5hbGxvd0hhbGZPcGVuID0gdHJ1ZTtcbiAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5hbGxvd0hhbGZPcGVuID09PSBmYWxzZSkgdGhpcy5hbGxvd0hhbGZPcGVuID0gZmFsc2U7XG5cbiAgdGhpcy5vbmNlKCdlbmQnLCBvbmVuZCk7XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShEdXBsZXgucHJvdG90eXBlLCAnd3JpdGFibGVIaWdoV2F0ZXJNYXJrJywge1xuICAvLyBtYWtpbmcgaXQgZXhwbGljaXQgdGhpcyBwcm9wZXJ0eSBpcyBub3QgZW51bWVyYWJsZVxuICAvLyBiZWNhdXNlIG90aGVyd2lzZSBzb21lIHByb3RvdHlwZSBtYW5pcHVsYXRpb24gaW5cbiAgLy8gdXNlcmxhbmQgd2lsbCBmYWlsXG4gIGVudW1lcmFibGU6IGZhbHNlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5oaWdoV2F0ZXJNYXJrO1xuICB9XG59KTtcblxuLy8gdGhlIG5vLWhhbGYtb3BlbiBlbmZvcmNlclxuZnVuY3Rpb24gb25lbmQoKSB7XG4gIC8vIGlmIHdlIGFsbG93IGhhbGYtb3BlbiBzdGF0ZSwgb3IgaWYgdGhlIHdyaXRhYmxlIHNpZGUgZW5kZWQsXG4gIC8vIHRoZW4gd2UncmUgb2suXG4gIGlmICh0aGlzLmFsbG93SGFsZk9wZW4gfHwgdGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRlZCkgcmV0dXJuO1xuXG4gIC8vIG5vIG1vcmUgZGF0YSBjYW4gYmUgd3JpdHRlbi5cbiAgLy8gQnV0IGFsbG93IG1vcmUgd3JpdGVzIHRvIGhhcHBlbiBpbiB0aGlzIHRpY2suXG4gIHBuYS5uZXh0VGljayhvbkVuZE5ULCB0aGlzKTtcbn1cblxuZnVuY3Rpb24gb25FbmROVChzZWxmKSB7XG4gIHNlbGYuZW5kKCk7XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShEdXBsZXgucHJvdG90eXBlLCAnZGVzdHJveWVkJywge1xuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5fcmVhZGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkIHx8IHRoaXMuX3dyaXRhYmxlU3RhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQgJiYgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQ7XG4gIH0sXG4gIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgLy8gd2UgaWdub3JlIHRoZSB2YWx1ZSBpZiB0aGUgc3RyZWFtXG4gICAgLy8gaGFzIG5vdCBiZWVuIGluaXRpYWxpemVkIHlldFxuICAgIGlmICh0aGlzLl9yZWFkYWJsZVN0YXRlID09PSB1bmRlZmluZWQgfHwgdGhpcy5fd3JpdGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gYmFja3dhcmQgY29tcGF0aWJpbGl0eSwgdGhlIHVzZXIgaXMgZXhwbGljaXRseVxuICAgIC8vIG1hbmFnaW5nIGRlc3Ryb3llZFxuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkID0gdmFsdWU7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB2YWx1ZTtcbiAgfVxufSk7XG5cbkR1cGxleC5wcm90b3R5cGUuX2Rlc3Ryb3kgPSBmdW5jdGlvbiAoZXJyLCBjYikge1xuICB0aGlzLnB1c2gobnVsbCk7XG4gIHRoaXMuZW5kKCk7XG5cbiAgcG5hLm5leHRUaWNrKGNiLCBlcnIpO1xufTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js\n");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\n\nmodule.exports = PassThrough;\n\nvar Transform = __webpack_require__(/*! ./_stream_transform */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js\");\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV9wYXNzdGhyb3VnaC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9zdHJlYW0taHR0cC9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3Bhc3N0aHJvdWdoLmpzPzQ2MWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbi8vIGEgcGFzc3Rocm91Z2ggc3RyZWFtLlxuLy8gYmFzaWNhbGx5IGp1c3QgdGhlIG1vc3QgbWluaW1hbCBzb3J0IG9mIFRyYW5zZm9ybSBzdHJlYW0uXG4vLyBFdmVyeSB3cml0dGVuIGNodW5rIGdldHMgb3V0cHV0IGFzLWlzLlxuXG4ndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUGFzc1Rocm91Z2g7XG5cbnZhciBUcmFuc2Zvcm0gPSByZXF1aXJlKCcuL19zdHJlYW1fdHJhbnNmb3JtJyk7XG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgdXRpbCA9IHJlcXVpcmUoJ2NvcmUtdXRpbC1pcycpO1xudXRpbC5pbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxudXRpbC5pbmhlcml0cyhQYXNzVGhyb3VnaCwgVHJhbnNmb3JtKTtcblxuZnVuY3Rpb24gUGFzc1Rocm91Z2gob3B0aW9ucykge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgUGFzc1Rocm91Z2gpKSByZXR1cm4gbmV3IFBhc3NUaHJvdWdoKG9wdGlvbnMpO1xuXG4gIFRyYW5zZm9ybS5jYWxsKHRoaXMsIG9wdGlvbnMpO1xufVxuXG5QYXNzVGhyb3VnaC5wcm90b3R5cGUuX3RyYW5zZm9ybSA9IGZ1bmN0aW9uIChjaHVuaywgZW5jb2RpbmcsIGNiKSB7XG4gIGNiKG51bGwsIGNodW5rKTtcbn07Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js\n");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = __webpack_require__(/*! util */ 0);\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = __webpack_require__(/*! ./internal/streams/BufferList */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/BufferList.js\");\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js\");\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js\n");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\n\nmodule.exports = Transform;\n\nvar Duplex = __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js\");\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js\n");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: __webpack_require__(/*! util-deprecate */ \"./node_modules/util-deprecate/browser.js\")\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js\");\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../../../../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV93cml0YWJsZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9zdHJlYW0taHR0cC9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3dyaXRhYmxlLmpzPzViYzIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbi8vIEEgYml0IHNpbXBsZXIgdGhhbiByZWFkYWJsZSBzdHJlYW1zLlxuLy8gSW1wbGVtZW50IGFuIGFzeW5jIC5fd3JpdGUoY2h1bmssIGVuY29kaW5nLCBjYiksIGFuZCBpdCdsbCBoYW5kbGUgYWxsXG4vLyB0aGUgZHJhaW4gZXZlbnQgZW1pc3Npb24gYW5kIGJ1ZmZlcmluZy5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xuXG52YXIgcG5hID0gcmVxdWlyZSgncHJvY2Vzcy1uZXh0aWNrLWFyZ3MnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFdyaXRhYmxlO1xuXG4vKiA8cmVwbGFjZW1lbnQ+ICovXG5mdW5jdGlvbiBXcml0ZVJlcShjaHVuaywgZW5jb2RpbmcsIGNiKSB7XG4gIHRoaXMuY2h1bmsgPSBjaHVuaztcbiAgdGhpcy5lbmNvZGluZyA9IGVuY29kaW5nO1xuICB0aGlzLmNhbGxiYWNrID0gY2I7XG4gIHRoaXMubmV4dCA9IG51bGw7XG59XG5cbi8vIEl0IHNlZW1zIGEgbGlua2VkIGxpc3QgYnV0IGl0IGlzIG5vdFxuLy8gdGhlcmUgd2lsbCBiZSBvbmx5IDIgb2YgdGhlc2UgZm9yIGVhY2ggc3RyZWFtXG5mdW5jdGlvbiBDb3JrZWRSZXF1ZXN0KHN0YXRlKSB7XG4gIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgdGhpcy5uZXh0ID0gbnVsbDtcbiAgdGhpcy5lbnRyeSA9IG51bGw7XG4gIHRoaXMuZmluaXNoID0gZnVuY3Rpb24gKCkge1xuICAgIG9uQ29ya2VkRmluaXNoKF90aGlzLCBzdGF0ZSk7XG4gIH07XG59XG4vKiA8L3JlcGxhY2VtZW50PiAqL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIGFzeW5jV3JpdGUgPSAhcHJvY2Vzcy5icm93c2VyICYmIFsndjAuMTAnLCAndjAuOS4nXS5pbmRleE9mKHByb2Nlc3MudmVyc2lvbi5zbGljZSgwLCA1KSkgPiAtMSA/IHNldEltbWVkaWF0ZSA6IHBuYS5uZXh0VGljaztcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIER1cGxleDtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG5Xcml0YWJsZS5Xcml0YWJsZVN0YXRlID0gV3JpdGFibGVTdGF0ZTtcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciB1dGlsID0gcmVxdWlyZSgnY29yZS11dGlsLWlzJyk7XG51dGlsLmluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIGludGVybmFsVXRpbCA9IHtcbiAgZGVwcmVjYXRlOiByZXF1aXJlKCd1dGlsLWRlcHJlY2F0ZScpXG59O1xuLyo8L3JlcGxhY2VtZW50PiovXG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgU3RyZWFtID0gcmVxdWlyZSgnLi9pbnRlcm5hbC9zdHJlYW1zL3N0cmVhbScpO1xuLyo8L3JlcGxhY2VtZW50PiovXG5cbi8qPHJlcGxhY2VtZW50PiovXG5cbnZhciBCdWZmZXIgPSByZXF1aXJlKCdzYWZlLWJ1ZmZlcicpLkJ1ZmZlcjtcbnZhciBPdXJVaW50OEFycmF5ID0gZ2xvYmFsLlVpbnQ4QXJyYXkgfHwgZnVuY3Rpb24gKCkge307XG5mdW5jdGlvbiBfdWludDhBcnJheVRvQnVmZmVyKGNodW5rKSB7XG4gIHJldHVybiBCdWZmZXIuZnJvbShjaHVuayk7XG59XG5mdW5jdGlvbiBfaXNVaW50OEFycmF5KG9iaikge1xuICByZXR1cm4gQnVmZmVyLmlzQnVmZmVyKG9iaikgfHwgb2JqIGluc3RhbmNlb2YgT3VyVWludDhBcnJheTtcbn1cblxuLyo8L3JlcGxhY2VtZW50PiovXG5cbnZhciBkZXN0cm95SW1wbCA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvc3RyZWFtcy9kZXN0cm95Jyk7XG5cbnV0aWwuaW5oZXJpdHMoV3JpdGFibGUsIFN0cmVhbSk7XG5cbmZ1bmN0aW9uIG5vcCgpIHt9XG5cbmZ1bmN0aW9uIFdyaXRhYmxlU3RhdGUob3B0aW9ucywgc3RyZWFtKSB7XG4gIER1cGxleCA9IER1cGxleCB8fCByZXF1aXJlKCcuL19zdHJlYW1fZHVwbGV4Jyk7XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgLy8gRHVwbGV4IHN0cmVhbXMgYXJlIGJvdGggcmVhZGFibGUgYW5kIHdyaXRhYmxlLCBidXQgc2hhcmVcbiAgLy8gdGhlIHNhbWUgb3B0aW9ucyBvYmplY3QuXG4gIC8vIEhvd2V2ZXIsIHNvbWUgY2FzZXMgcmVxdWlyZSBzZXR0aW5nIG9wdGlvbnMgdG8gZGlmZmVyZW50XG4gIC8vIHZhbHVlcyBmb3IgdGhlIHJlYWRhYmxlIGFuZCB0aGUgd3JpdGFibGUgc2lkZXMgb2YgdGhlIGR1cGxleCBzdHJlYW0uXG4gIC8vIFRoZXNlIG9wdGlvbnMgY2FuIGJlIHByb3ZpZGVkIHNlcGFyYXRlbHkgYXMgcmVhZGFibGVYWFggYW5kIHdyaXRhYmxlWFhYLlxuICB2YXIgaXNEdXBsZXggPSBzdHJlYW0gaW5zdGFuY2VvZiBEdXBsZXg7XG5cbiAgLy8gb2JqZWN0IHN0cmVhbSBmbGFnIHRvIGluZGljYXRlIHdoZXRoZXIgb3Igbm90IHRoaXMgc3RyZWFtXG4gIC8vIGNvbnRhaW5zIGJ1ZmZlcnMgb3Igb2JqZWN0cy5cbiAgdGhpcy5vYmplY3RNb2RlID0gISFvcHRpb25zLm9iamVjdE1vZGU7XG5cbiAgaWYgKGlzRHVwbGV4KSB0aGlzLm9iamVjdE1vZGUgPSB0aGlzLm9iamVjdE1vZGUgfHwgISFvcHRpb25zLndyaXRhYmxlT2JqZWN0TW9kZTtcblxuICAvLyB0aGUgcG9pbnQgYXQgd2hpY2ggd3JpdGUoKSBzdGFydHMgcmV0dXJuaW5nIGZhbHNlXG4gIC8vIE5vdGU6IDAgaXMgYSB2YWxpZCB2YWx1ZSwgbWVhbnMgdGhhdCB3ZSBhbHdheXMgcmV0dXJuIGZhbHNlIGlmXG4gIC8vIHRoZSBlbnRpcmUgYnVmZmVyIGlzIG5vdCBmbHVzaGVkIGltbWVkaWF0ZWx5IG9uIHdyaXRlKClcbiAgdmFyIGh3bSA9IG9wdGlvbnMuaGlnaFdhdGVyTWFyaztcbiAgdmFyIHdyaXRhYmxlSHdtID0gb3B0aW9ucy53cml0YWJsZUhpZ2hXYXRlck1hcms7XG4gIHZhciBkZWZhdWx0SHdtID0gdGhpcy5vYmplY3RNb2RlID8gMTYgOiAxNiAqIDEwMjQ7XG5cbiAgaWYgKGh3bSB8fCBod20gPT09IDApIHRoaXMuaGlnaFdhdGVyTWFyayA9IGh3bTtlbHNlIGlmIChpc0R1cGxleCAmJiAod3JpdGFibGVId20gfHwgd3JpdGFibGVId20gPT09IDApKSB0aGlzLmhpZ2hXYXRlck1hcmsgPSB3cml0YWJsZUh3bTtlbHNlIHRoaXMuaGlnaFdhdGVyTWFyayA9IGRlZmF1bHRId207XG5cbiAgLy8gY2FzdCB0byBpbnRzLlxuICB0aGlzLmhpZ2hXYXRlck1hcmsgPSBNYXRoLmZsb29yKHRoaXMuaGlnaFdhdGVyTWFyayk7XG5cbiAgLy8gaWYgX2ZpbmFsIGhhcyBiZWVuIGNhbGxlZFxuICB0aGlzLmZpbmFsQ2FsbGVkID0gZmFsc2U7XG5cbiAgLy8gZHJhaW4gZXZlbnQgZmxhZy5cbiAgdGhpcy5uZWVkRHJhaW4gPSBmYWxzZTtcbiAgLy8gYXQgdGhlIHN0YXJ0IG9mIGNhbGxpbmcgZW5kKClcbiAgdGhpcy5lbmRpbmcgPSBmYWxzZTtcbiAgLy8gd2hlbiBlbmQoKSBoYXMgYmVlbiBjYWxsZWQsIGFuZCByZXR1cm5lZFxuICB0aGlzLmVuZGVkID0gZmFsc2U7XG4gIC8vIHdoZW4gJ2ZpbmlzaCcgaXMgZW1pdHRlZFxuICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG5cbiAgLy8gaGFzIGl0IGJlZW4gZGVzdHJveWVkXG4gIHRoaXMuZGVzdHJveWVkID0gZmFsc2U7XG5cbiAgLy8gc2hvdWxkIHdlIGRlY29kZSBzdHJpbmdzIGludG8gYnVmZmVycyBiZWZvcmUgcGFzc2luZyB0byBfd3JpdGU/XG4gIC8vIHRoaXMgaXMgaGVyZSBzbyB0aGF0IHNvbWUgbm9kZS1jb3JlIHN0cmVhbXMgY2FuIG9wdGltaXplIHN0cmluZ1xuICAvLyBoYW5kbGluZyBhdCBhIGxvd2VyIGxldmVsLlxuICB2YXIgbm9EZWNvZGUgPSBvcHRpb25zLmRlY29kZVN0cmluZ3MgPT09IGZhbHNlO1xuICB0aGlzLmRlY29kZVN0cmluZ3MgPSAhbm9EZWNvZGU7XG5cbiAgLy8gQ3J5cHRvIGlzIGtpbmQgb2Ygb2xkIGFuZCBjcnVzdHkuICBIaXN0b3JpY2FsbHksIGl0cyBkZWZhdWx0IHN0cmluZ1xuICAvLyBlbmNvZGluZyBpcyAnYmluYXJ5JyBzbyB3ZSBoYXZlIHRvIG1ha2UgdGhpcyBjb25maWd1cmFibGUuXG4gIC8vIEV2ZXJ5dGhpbmcgZWxzZSBpbiB0aGUgdW5pdmVyc2UgdXNlcyAndXRmOCcsIHRob3VnaC5cbiAgdGhpcy5kZWZhdWx0RW5jb2RpbmcgPSBvcHRpb25zLmRlZmF1bHRFbmNvZGluZyB8fCAndXRmOCc7XG5cbiAgLy8gbm90IGFuIGFjdHVhbCBidWZmZXIgd2Uga2VlcCB0cmFjayBvZiwgYnV0IGEgbWVhc3VyZW1lbnRcbiAgLy8gb2YgaG93IG11Y2ggd2UncmUgd2FpdGluZyB0byBnZXQgcHVzaGVkIHRvIHNvbWUgdW5kZXJseWluZ1xuICAvLyBzb2NrZXQgb3IgZmlsZS5cbiAgdGhpcy5sZW5ndGggPSAwO1xuXG4gIC8vIGEgZmxhZyB0byBzZWUgd2hlbiB3ZSdyZSBpbiB0aGUgbWlkZGxlIG9mIGEgd3JpdGUuXG4gIHRoaXMud3JpdGluZyA9IGZhbHNlO1xuXG4gIC8vIHdoZW4gdHJ1ZSBhbGwgd3JpdGVzIHdpbGwgYmUgYnVmZmVyZWQgdW50aWwgLnVuY29yaygpIGNhbGxcbiAgdGhpcy5jb3JrZWQgPSAwO1xuXG4gIC8vIGEgZmxhZyB0byBiZSBhYmxlIHRvIHRlbGwgaWYgdGhlIG9ud3JpdGUgY2IgaXMgY2FsbGVkIGltbWVkaWF0ZWx5LFxuICAvLyBvciBvbiBhIGxhdGVyIHRpY2suICBXZSBzZXQgdGhpcyB0byB0cnVlIGF0IGZpcnN0LCBiZWNhdXNlIGFueVxuICAvLyBhY3Rpb25zIHRoYXQgc2hvdWxkbid0IGhhcHBlbiB1bnRpbCBcImxhdGVyXCIgc2hvdWxkIGdlbmVyYWxseSBhbHNvXG4gIC8vIG5vdCBoYXBwZW4gYmVmb3JlIHRoZSBmaXJzdCB3cml0ZSBjYWxsLlxuICB0aGlzLnN5bmMgPSB0cnVlO1xuXG4gIC8vIGEgZmxhZyB0byBrbm93IGlmIHdlJ3JlIHByb2Nlc3NpbmcgcHJldmlvdXNseSBidWZmZXJlZCBpdGVtcywgd2hpY2hcbiAgLy8gbWF5IGNhbGwgdGhlIF93cml0ZSgpIGNhbGxiYWNrIGluIHRoZSBzYW1lIHRpY2ssIHNvIHRoYXQgd2UgZG9uJ3RcbiAgLy8gZW5kIHVwIGluIGFuIG92ZXJsYXBwZWQgb253cml0ZSBzaXR1YXRpb24uXG4gIHRoaXMuYnVmZmVyUHJvY2Vzc2luZyA9IGZhbHNlO1xuXG4gIC8vIHRoZSBjYWxsYmFjayB0aGF0J3MgcGFzc2VkIHRvIF93cml0ZShjaHVuayxjYilcbiAgdGhpcy5vbndyaXRlID0gZnVuY3Rpb24gKGVyKSB7XG4gICAgb253cml0ZShzdHJlYW0sIGVyKTtcbiAgfTtcblxuICAvLyB0aGUgY2FsbGJhY2sgdGhhdCB0aGUgdXNlciBzdXBwbGllcyB0byB3cml0ZShjaHVuayxlbmNvZGluZyxjYilcbiAgdGhpcy53cml0ZWNiID0gbnVsbDtcblxuICAvLyB0aGUgYW1vdW50IHRoYXQgaXMgYmVpbmcgd3JpdHRlbiB3aGVuIF93cml0ZSBpcyBjYWxsZWQuXG4gIHRoaXMud3JpdGVsZW4gPSAwO1xuXG4gIHRoaXMuYnVmZmVyZWRSZXF1ZXN0ID0gbnVsbDtcbiAgdGhpcy5sYXN0QnVmZmVyZWRSZXF1ZXN0ID0gbnVsbDtcblxuICAvLyBudW1iZXIgb2YgcGVuZGluZyB1c2VyLXN1cHBsaWVkIHdyaXRlIGNhbGxiYWNrc1xuICAvLyB0aGlzIG11c3QgYmUgMCBiZWZvcmUgJ2ZpbmlzaCcgY2FuIGJlIGVtaXR0ZWRcbiAgdGhpcy5wZW5kaW5nY2IgPSAwO1xuXG4gIC8vIGVtaXQgcHJlZmluaXNoIGlmIHRoZSBvbmx5IHRoaW5nIHdlJ3JlIHdhaXRpbmcgZm9yIGlzIF93cml0ZSBjYnNcbiAgLy8gVGhpcyBpcyByZWxldmFudCBmb3Igc3luY2hyb25vdXMgVHJhbnNmb3JtIHN0cmVhbXNcbiAgdGhpcy5wcmVmaW5pc2hlZCA9IGZhbHNlO1xuXG4gIC8vIFRydWUgaWYgdGhlIGVycm9yIHdhcyBhbHJlYWR5IGVtaXR0ZWQgYW5kIHNob3VsZCBub3QgYmUgdGhyb3duIGFnYWluXG4gIHRoaXMuZXJyb3JFbWl0dGVkID0gZmFsc2U7XG5cbiAgLy8gY291bnQgYnVmZmVyZWQgcmVxdWVzdHNcbiAgdGhpcy5idWZmZXJlZFJlcXVlc3RDb3VudCA9IDA7XG5cbiAgLy8gYWxsb2NhdGUgdGhlIGZpcnN0IENvcmtlZFJlcXVlc3QsIHRoZXJlIGlzIGFsd2F5c1xuICAvLyBvbmUgYWxsb2NhdGVkIGFuZCBmcmVlIHRvIHVzZSwgYW5kIHdlIG1haW50YWluIGF0IG1vc3QgdHdvXG4gIHRoaXMuY29ya2VkUmVxdWVzdHNGcmVlID0gbmV3IENvcmtlZFJlcXVlc3QodGhpcyk7XG59XG5cbldyaXRhYmxlU3RhdGUucHJvdG90eXBlLmdldEJ1ZmZlciA9IGZ1bmN0aW9uIGdldEJ1ZmZlcigpIHtcbiAgdmFyIGN1cnJlbnQgPSB0aGlzLmJ1ZmZlcmVkUmVxdWVzdDtcbiAgdmFyIG91dCA9IFtdO1xuICB3aGlsZSAoY3VycmVudCkge1xuICAgIG91dC5wdXNoKGN1cnJlbnQpO1xuICAgIGN1cnJlbnQgPSBjdXJyZW50Lm5leHQ7XG4gIH1cbiAgcmV0dXJuIG91dDtcbn07XG5cbihmdW5jdGlvbiAoKSB7XG4gIHRyeSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFdyaXRhYmxlU3RhdGUucHJvdG90eXBlLCAnYnVmZmVyJywge1xuICAgICAgZ2V0OiBpbnRlcm5hbFV0aWwuZGVwcmVjYXRlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0QnVmZmVyKCk7XG4gICAgICB9LCAnX3dyaXRhYmxlU3RhdGUuYnVmZmVyIGlzIGRlcHJlY2F0ZWQuIFVzZSBfd3JpdGFibGVTdGF0ZS5nZXRCdWZmZXIgJyArICdpbnN0ZWFkLicsICdERVAwMDAzJylcbiAgICB9KTtcbiAgfSBjYXRjaCAoXykge31cbn0pKCk7XG5cbi8vIFRlc3QgX3dyaXRhYmxlU3RhdGUgZm9yIGluaGVyaXRhbmNlIHRvIGFjY291bnQgZm9yIER1cGxleCBzdHJlYW1zLFxuLy8gd2hvc2UgcHJvdG90eXBlIGNoYWluIG9ubHkgcG9pbnRzIHRvIFJlYWRhYmxlLlxudmFyIHJlYWxIYXNJbnN0YW5jZTtcbmlmICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIFN5bWJvbC5oYXNJbnN0YW5jZSAmJiB0eXBlb2YgRnVuY3Rpb24ucHJvdG90eXBlW1N5bWJvbC5oYXNJbnN0YW5jZV0gPT09ICdmdW5jdGlvbicpIHtcbiAgcmVhbEhhc0luc3RhbmNlID0gRnVuY3Rpb24ucHJvdG90eXBlW1N5bWJvbC5oYXNJbnN0YW5jZV07XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZSwgU3ltYm9sLmhhc0luc3RhbmNlLCB7XG4gICAgdmFsdWU6IGZ1bmN0aW9uIChvYmplY3QpIHtcbiAgICAgIGlmIChyZWFsSGFzSW5zdGFuY2UuY2FsbCh0aGlzLCBvYmplY3QpKSByZXR1cm4gdHJ1ZTtcbiAgICAgIGlmICh0aGlzICE9PSBXcml0YWJsZSkgcmV0dXJuIGZhbHNlO1xuXG4gICAgICByZXR1cm4gb2JqZWN0ICYmIG9iamVjdC5fd3JpdGFibGVTdGF0ZSBpbnN0YW5jZW9mIFdyaXRhYmxlU3RhdGU7XG4gICAgfVxuICB9KTtcbn0gZWxzZSB7XG4gIHJlYWxIYXNJbnN0YW5jZSA9IGZ1bmN0aW9uIChvYmplY3QpIHtcbiAgICByZXR1cm4gb2JqZWN0IGluc3RhbmNlb2YgdGhpcztcbiAgfTtcbn1cblxuZnVuY3Rpb24gV3JpdGFibGUob3B0aW9ucykge1xuICBEdXBsZXggPSBEdXBsZXggfHwgcmVxdWlyZSgnLi9fc3RyZWFtX2R1cGxleCcpO1xuXG4gIC8vIFdyaXRhYmxlIGN0b3IgaXMgYXBwbGllZCB0byBEdXBsZXhlcywgdG9vLlxuICAvLyBgcmVhbEhhc0luc3RhbmNlYCBpcyBuZWNlc3NhcnkgYmVjYXVzZSB1c2luZyBwbGFpbiBgaW5zdGFuY2VvZmBcbiAgLy8gd291bGQgcmV0dXJuIGZhbHNlLCBhcyBubyBgX3dyaXRhYmxlU3RhdGVgIHByb3BlcnR5IGlzIGF0dGFjaGVkLlxuXG4gIC8vIFRyeWluZyB0byB1c2UgdGhlIGN1c3RvbSBgaW5zdGFuY2VvZmAgZm9yIFdyaXRhYmxlIGhlcmUgd2lsbCBhbHNvIGJyZWFrIHRoZVxuICAvLyBOb2RlLmpzIExhenlUcmFuc2Zvcm0gaW1wbGVtZW50YXRpb24sIHdoaWNoIGhhcyBhIG5vbi10cml2aWFsIGdldHRlciBmb3JcbiAgLy8gYF93cml0YWJsZVN0YXRlYCB0aGF0IHdvdWxkIGxlYWQgdG8gaW5maW5pdGUgcmVjdXJzaW9uLlxuICBpZiAoIXJlYWxIYXNJbnN0YW5jZS5jYWxsKFdyaXRhYmxlLCB0aGlzKSAmJiAhKHRoaXMgaW5zdGFuY2VvZiBEdXBsZXgpKSB7XG4gICAgcmV0dXJuIG5ldyBXcml0YWJsZShvcHRpb25zKTtcbiAgfVxuXG4gIHRoaXMuX3dyaXRhYmxlU3RhdGUgPSBuZXcgV3JpdGFibGVTdGF0ZShvcHRpb25zLCB0aGlzKTtcblxuICAvLyBsZWdhY3kuXG4gIHRoaXMud3JpdGFibGUgPSB0cnVlO1xuXG4gIGlmIChvcHRpb25zKSB7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLndyaXRlID09PSAnZnVuY3Rpb24nKSB0aGlzLl93cml0ZSA9IG9wdGlvbnMud3JpdGU7XG5cbiAgICBpZiAodHlwZW9mIG9wdGlvbnMud3JpdGV2ID09PSAnZnVuY3Rpb24nKSB0aGlzLl93cml0ZXYgPSBvcHRpb25zLndyaXRldjtcblxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5kZXN0cm95ID09PSAnZnVuY3Rpb24nKSB0aGlzLl9kZXN0cm95ID0gb3B0aW9ucy5kZXN0cm95O1xuXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLmZpbmFsID09PSAnZnVuY3Rpb24nKSB0aGlzLl9maW5hbCA9IG9wdGlvbnMuZmluYWw7XG4gIH1cblxuICBTdHJlYW0uY2FsbCh0aGlzKTtcbn1cblxuLy8gT3RoZXJ3aXNlIHBlb3BsZSBjYW4gcGlwZSBXcml0YWJsZSBzdHJlYW1zLCB3aGljaCBpcyBqdXN0IHdyb25nLlxuV3JpdGFibGUucHJvdG90eXBlLnBpcGUgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IoJ0Nhbm5vdCBwaXBlLCBub3QgcmVhZGFibGUnKSk7XG59O1xuXG5mdW5jdGlvbiB3cml0ZUFmdGVyRW5kKHN0cmVhbSwgY2IpIHtcbiAgdmFyIGVyID0gbmV3IEVycm9yKCd3cml0ZSBhZnRlciBlbmQnKTtcbiAgLy8gVE9ETzogZGVmZXIgZXJyb3IgZXZlbnRzIGNvbnNpc3RlbnRseSBldmVyeXdoZXJlLCBub3QganVzdCB0aGUgY2JcbiAgc3RyZWFtLmVtaXQoJ2Vycm9yJywgZXIpO1xuICBwbmEubmV4dFRpY2soY2IsIGVyKTtcbn1cblxuLy8gQ2hlY2tzIHRoYXQgYSB1c2VyLXN1cHBsaWVkIGNodW5rIGlzIHZhbGlkLCBlc3BlY2lhbGx5IGZvciB0aGUgcGFydGljdWxhclxuLy8gbW9kZSB0aGUgc3RyZWFtIGlzIGluLiBDdXJyZW50bHkgdGhpcyBtZWFucyB0aGF0IGBudWxsYCBpcyBuZXZlciBhY2NlcHRlZFxuLy8gYW5kIHVuZGVmaW5lZC9ub24tc3RyaW5nIHZhbHVlcyBhcmUgb25seSBhbGxvd2VkIGluIG9iamVjdCBtb2RlLlxuZnVuY3Rpb24gdmFsaWRDaHVuayhzdHJlYW0sIHN0YXRlLCBjaHVuaywgY2IpIHtcbiAgdmFyIHZhbGlkID0gdHJ1ZTtcbiAgdmFyIGVyID0gZmFsc2U7XG5cbiAgaWYgKGNodW5rID09PSBudWxsKSB7XG4gICAgZXIgPSBuZXcgVHlwZUVycm9yKCdNYXkgbm90IHdyaXRlIG51bGwgdmFsdWVzIHRvIHN0cmVhbScpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBjaHVuayAhPT0gJ3N0cmluZycgJiYgY2h1bmsgIT09IHVuZGVmaW5lZCAmJiAhc3RhdGUub2JqZWN0TW9kZSkge1xuICAgIGVyID0gbmV3IFR5cGVFcnJvcignSW52YWxpZCBub24tc3RyaW5nL2J1ZmZlciBjaHVuaycpO1xuICB9XG4gIGlmIChlcikge1xuICAgIHN0cmVhbS5lbWl0KCdlcnJvcicsIGVyKTtcbiAgICBwbmEubmV4dFRpY2soY2IsIGVyKTtcbiAgICB2YWxpZCA9IGZhbHNlO1xuICB9XG4gIHJldHVybiB2YWxpZDtcbn1cblxuV3JpdGFibGUucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24gKGNodW5rLCBlbmNvZGluZywgY2IpIHtcbiAgdmFyIHN0YXRlID0gdGhpcy5fd3JpdGFibGVTdGF0ZTtcbiAgdmFyIHJldCA9IGZhbHNlO1xuICB2YXIgaXNCdWYgPSAhc3RhdGUub2JqZWN0TW9kZSAmJiBfaXNVaW50OEFycmF5KGNodW5rKTtcblxuICBpZiAoaXNCdWYgJiYgIUJ1ZmZlci5pc0J1ZmZlcihjaHVuaykpIHtcbiAgICBjaHVuayA9IF91aW50OEFycmF5VG9CdWZmZXIoY2h1bmspO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBlbmNvZGluZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNiID0gZW5jb2Rpbmc7XG4gICAgZW5jb2RpbmcgPSBudWxsO1xuICB9XG5cbiAgaWYgKGlzQnVmKSBlbmNvZGluZyA9ICdidWZmZXInO2Vsc2UgaWYgKCFlbmNvZGluZykgZW5jb2RpbmcgPSBzdGF0ZS5kZWZhdWx0RW5jb2Rpbmc7XG5cbiAgaWYgKHR5cGVvZiBjYiAhPT0gJ2Z1bmN0aW9uJykgY2IgPSBub3A7XG5cbiAgaWYgKHN0YXRlLmVuZGVkKSB3cml0ZUFmdGVyRW5kKHRoaXMsIGNiKTtlbHNlIGlmIChpc0J1ZiB8fCB2YWxpZENodW5rKHRoaXMsIHN0YXRlLCBjaHVuaywgY2IpKSB7XG4gICAgc3RhdGUucGVuZGluZ2NiKys7XG4gICAgcmV0ID0gd3JpdGVPckJ1ZmZlcih0aGlzLCBzdGF0ZSwgaXNCdWYsIGNodW5rLCBlbmNvZGluZywgY2IpO1xuICB9XG5cbiAgcmV0dXJuIHJldDtcbn07XG5cbldyaXRhYmxlLnByb3RvdHlwZS5jb3JrID0gZnVuY3Rpb24gKCkge1xuICB2YXIgc3RhdGUgPSB0aGlzLl93cml0YWJsZVN0YXRlO1xuXG4gIHN0YXRlLmNvcmtlZCsrO1xufTtcblxuV3JpdGFibGUucHJvdG90eXBlLnVuY29yayA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHN0YXRlID0gdGhpcy5fd3JpdGFibGVTdGF0ZTtcblxuICBpZiAoc3RhdGUuY29ya2VkKSB7XG4gICAgc3RhdGUuY29ya2VkLS07XG5cbiAgICBpZiAoIXN0YXRlLndyaXRpbmcgJiYgIXN0YXRlLmNvcmtlZCAmJiAhc3RhdGUuZmluaXNoZWQgJiYgIXN0YXRlLmJ1ZmZlclByb2Nlc3NpbmcgJiYgc3RhdGUuYnVmZmVyZWRSZXF1ZXN0KSBjbGVhckJ1ZmZlcih0aGlzLCBzdGF0ZSk7XG4gIH1cbn07XG5cbldyaXRhYmxlLnByb3RvdHlwZS5zZXREZWZhdWx0RW5jb2RpbmcgPSBmdW5jdGlvbiBzZXREZWZhdWx0RW5jb2RpbmcoZW5jb2RpbmcpIHtcbiAgLy8gbm9kZTo6UGFyc2VFbmNvZGluZygpIHJlcXVpcmVzIGxvd2VyIGNhc2UuXG4gIGlmICh0eXBlb2YgZW5jb2RpbmcgPT09ICdzdHJpbmcnKSBlbmNvZGluZyA9IGVuY29kaW5nLnRvTG93ZXJDYXNlKCk7XG4gIGlmICghKFsnaGV4JywgJ3V0ZjgnLCAndXRmLTgnLCAnYXNjaWknLCAnYmluYXJ5JywgJ2Jhc2U2NCcsICd1Y3MyJywgJ3Vjcy0yJywgJ3V0ZjE2bGUnLCAndXRmLTE2bGUnLCAncmF3J10uaW5kZXhPZigoZW5jb2RpbmcgKyAnJykudG9Mb3dlckNhc2UoKSkgPiAtMSkpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBlbmNvZGluZyk7XG4gIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVmYXVsdEVuY29kaW5nID0gZW5jb2Rpbmc7XG4gIHJldHVybiB0aGlzO1xufTtcblxuZnVuY3Rpb24gZGVjb2RlQ2h1bmsoc3RhdGUsIGNodW5rLCBlbmNvZGluZykge1xuICBpZiAoIXN0YXRlLm9iamVjdE1vZGUgJiYgc3RhdGUuZGVjb2RlU3RyaW5ncyAhPT0gZmFsc2UgJiYgdHlwZW9mIGNodW5rID09PSAnc3RyaW5nJykge1xuICAgIGNodW5rID0gQnVmZmVyLmZyb20oY2h1bmssIGVuY29kaW5nKTtcbiAgfVxuICByZXR1cm4gY2h1bms7XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZS5wcm90b3R5cGUsICd3cml0YWJsZUhpZ2hXYXRlck1hcmsnLCB7XG4gIC8vIG1ha2luZyBpdCBleHBsaWNpdCB0aGlzIHByb3BlcnR5IGlzIG5vdCBlbnVtZXJhYmxlXG4gIC8vIGJlY2F1c2Ugb3RoZXJ3aXNlIHNvbWUgcHJvdG90eXBlIG1hbmlwdWxhdGlvbiBpblxuICAvLyB1c2VybGFuZCB3aWxsIGZhaWxcbiAgZW51bWVyYWJsZTogZmFsc2UsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLl93cml0YWJsZVN0YXRlLmhpZ2hXYXRlck1hcms7XG4gIH1cbn0pO1xuXG4vLyBpZiB3ZSdyZSBhbHJlYWR5IHdyaXRpbmcgc29tZXRoaW5nLCB0aGVuIGp1c3QgcHV0IHRoaXNcbi8vIGluIHRoZSBxdWV1ZSwgYW5kIHdhaXQgb3VyIHR1cm4uICBPdGhlcndpc2UsIGNhbGwgX3dyaXRlXG4vLyBJZiB3ZSByZXR1cm4gZmFsc2UsIHRoZW4gd2UgbmVlZCBhIGRyYWluIGV2ZW50LCBzbyBzZXQgdGhhdCBmbGFnLlxuZnVuY3Rpb24gd3JpdGVPckJ1ZmZlcihzdHJlYW0sIHN0YXRlLCBpc0J1ZiwgY2h1bmssIGVuY29kaW5nLCBjYikge1xuICBpZiAoIWlzQnVmKSB7XG4gICAgdmFyIG5ld0NodW5rID0gZGVjb2RlQ2h1bmsoc3RhdGUsIGNodW5rLCBlbmNvZGluZyk7XG4gICAgaWYgKGNodW5rICE9PSBuZXdDaHVuaykge1xuICAgICAgaXNCdWYgPSB0cnVlO1xuICAgICAgZW5jb2RpbmcgPSAnYnVmZmVyJztcbiAgICAgIGNodW5rID0gbmV3Q2h1bms7XG4gICAgfVxuICB9XG4gIHZhciBsZW4gPSBzdGF0ZS5vYmplY3RNb2RlID8gMSA6IGNodW5rLmxlbmd0aDtcblxuICBzdGF0ZS5sZW5ndGggKz0gbGVuO1xuXG4gIHZhciByZXQgPSBzdGF0ZS5sZW5ndGggPCBzdGF0ZS5oaWdoV2F0ZXJNYXJrO1xuICAvLyB3ZSBtdXN0IGVuc3VyZSB0aGF0IHByZXZpb3VzIG5lZWREcmFpbiB3aWxsIG5vdCBiZSByZXNldCB0byBmYWxzZS5cbiAgaWYgKCFyZXQpIHN0YXRlLm5lZWREcmFpbiA9IHRydWU7XG5cbiAgaWYgKHN0YXRlLndyaXRpbmcgfHwgc3RhdGUuY29ya2VkKSB7XG4gICAgdmFyIGxhc3QgPSBzdGF0ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0O1xuICAgIHN0YXRlLmxhc3RCdWZmZXJlZFJlcXVlc3QgPSB7XG4gICAgICBjaHVuazogY2h1bmssXG4gICAgICBlbmNvZGluZzogZW5jb2RpbmcsXG4gICAgICBpc0J1ZjogaXNCdWYsXG4gICAgICBjYWxsYmFjazogY2IsXG4gICAgICBuZXh0OiBudWxsXG4gICAgfTtcbiAgICBpZiAobGFzdCkge1xuICAgICAgbGFzdC5uZXh0ID0gc3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdDtcbiAgICB9IGVsc2Uge1xuICAgICAgc3RhdGUuYnVmZmVyZWRSZXF1ZXN0ID0gc3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdDtcbiAgICB9XG4gICAgc3RhdGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQgKz0gMTtcbiAgfSBlbHNlIHtcbiAgICBkb1dyaXRlKHN0cmVhbSwgc3RhdGUsIGZhbHNlLCBsZW4sIGNodW5rLCBlbmNvZGluZywgY2IpO1xuICB9XG5cbiAgcmV0dXJuIHJldDtcbn1cblxuZnVuY3Rpb24gZG9Xcml0ZShzdHJlYW0sIHN0YXRlLCB3cml0ZXYsIGxlbiwgY2h1bmssIGVuY29kaW5nLCBjYikge1xuICBzdGF0ZS53cml0ZWxlbiA9IGxlbjtcbiAgc3RhdGUud3JpdGVjYiA9IGNiO1xuICBzdGF0ZS53cml0aW5nID0gdHJ1ZTtcbiAgc3RhdGUuc3luYyA9IHRydWU7XG4gIGlmICh3cml0ZXYpIHN0cmVhbS5fd3JpdGV2KGNodW5rLCBzdGF0ZS5vbndyaXRlKTtlbHNlIHN0cmVhbS5fd3JpdGUoY2h1bmssIGVuY29kaW5nLCBzdGF0ZS5vbndyaXRlKTtcbiAgc3RhdGUuc3luYyA9IGZhbHNlO1xufVxuXG5mdW5jdGlvbiBvbndyaXRlRXJyb3Ioc3RyZWFtLCBzdGF0ZSwgc3luYywgZXIsIGNiKSB7XG4gIC0tc3RhdGUucGVuZGluZ2NiO1xuXG4gIGlmIChzeW5jKSB7XG4gICAgLy8gZGVmZXIgdGhlIGNhbGxiYWNrIGlmIHdlIGFyZSBiZWluZyBjYWxsZWQgc3luY2hyb25vdXNseVxuICAgIC8vIHRvIGF2b2lkIHBpbGluZyB1cCB0aGluZ3Mgb24gdGhlIHN0YWNrXG4gICAgcG5hLm5leHRUaWNrKGNiLCBlcik7XG4gICAgLy8gdGhpcyBjYW4gZW1pdCBmaW5pc2gsIGFuZCBpdCB3aWxsIGFsd2F5cyBoYXBwZW5cbiAgICAvLyBhZnRlciBlcnJvclxuICAgIHBuYS5uZXh0VGljayhmaW5pc2hNYXliZSwgc3RyZWFtLCBzdGF0ZSk7XG4gICAgc3RyZWFtLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCA9IHRydWU7XG4gICAgc3RyZWFtLmVtaXQoJ2Vycm9yJywgZXIpO1xuICB9IGVsc2Uge1xuICAgIC8vIHRoZSBjYWxsZXIgZXhwZWN0IHRoaXMgdG8gaGFwcGVuIGJlZm9yZSBpZlxuICAgIC8vIGl0IGlzIGFzeW5jXG4gICAgY2IoZXIpO1xuICAgIHN0cmVhbS5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQgPSB0cnVlO1xuICAgIHN0cmVhbS5lbWl0KCdlcnJvcicsIGVyKTtcbiAgICAvLyB0aGlzIGNhbiBlbWl0IGZpbmlzaCwgYnV0IGZpbmlzaCBtdXN0XG4gICAgLy8gYWx3YXlzIGZvbGxvdyBlcnJvclxuICAgIGZpbmlzaE1heWJlKHN0cmVhbSwgc3RhdGUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIG9ud3JpdGVTdGF0ZVVwZGF0ZShzdGF0ZSkge1xuICBzdGF0ZS53cml0aW5nID0gZmFsc2U7XG4gIHN0YXRlLndyaXRlY2IgPSBudWxsO1xuICBzdGF0ZS5sZW5ndGggLT0gc3RhdGUud3JpdGVsZW47XG4gIHN0YXRlLndyaXRlbGVuID0gMDtcbn1cblxuZnVuY3Rpb24gb253cml0ZShzdHJlYW0sIGVyKSB7XG4gIHZhciBzdGF0ZSA9IHN0cmVhbS5fd3JpdGFibGVTdGF0ZTtcbiAgdmFyIHN5bmMgPSBzdGF0ZS5zeW5jO1xuICB2YXIgY2IgPSBzdGF0ZS53cml0ZWNiO1xuXG4gIG9ud3JpdGVTdGF0ZVVwZGF0ZShzdGF0ZSk7XG5cbiAgaWYgKGVyKSBvbndyaXRlRXJyb3Ioc3RyZWFtLCBzdGF0ZSwgc3luYywgZXIsIGNiKTtlbHNlIHtcbiAgICAvLyBDaGVjayBpZiB3ZSdyZSBhY3R1YWxseSByZWFkeSB0byBmaW5pc2gsIGJ1dCBkb24ndCBlbWl0IHlldFxuICAgIHZhciBmaW5pc2hlZCA9IG5lZWRGaW5pc2goc3RhdGUpO1xuXG4gICAgaWYgKCFmaW5pc2hlZCAmJiAhc3RhdGUuY29ya2VkICYmICFzdGF0ZS5idWZmZXJQcm9jZXNzaW5nICYmIHN0YXRlLmJ1ZmZlcmVkUmVxdWVzdCkge1xuICAgICAgY2xlYXJCdWZmZXIoc3RyZWFtLCBzdGF0ZSk7XG4gICAgfVxuXG4gICAgaWYgKHN5bmMpIHtcbiAgICAgIC8qPHJlcGxhY2VtZW50PiovXG4gICAgICBhc3luY1dyaXRlKGFmdGVyV3JpdGUsIHN0cmVhbSwgc3RhdGUsIGZpbmlzaGVkLCBjYik7XG4gICAgICAvKjwvcmVwbGFjZW1lbnQ+Ki9cbiAgICB9IGVsc2Uge1xuICAgICAgYWZ0ZXJXcml0ZShzdHJlYW0sIHN0YXRlLCBmaW5pc2hlZCwgY2IpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhZnRlcldyaXRlKHN0cmVhbSwgc3RhdGUsIGZpbmlzaGVkLCBjYikge1xuICBpZiAoIWZpbmlzaGVkKSBvbndyaXRlRHJhaW4oc3RyZWFtLCBzdGF0ZSk7XG4gIHN0YXRlLnBlbmRpbmdjYi0tO1xuICBjYigpO1xuICBmaW5pc2hNYXliZShzdHJlYW0sIHN0YXRlKTtcbn1cblxuLy8gTXVzdCBmb3JjZSBjYWxsYmFjayB0byBiZSBjYWxsZWQgb24gbmV4dFRpY2ssIHNvIHRoYXQgd2UgZG9uJ3Rcbi8vIGVtaXQgJ2RyYWluJyBiZWZvcmUgdGhlIHdyaXRlKCkgY29uc3VtZXIgZ2V0cyB0aGUgJ2ZhbHNlJyByZXR1cm5cbi8vIHZhbHVlLCBhbmQgaGFzIGEgY2hhbmNlIHRvIGF0dGFjaCBhICdkcmFpbicgbGlzdGVuZXIuXG5mdW5jdGlvbiBvbndyaXRlRHJhaW4oc3RyZWFtLCBzdGF0ZSkge1xuICBpZiAoc3RhdGUubGVuZ3RoID09PSAwICYmIHN0YXRlLm5lZWREcmFpbikge1xuICAgIHN0YXRlLm5lZWREcmFpbiA9IGZhbHNlO1xuICAgIHN0cmVhbS5lbWl0KCdkcmFpbicpO1xuICB9XG59XG5cbi8vIGlmIHRoZXJlJ3Mgc29tZXRoaW5nIGluIHRoZSBidWZmZXIgd2FpdGluZywgdGhlbiBwcm9jZXNzIGl0XG5mdW5jdGlvbiBjbGVhckJ1ZmZlcihzdHJlYW0sIHN0YXRlKSB7XG4gIHN0YXRlLmJ1ZmZlclByb2Nlc3NpbmcgPSB0cnVlO1xuICB2YXIgZW50cnkgPSBzdGF0ZS5idWZmZXJlZFJlcXVlc3Q7XG5cbiAgaWYgKHN0cmVhbS5fd3JpdGV2ICYmIGVudHJ5ICYmIGVudHJ5Lm5leHQpIHtcbiAgICAvLyBGYXN0IGNhc2UsIHdyaXRlIGV2ZXJ5dGhpbmcgdXNpbmcgX3dyaXRldigpXG4gICAgdmFyIGwgPSBzdGF0ZS5idWZmZXJlZFJlcXVlc3RDb3VudDtcbiAgICB2YXIgYnVmZmVyID0gbmV3IEFycmF5KGwpO1xuICAgIHZhciBob2xkZXIgPSBzdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWU7XG4gICAgaG9sZGVyLmVudHJ5ID0gZW50cnk7XG5cbiAgICB2YXIgY291bnQgPSAwO1xuICAgIHZhciBhbGxCdWZmZXJzID0gdHJ1ZTtcbiAgICB3aGlsZSAoZW50cnkpIHtcbiAgICAgIGJ1ZmZlcltjb3VudF0gPSBlbnRyeTtcbiAgICAgIGlmICghZW50cnkuaXNCdWYpIGFsbEJ1ZmZlcnMgPSBmYWxzZTtcbiAgICAgIGVudHJ5ID0gZW50cnkubmV4dDtcbiAgICAgIGNvdW50ICs9IDE7XG4gICAgfVxuICAgIGJ1ZmZlci5hbGxCdWZmZXJzID0gYWxsQnVmZmVycztcblxuICAgIGRvV3JpdGUoc3RyZWFtLCBzdGF0ZSwgdHJ1ZSwgc3RhdGUubGVuZ3RoLCBidWZmZXIsICcnLCBob2xkZXIuZmluaXNoKTtcblxuICAgIC8vIGRvV3JpdGUgaXMgYWxtb3N0IGFsd2F5cyBhc3luYywgZGVmZXIgdGhlc2UgdG8gc2F2ZSBhIGJpdCBvZiB0aW1lXG4gICAgLy8gYXMgdGhlIGhvdCBwYXRoIGVuZHMgd2l0aCBkb1dyaXRlXG4gICAgc3RhdGUucGVuZGluZ2NiKys7XG4gICAgc3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdCA9IG51bGw7XG4gICAgaWYgKGhvbGRlci5uZXh0KSB7XG4gICAgICBzdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWUgPSBob2xkZXIubmV4dDtcbiAgICAgIGhvbGRlci5uZXh0ID0gbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgc3RhdGUuY29ya2VkUmVxdWVzdHNGcmVlID0gbmV3IENvcmtlZFJlcXVlc3Qoc3RhdGUpO1xuICAgIH1cbiAgICBzdGF0ZS5idWZmZXJlZFJlcXVlc3RDb3VudCA9IDA7XG4gIH0gZWxzZSB7XG4gICAgLy8gU2xvdyBjYXNlLCB3cml0ZSBjaHVua3Mgb25lLWJ5LW9uZVxuICAgIHdoaWxlIChlbnRyeSkge1xuICAgICAgdmFyIGNodW5rID0gZW50cnkuY2h1bms7XG4gICAgICB2YXIgZW5jb2RpbmcgPSBlbnRyeS5lbmNvZGluZztcbiAgICAgIHZhciBjYiA9IGVudHJ5LmNhbGxiYWNrO1xuICAgICAgdmFyIGxlbiA9IHN0YXRlLm9iamVjdE1vZGUgPyAxIDogY2h1bmsubGVuZ3RoO1xuXG4gICAgICBkb1dyaXRlKHN0cmVhbSwgc3RhdGUsIGZhbHNlLCBsZW4sIGNodW5rLCBlbmNvZGluZywgY2IpO1xuICAgICAgZW50cnkgPSBlbnRyeS5uZXh0O1xuICAgICAgc3RhdGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQtLTtcbiAgICAgIC8vIGlmIHdlIGRpZG4ndCBjYWxsIHRoZSBvbndyaXRlIGltbWVkaWF0ZWx5LCB0aGVuXG4gICAgICAvLyBpdCBtZWFucyB0aGF0IHdlIG5lZWQgdG8gd2FpdCB1bnRpbCBpdCBkb2VzLlxuICAgICAgLy8gYWxzbywgdGhhdCBtZWFucyB0aGF0IHRoZSBjaHVuayBhbmQgY2IgYXJlIGN1cnJlbnRseVxuICAgICAgLy8gYmVpbmcgcHJvY2Vzc2VkLCBzbyBtb3ZlIHRoZSBidWZmZXIgY291bnRlciBwYXN0IHRoZW0uXG4gICAgICBpZiAoc3RhdGUud3JpdGluZykge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoZW50cnkgPT09IG51bGwpIHN0YXRlLmxhc3RCdWZmZXJlZFJlcXVlc3QgPSBudWxsO1xuICB9XG5cbiAgc3RhdGUuYnVmZmVyZWRSZXF1ZXN0ID0gZW50cnk7XG4gIHN0YXRlLmJ1ZmZlclByb2Nlc3NpbmcgPSBmYWxzZTtcbn1cblxuV3JpdGFibGUucHJvdG90eXBlLl93cml0ZSA9IGZ1bmN0aW9uIChjaHVuaywgZW5jb2RpbmcsIGNiKSB7XG4gIGNiKG5ldyBFcnJvcignX3dyaXRlKCkgaXMgbm90IGltcGxlbWVudGVkJykpO1xufTtcblxuV3JpdGFibGUucHJvdG90eXBlLl93cml0ZXYgPSBudWxsO1xuXG5Xcml0YWJsZS5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24gKGNodW5rLCBlbmNvZGluZywgY2IpIHtcbiAgdmFyIHN0YXRlID0gdGhpcy5fd3JpdGFibGVTdGF0ZTtcblxuICBpZiAodHlwZW9mIGNodW5rID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2IgPSBjaHVuaztcbiAgICBjaHVuayA9IG51bGw7XG4gICAgZW5jb2RpbmcgPSBudWxsO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBlbmNvZGluZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNiID0gZW5jb2Rpbmc7XG4gICAgZW5jb2RpbmcgPSBudWxsO1xuICB9XG5cbiAgaWYgKGNodW5rICE9PSBudWxsICYmIGNodW5rICE9PSB1bmRlZmluZWQpIHRoaXMud3JpdGUoY2h1bmssIGVuY29kaW5nKTtcblxuICAvLyAuZW5kKCkgZnVsbHkgdW5jb3Jrc1xuICBpZiAoc3RhdGUuY29ya2VkKSB7XG4gICAgc3RhdGUuY29ya2VkID0gMTtcbiAgICB0aGlzLnVuY29yaygpO1xuICB9XG5cbiAgLy8gaWdub3JlIHVubmVjZXNzYXJ5IGVuZCgpIGNhbGxzLlxuICBpZiAoIXN0YXRlLmVuZGluZyAmJiAhc3RhdGUuZmluaXNoZWQpIGVuZFdyaXRhYmxlKHRoaXMsIHN0YXRlLCBjYik7XG59O1xuXG5mdW5jdGlvbiBuZWVkRmluaXNoKHN0YXRlKSB7XG4gIHJldHVybiBzdGF0ZS5lbmRpbmcgJiYgc3RhdGUubGVuZ3RoID09PSAwICYmIHN0YXRlLmJ1ZmZlcmVkUmVxdWVzdCA9PT0gbnVsbCAmJiAhc3RhdGUuZmluaXNoZWQgJiYgIXN0YXRlLndyaXRpbmc7XG59XG5mdW5jdGlvbiBjYWxsRmluYWwoc3RyZWFtLCBzdGF0ZSkge1xuICBzdHJlYW0uX2ZpbmFsKGZ1bmN0aW9uIChlcnIpIHtcbiAgICBzdGF0ZS5wZW5kaW5nY2ItLTtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBzdHJlYW0uZW1pdCgnZXJyb3InLCBlcnIpO1xuICAgIH1cbiAgICBzdGF0ZS5wcmVmaW5pc2hlZCA9IHRydWU7XG4gICAgc3RyZWFtLmVtaXQoJ3ByZWZpbmlzaCcpO1xuICAgIGZpbmlzaE1heWJlKHN0cmVhbSwgc3RhdGUpO1xuICB9KTtcbn1cbmZ1bmN0aW9uIHByZWZpbmlzaChzdHJlYW0sIHN0YXRlKSB7XG4gIGlmICghc3RhdGUucHJlZmluaXNoZWQgJiYgIXN0YXRlLmZpbmFsQ2FsbGVkKSB7XG4gICAgaWYgKHR5cGVvZiBzdHJlYW0uX2ZpbmFsID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBzdGF0ZS5wZW5kaW5nY2IrKztcbiAgICAgIHN0YXRlLmZpbmFsQ2FsbGVkID0gdHJ1ZTtcbiAgICAgIHBuYS5uZXh0VGljayhjYWxsRmluYWwsIHN0cmVhbSwgc3RhdGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdGF0ZS5wcmVmaW5pc2hlZCA9IHRydWU7XG4gICAgICBzdHJlYW0uZW1pdCgncHJlZmluaXNoJyk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGZpbmlzaE1heWJlKHN0cmVhbSwgc3RhdGUpIHtcbiAgdmFyIG5lZWQgPSBuZWVkRmluaXNoKHN0YXRlKTtcbiAgaWYgKG5lZWQpIHtcbiAgICBwcmVmaW5pc2goc3RyZWFtLCBzdGF0ZSk7XG4gICAgaWYgKHN0YXRlLnBlbmRpbmdjYiA9PT0gMCkge1xuICAgICAgc3RhdGUuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgc3RyZWFtLmVtaXQoJ2ZpbmlzaCcpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbmVlZDtcbn1cblxuZnVuY3Rpb24gZW5kV3JpdGFibGUoc3RyZWFtLCBzdGF0ZSwgY2IpIHtcbiAgc3RhdGUuZW5kaW5nID0gdHJ1ZTtcbiAgZmluaXNoTWF5YmUoc3RyZWFtLCBzdGF0ZSk7XG4gIGlmIChjYikge1xuICAgIGlmIChzdGF0ZS5maW5pc2hlZCkgcG5hLm5leHRUaWNrKGNiKTtlbHNlIHN0cmVhbS5vbmNlKCdmaW5pc2gnLCBjYik7XG4gIH1cbiAgc3RhdGUuZW5kZWQgPSB0cnVlO1xuICBzdHJlYW0ud3JpdGFibGUgPSBmYWxzZTtcbn1cblxuZnVuY3Rpb24gb25Db3JrZWRGaW5pc2goY29ya1JlcSwgc3RhdGUsIGVycikge1xuICB2YXIgZW50cnkgPSBjb3JrUmVxLmVudHJ5O1xuICBjb3JrUmVxLmVudHJ5ID0gbnVsbDtcbiAgd2hpbGUgKGVudHJ5KSB7XG4gICAgdmFyIGNiID0gZW50cnkuY2FsbGJhY2s7XG4gICAgc3RhdGUucGVuZGluZ2NiLS07XG4gICAgY2IoZXJyKTtcbiAgICBlbnRyeSA9IGVudHJ5Lm5leHQ7XG4gIH1cbiAgaWYgKHN0YXRlLmNvcmtlZFJlcXVlc3RzRnJlZSkge1xuICAgIHN0YXRlLmNvcmtlZFJlcXVlc3RzRnJlZS5uZXh0ID0gY29ya1JlcTtcbiAgfSBlbHNlIHtcbiAgICBzdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWUgPSBjb3JrUmVxO1xuICB9XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZS5wcm90b3R5cGUsICdkZXN0cm95ZWQnLCB7XG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLl93cml0YWJsZVN0YXRlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIC8vIHdlIGlnbm9yZSB0aGUgdmFsdWUgaWYgdGhlIHN0cmVhbVxuICAgIC8vIGhhcyBub3QgYmVlbiBpbml0aWFsaXplZCB5ZXRcbiAgICBpZiAoIXRoaXMuX3dyaXRhYmxlU3RhdGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LCB0aGUgdXNlciBpcyBleHBsaWNpdGx5XG4gICAgLy8gbWFuYWdpbmcgZGVzdHJveWVkXG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB2YWx1ZTtcbiAgfVxufSk7XG5cbldyaXRhYmxlLnByb3RvdHlwZS5kZXN0cm95ID0gZGVzdHJveUltcGwuZGVzdHJveTtcbldyaXRhYmxlLnByb3RvdHlwZS5fdW5kZXN0cm95ID0gZGVzdHJveUltcGwudW5kZXN0cm95O1xuV3JpdGFibGUucHJvdG90eXBlLl9kZXN0cm95ID0gZnVuY3Rpb24gKGVyciwgY2IpIHtcbiAgdGhpcy5lbmQoKTtcbiAgY2IoZXJyKTtcbn07Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js\n");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/BufferList.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/BufferList.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\nvar util = __webpack_require__(/*! util */ 1);\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9CdWZmZXJMaXN0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL3N0cmVhbS1odHRwL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvQnVmZmVyTGlzdC5qcz80MzY1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIEJ1ZmZlciA9IHJlcXVpcmUoJ3NhZmUtYnVmZmVyJykuQnVmZmVyO1xudmFyIHV0aWwgPSByZXF1aXJlKCd1dGlsJyk7XG5cbmZ1bmN0aW9uIGNvcHlCdWZmZXIoc3JjLCB0YXJnZXQsIG9mZnNldCkge1xuICBzcmMuY29weSh0YXJnZXQsIG9mZnNldCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBCdWZmZXJMaXN0KCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBCdWZmZXJMaXN0KTtcblxuICAgIHRoaXMuaGVhZCA9IG51bGw7XG4gICAgdGhpcy50YWlsID0gbnVsbDtcbiAgICB0aGlzLmxlbmd0aCA9IDA7XG4gIH1cblxuICBCdWZmZXJMaXN0LnByb3RvdHlwZS5wdXNoID0gZnVuY3Rpb24gcHVzaCh2KSB7XG4gICAgdmFyIGVudHJ5ID0geyBkYXRhOiB2LCBuZXh0OiBudWxsIH07XG4gICAgaWYgKHRoaXMubGVuZ3RoID4gMCkgdGhpcy50YWlsLm5leHQgPSBlbnRyeTtlbHNlIHRoaXMuaGVhZCA9IGVudHJ5O1xuICAgIHRoaXMudGFpbCA9IGVudHJ5O1xuICAgICsrdGhpcy5sZW5ndGg7XG4gIH07XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUudW5zaGlmdCA9IGZ1bmN0aW9uIHVuc2hpZnQodikge1xuICAgIHZhciBlbnRyeSA9IHsgZGF0YTogdiwgbmV4dDogdGhpcy5oZWFkIH07XG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAwKSB0aGlzLnRhaWwgPSBlbnRyeTtcbiAgICB0aGlzLmhlYWQgPSBlbnRyeTtcbiAgICArK3RoaXMubGVuZ3RoO1xuICB9O1xuXG4gIEJ1ZmZlckxpc3QucHJvdG90eXBlLnNoaWZ0ID0gZnVuY3Rpb24gc2hpZnQoKSB7XG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgdmFyIHJldCA9IHRoaXMuaGVhZC5kYXRhO1xuICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMSkgdGhpcy5oZWFkID0gdGhpcy50YWlsID0gbnVsbDtlbHNlIHRoaXMuaGVhZCA9IHRoaXMuaGVhZC5uZXh0O1xuICAgIC0tdGhpcy5sZW5ndGg7XG4gICAgcmV0dXJuIHJldDtcbiAgfTtcblxuICBCdWZmZXJMaXN0LnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uIGNsZWFyKCkge1xuICAgIHRoaXMuaGVhZCA9IHRoaXMudGFpbCA9IG51bGw7XG4gICAgdGhpcy5sZW5ndGggPSAwO1xuICB9O1xuXG4gIEJ1ZmZlckxpc3QucHJvdG90eXBlLmpvaW4gPSBmdW5jdGlvbiBqb2luKHMpIHtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHJldHVybiAnJztcbiAgICB2YXIgcCA9IHRoaXMuaGVhZDtcbiAgICB2YXIgcmV0ID0gJycgKyBwLmRhdGE7XG4gICAgd2hpbGUgKHAgPSBwLm5leHQpIHtcbiAgICAgIHJldCArPSBzICsgcC5kYXRhO1xuICAgIH1yZXR1cm4gcmV0O1xuICB9O1xuXG4gIEJ1ZmZlckxpc3QucHJvdG90eXBlLmNvbmNhdCA9IGZ1bmN0aW9uIGNvbmNhdChuKSB7XG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAwKSByZXR1cm4gQnVmZmVyLmFsbG9jKDApO1xuICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMSkgcmV0dXJuIHRoaXMuaGVhZC5kYXRhO1xuICAgIHZhciByZXQgPSBCdWZmZXIuYWxsb2NVbnNhZmUobiA+Pj4gMCk7XG4gICAgdmFyIHAgPSB0aGlzLmhlYWQ7XG4gICAgdmFyIGkgPSAwO1xuICAgIHdoaWxlIChwKSB7XG4gICAgICBjb3B5QnVmZmVyKHAuZGF0YSwgcmV0LCBpKTtcbiAgICAgIGkgKz0gcC5kYXRhLmxlbmd0aDtcbiAgICAgIHAgPSBwLm5leHQ7XG4gICAgfVxuICAgIHJldHVybiByZXQ7XG4gIH07XG5cbiAgcmV0dXJuIEJ1ZmZlckxpc3Q7XG59KCk7XG5cbmlmICh1dGlsICYmIHV0aWwuaW5zcGVjdCAmJiB1dGlsLmluc3BlY3QuY3VzdG9tKSB7XG4gIG1vZHVsZS5leHBvcnRzLnByb3RvdHlwZVt1dGlsLmluc3BlY3QuY3VzdG9tXSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgb2JqID0gdXRpbC5pbnNwZWN0KHsgbGVuZ3RoOiB0aGlzLmxlbmd0aCB9KTtcbiAgICByZXR1cm4gdGhpcy5jb25zdHJ1Y3Rvci5uYW1lICsgJyAnICsgb2JqO1xuICB9O1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/BufferList.js\n");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9kZXN0cm95LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL3N0cmVhbS1odHRwL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvZGVzdHJveS5qcz9jNjlmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cblxudmFyIHBuYSA9IHJlcXVpcmUoJ3Byb2Nlc3MtbmV4dGljay1hcmdzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuLy8gdW5kb2N1bWVudGVkIGNiKCkgQVBJLCBuZWVkZWQgZm9yIGNvcmUsIG5vdCBmb3IgcHVibGljIEFQSVxuZnVuY3Rpb24gZGVzdHJveShlcnIsIGNiKSB7XG4gIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgdmFyIHJlYWRhYmxlRGVzdHJveWVkID0gdGhpcy5fcmVhZGFibGVTdGF0ZSAmJiB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZDtcbiAgdmFyIHdyaXRhYmxlRGVzdHJveWVkID0gdGhpcy5fd3JpdGFibGVTdGF0ZSAmJiB0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZDtcblxuICBpZiAocmVhZGFibGVEZXN0cm95ZWQgfHwgd3JpdGFibGVEZXN0cm95ZWQpIHtcbiAgICBpZiAoY2IpIHtcbiAgICAgIGNiKGVycik7XG4gICAgfSBlbHNlIGlmIChlcnIgJiYgKCF0aGlzLl93cml0YWJsZVN0YXRlIHx8ICF0aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCkpIHtcbiAgICAgIHBuYS5uZXh0VGljayhlbWl0RXJyb3JOVCwgdGhpcywgZXJyKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvLyB3ZSBzZXQgZGVzdHJveWVkIHRvIHRydWUgYmVmb3JlIGZpcmluZyBlcnJvciBjYWxsYmFja3MgaW4gb3JkZXJcbiAgLy8gdG8gbWFrZSBpdCByZS1lbnRyYW5jZSBzYWZlIGluIGNhc2UgZGVzdHJveSgpIGlzIGNhbGxlZCB3aXRoaW4gY2FsbGJhY2tzXG5cbiAgaWYgKHRoaXMuX3JlYWRhYmxlU3RhdGUpIHtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCA9IHRydWU7XG4gIH1cblxuICAvLyBpZiB0aGlzIGlzIGEgZHVwbGV4IHN0cmVhbSBtYXJrIHRoZSB3cml0YWJsZSBwYXJ0IGFzIGRlc3Ryb3llZCBhcyB3ZWxsXG4gIGlmICh0aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB0cnVlO1xuICB9XG5cbiAgdGhpcy5fZGVzdHJveShlcnIgfHwgbnVsbCwgZnVuY3Rpb24gKGVycikge1xuICAgIGlmICghY2IgJiYgZXJyKSB7XG4gICAgICBwbmEubmV4dFRpY2soZW1pdEVycm9yTlQsIF90aGlzLCBlcnIpO1xuICAgICAgaWYgKF90aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgICAgIF90aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCA9IHRydWU7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChjYikge1xuICAgICAgY2IoZXJyKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiB0aGlzO1xufVxuXG5mdW5jdGlvbiB1bmRlc3Ryb3koKSB7XG4gIGlmICh0aGlzLl9yZWFkYWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLnJlYWRpbmcgPSBmYWxzZTtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZGVkID0gZmFsc2U7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5lbmRFbWl0dGVkID0gZmFsc2U7XG4gIH1cblxuICBpZiAodGhpcy5fd3JpdGFibGVTdGF0ZSkge1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kaW5nID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5maW5pc2hlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkID0gZmFsc2U7XG4gIH1cbn1cblxuZnVuY3Rpb24gZW1pdEVycm9yTlQoc2VsZiwgZXJyKSB7XG4gIHNlbGYuZW1pdCgnZXJyb3InLCBlcnIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZGVzdHJveTogZGVzdHJveSxcbiAgdW5kZXN0cm95OiB1bmRlc3Ryb3lcbn07Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js\n");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9zdHJlYW0tYnJvd3Nlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy9zdHJlYW0taHR0cC9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3N0cmVhbS1icm93c2VyLmpzPzFhZDYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXI7XG4iXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js\n");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/readable-browser.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/readable-browser.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js\");\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js\");\nexports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js\");\nexports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js\");\nexports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9yZWFkYWJsZS1icm93c2VyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL3N0cmVhbS1odHRwL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vcmVhZGFibGUtYnJvd3Nlci5qcz8zZDFiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fcmVhZGFibGUuanMnKTtcbmV4cG9ydHMuU3RyZWFtID0gZXhwb3J0cztcbmV4cG9ydHMuUmVhZGFibGUgPSBleHBvcnRzO1xuZXhwb3J0cy5Xcml0YWJsZSA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fd3JpdGFibGUuanMnKTtcbmV4cG9ydHMuRHVwbGV4ID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV9kdXBsZXguanMnKTtcbmV4cG9ydHMuVHJhbnNmb3JtID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV90cmFuc2Zvcm0uanMnKTtcbmV4cG9ydHMuUGFzc1Rocm91Z2ggPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX3Bhc3N0aHJvdWdoLmpzJyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/stream-http/node_modules/readable-stream/readable-browser.js\n");

/***/ }),

/***/ "./node_modules/string_decoder/lib/string_decoder.js":
/*!***********************************************************!*\
  !*** ./node_modules/string_decoder/lib/string_decoder.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return -1;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// UTF-8 replacement characters ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd'.repeat(p);\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd'.repeat(p + 1);\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd'.repeat(p + 2);\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character for each buffered byte of a (partial)\n// character needs to be added to the output.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd'.repeat(this.lastTotal - this.lastNeed);\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/string_decoder/lib/string_decoder.js\n");

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGltZXJzLWJyb3dzZXJpZnkvbWFpbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy90aW1lcnMtYnJvd3NlcmlmeS9tYWluLmpzPzUxMTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHNjb3BlID0gKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsKSB8fFxuICAgICAgICAgICAgKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYpIHx8XG4gICAgICAgICAgICB3aW5kb3c7XG52YXIgYXBwbHkgPSBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHk7XG5cbi8vIERPTSBBUElzLCBmb3IgY29tcGxldGVuZXNzXG5cbmV4cG9ydHMuc2V0VGltZW91dCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFRpbWVvdXQoYXBwbHkuY2FsbChzZXRUaW1lb3V0LCBzY29wZSwgYXJndW1lbnRzKSwgY2xlYXJUaW1lb3V0KTtcbn07XG5leHBvcnRzLnNldEludGVydmFsID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldEludGVydmFsLCBzY29wZSwgYXJndW1lbnRzKSwgY2xlYXJJbnRlcnZhbCk7XG59O1xuZXhwb3J0cy5jbGVhclRpbWVvdXQgPVxuZXhwb3J0cy5jbGVhckludGVydmFsID0gZnVuY3Rpb24odGltZW91dCkge1xuICBpZiAodGltZW91dCkge1xuICAgIHRpbWVvdXQuY2xvc2UoKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gVGltZW91dChpZCwgY2xlYXJGbikge1xuICB0aGlzLl9pZCA9IGlkO1xuICB0aGlzLl9jbGVhckZuID0gY2xlYXJGbjtcbn1cblRpbWVvdXQucHJvdG90eXBlLnVucmVmID0gVGltZW91dC5wcm90b3R5cGUucmVmID0gZnVuY3Rpb24oKSB7fTtcblRpbWVvdXQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuX2NsZWFyRm4uY2FsbChzY29wZSwgdGhpcy5faWQpO1xufTtcblxuLy8gRG9lcyBub3Qgc3RhcnQgdGhlIHRpbWUsIGp1c3Qgc2V0cyB1cCB0aGUgbWVtYmVycyBuZWVkZWQuXG5leHBvcnRzLmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0sIG1zZWNzKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSBtc2Vjcztcbn07XG5cbmV4cG9ydHMudW5lbnJvbGwgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSAtMTtcbn07XG5cbmV4cG9ydHMuX3VucmVmQWN0aXZlID0gZXhwb3J0cy5hY3RpdmUgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcblxuICB2YXIgbXNlY3MgPSBpdGVtLl9pZGxlVGltZW91dDtcbiAgaWYgKG1zZWNzID49IDApIHtcbiAgICBpdGVtLl9pZGxlVGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbiBvblRpbWVvdXQoKSB7XG4gICAgICBpZiAoaXRlbS5fb25UaW1lb3V0KVxuICAgICAgICBpdGVtLl9vblRpbWVvdXQoKTtcbiAgICB9LCBtc2Vjcyk7XG4gIH1cbn07XG5cbi8vIHNldGltbWVkaWF0ZSBhdHRhY2hlcyBpdHNlbGYgdG8gdGhlIGdsb2JhbCBvYmplY3RcbnJlcXVpcmUoXCJzZXRpbW1lZGlhdGVcIik7XG4vLyBPbiBzb21lIGV4b3RpYyBlbnZpcm9ubWVudHMsIGl0J3Mgbm90IGNsZWFyIHdoaWNoIG9iamVjdCBgc2V0aW1tZWRpYXRlYCB3YXNcbi8vIGFibGUgdG8gaW5zdGFsbCBvbnRvLiAgU2VhcmNoIGVhY2ggcG9zc2liaWxpdHkgaW4gdGhlIHNhbWUgb3JkZXIgYXMgdGhlXG4vLyBgc2V0aW1tZWRpYXRlYCBsaWJyYXJ5LlxuZXhwb3J0cy5zZXRJbW1lZGlhdGUgPSAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgJiYgc2VsZi5zZXRJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5zZXRJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICh0aGlzICYmIHRoaXMuc2V0SW1tZWRpYXRlKTtcbmV4cG9ydHMuY2xlYXJJbW1lZGlhdGUgPSAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgJiYgc2VsZi5jbGVhckltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuY2xlYXJJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMgJiYgdGhpcy5jbGVhckltbWVkaWF0ZSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/timers-browserify/main.js\n");

/***/ }),

/***/ "./node_modules/to-arraybuffer/index.js":
/*!**********************************************!*\
  !*** ./node_modules/to-arraybuffer/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer\n\nmodule.exports = function (buf) {\n\t// If the buffer is backed by a Uint8Array, a faster version will work\n\tif (buf instanceof Uint8Array) {\n\t\t// If the buffer isn't a subarray, return the underlying ArrayBuffer\n\t\tif (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n\t\t\treturn buf.buffer\n\t\t} else if (typeof buf.buffer.slice === 'function') {\n\t\t\t// Otherwise we need to get a proper copy\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\n\t\t}\n\t}\n\n\tif (Buffer.isBuffer(buf)) {\n\t\t// This is the slow version that will work with any Buffer\n\t\t// implementation (even in old browsers)\n\t\tvar arrayCopy = new Uint8Array(buf.length)\n\t\tvar len = buf.length\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tarrayCopy[i] = buf[i]\n\t\t}\n\t\treturn arrayCopy.buffer\n\t} else {\n\t\tthrow new Error('Argument must be a Buffer')\n\t}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdG8tYXJyYXlidWZmZXIvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvdG8tYXJyYXlidWZmZXIvaW5kZXguanM/ZDkzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQnVmZmVyID0gcmVxdWlyZSgnYnVmZmVyJykuQnVmZmVyXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGJ1Zikge1xuXHQvLyBJZiB0aGUgYnVmZmVyIGlzIGJhY2tlZCBieSBhIFVpbnQ4QXJyYXksIGEgZmFzdGVyIHZlcnNpb24gd2lsbCB3b3JrXG5cdGlmIChidWYgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG5cdFx0Ly8gSWYgdGhlIGJ1ZmZlciBpc24ndCBhIHN1YmFycmF5LCByZXR1cm4gdGhlIHVuZGVybHlpbmcgQXJyYXlCdWZmZXJcblx0XHRpZiAoYnVmLmJ5dGVPZmZzZXQgPT09IDAgJiYgYnVmLmJ5dGVMZW5ndGggPT09IGJ1Zi5idWZmZXIuYnl0ZUxlbmd0aCkge1xuXHRcdFx0cmV0dXJuIGJ1Zi5idWZmZXJcblx0XHR9IGVsc2UgaWYgKHR5cGVvZiBidWYuYnVmZmVyLnNsaWNlID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0XHQvLyBPdGhlcndpc2Ugd2UgbmVlZCB0byBnZXQgYSBwcm9wZXIgY29weVxuXHRcdFx0cmV0dXJuIGJ1Zi5idWZmZXIuc2xpY2UoYnVmLmJ5dGVPZmZzZXQsIGJ1Zi5ieXRlT2Zmc2V0ICsgYnVmLmJ5dGVMZW5ndGgpXG5cdFx0fVxuXHR9XG5cblx0aWYgKEJ1ZmZlci5pc0J1ZmZlcihidWYpKSB7XG5cdFx0Ly8gVGhpcyBpcyB0aGUgc2xvdyB2ZXJzaW9uIHRoYXQgd2lsbCB3b3JrIHdpdGggYW55IEJ1ZmZlclxuXHRcdC8vIGltcGxlbWVudGF0aW9uIChldmVuIGluIG9sZCBicm93c2Vycylcblx0XHR2YXIgYXJyYXlDb3B5ID0gbmV3IFVpbnQ4QXJyYXkoYnVmLmxlbmd0aClcblx0XHR2YXIgbGVuID0gYnVmLmxlbmd0aFxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcblx0XHRcdGFycmF5Q29weVtpXSA9IGJ1ZltpXVxuXHRcdH1cblx0XHRyZXR1cm4gYXJyYXlDb3B5LmJ1ZmZlclxuXHR9IGVsc2Uge1xuXHRcdHRocm93IG5ldyBFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlcicpXG5cdH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/to-arraybuffer/index.js\n");

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__extends\", function() { return __extends; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__rest\", function() { return __rest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__decorate\", function() { return __decorate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__param\", function() { return __param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__metadata\", function() { return __metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__awaiter\", function() { return __awaiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__generator\", function() { return __generator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__exportStar\", function() { return __exportStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__values\", function() { return __values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__read\", function() { return __read; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spread\", function() { return __spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__await\", function() { return __await; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncGenerator\", function() { return __asyncGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncDelegator\", function() { return __asyncDelegator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncValues\", function() { return __asyncValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__makeTemplateObject\", function() { return __makeTemplateObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importStar\", function() { return __importStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importDefault\", function() { return __importDefault; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "./node_modules/tunnel/index.js":
/*!**************************************!*\
  !*** ./node_modules/tunnel/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/tunnel */ \"./node_modules/tunnel/lib/tunnel.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHVubmVsL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL3R1bm5lbC9pbmRleC5qcz9jZGY0Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvdHVubmVsJyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/tunnel/index.js\n");

/***/ }),

/***/ "./node_modules/tunnel/lib/tunnel.js":
/*!*******************************************!*\
  !*** ./node_modules/tunnel/lib/tunnel.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer, process) {\n\nvar net = __webpack_require__(/*! net */ \"./node_modules/node-libs-browser/mock/net.js\");\nvar tls = __webpack_require__(/*! tls */ \"./node_modules/node-libs-browser/mock/tls.js\");\nvar http = __webpack_require__(/*! http */ \"./node_modules/stream-http/index.js\");\nvar https = __webpack_require__(/*! https */ \"./node_modules/https-browserify/index.js\");\nvar events = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar assert = __webpack_require__(/*! assert */ \"./node_modules/assert/assert.js\");\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false\n  });\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode === 200) {\n      assert.equal(head.length, 0);\n      debug('tunneling connection has established');\n      self.sockets[self.sockets.indexOf(placeholder)] = socket;\n      cb(socket);\n    } else {\n      debug('tunneling socket could not be established, statusCode=%d',\n            res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n                            'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n    }\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/tunnel/lib/tunnel.js\n");

/***/ }),

/***/ "./node_modules/url/url.js":
/*!*********************************!*\
  !*** ./node_modules/url/url.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar punycode = __webpack_require__(/*! punycode */ \"./node_modules/punycode/punycode.js\");\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/url/util.js\");\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = __webpack_require__(/*! querystring */ \"./node_modules/querystring-es3/index.js\");\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/url/url.js\n");

/***/ }),

/***/ "./node_modules/url/util.js":
/*!**********************************!*\
  !*** ./node_modules/url/util.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsL3V0aWwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3Ntb3NDbGllbnQvLi9ub2RlX21vZHVsZXMvdXJsL3V0aWwuanM/MzVlOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc1N0cmluZzogZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIHR5cGVvZihhcmcpID09PSAnc3RyaW5nJztcbiAgfSxcbiAgaXNPYmplY3Q6IGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiB0eXBlb2YoYXJnKSA9PT0gJ29iamVjdCcgJiYgYXJnICE9PSBudWxsO1xuICB9LFxuICBpc051bGw6IGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiBhcmcgPT09IG51bGw7XG4gIH0sXG4gIGlzTnVsbE9yVW5kZWZpbmVkOiBmdW5jdGlvbihhcmcpIHtcbiAgICByZXR1cm4gYXJnID09IG51bGw7XG4gIH1cbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/url/util.js\n");

/***/ }),

/***/ "./node_modules/util-deprecate/browser.js":
/*!************************************************!*\
  !*** ./node_modules/util-deprecate/browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXRpbC1kZXByZWNhdGUvYnJvd3Nlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy91dGlsLWRlcHJlY2F0ZS9icm93c2VyLmpzP2I3ZDEiXSwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZGVwcmVjYXRlO1xuXG4vKipcbiAqIE1hcmsgdGhhdCBhIG1ldGhvZCBzaG91bGQgbm90IGJlIHVzZWQuXG4gKiBSZXR1cm5zIGEgbW9kaWZpZWQgZnVuY3Rpb24gd2hpY2ggd2FybnMgb25jZSBieSBkZWZhdWx0LlxuICpcbiAqIElmIGBsb2NhbFN0b3JhZ2Uubm9EZXByZWNhdGlvbiA9IHRydWVgIGlzIHNldCwgdGhlbiBpdCBpcyBhIG5vLW9wLlxuICpcbiAqIElmIGBsb2NhbFN0b3JhZ2UudGhyb3dEZXByZWNhdGlvbiA9IHRydWVgIGlzIHNldCwgdGhlbiBkZXByZWNhdGVkIGZ1bmN0aW9uc1xuICogd2lsbCB0aHJvdyBhbiBFcnJvciB3aGVuIGludm9rZWQuXG4gKlxuICogSWYgYGxvY2FsU3RvcmFnZS50cmFjZURlcHJlY2F0aW9uID0gdHJ1ZWAgaXMgc2V0LCB0aGVuIGRlcHJlY2F0ZWQgZnVuY3Rpb25zXG4gKiB3aWxsIGludm9rZSBgY29uc29sZS50cmFjZSgpYCBpbnN0ZWFkIG9mIGBjb25zb2xlLmVycm9yKClgLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIC0gdGhlIGZ1bmN0aW9uIHRvIGRlcHJlY2F0ZVxuICogQHBhcmFtIHtTdHJpbmd9IG1zZyAtIHRoZSBzdHJpbmcgdG8gcHJpbnQgdG8gdGhlIGNvbnNvbGUgd2hlbiBgZm5gIGlzIGludm9rZWRcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gYSBuZXcgXCJkZXByZWNhdGVkXCIgdmVyc2lvbiBvZiBgZm5gXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIGRlcHJlY2F0ZSAoZm4sIG1zZykge1xuICBpZiAoY29uZmlnKCdub0RlcHJlY2F0aW9uJykpIHtcbiAgICByZXR1cm4gZm47XG4gIH1cblxuICB2YXIgd2FybmVkID0gZmFsc2U7XG4gIGZ1bmN0aW9uIGRlcHJlY2F0ZWQoKSB7XG4gICAgaWYgKCF3YXJuZWQpIHtcbiAgICAgIGlmIChjb25maWcoJ3Rocm93RGVwcmVjYXRpb24nKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbiAgICAgIH0gZWxzZSBpZiAoY29uZmlnKCd0cmFjZURlcHJlY2F0aW9uJykpIHtcbiAgICAgICAgY29uc29sZS50cmFjZShtc2cpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS53YXJuKG1zZyk7XG4gICAgICB9XG4gICAgICB3YXJuZWQgPSB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIHJldHVybiBkZXByZWNhdGVkO1xufVxuXG4vKipcbiAqIENoZWNrcyBgbG9jYWxTdG9yYWdlYCBmb3IgYm9vbGVhbiB2YWx1ZXMgZm9yIHRoZSBnaXZlbiBgbmFtZWAuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcbiAqIEByZXR1cm5zIHtCb29sZWFufVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gY29uZmlnIChuYW1lKSB7XG4gIC8vIGFjY2Vzc2luZyBnbG9iYWwubG9jYWxTdG9yYWdlIGNhbiB0cmlnZ2VyIGEgRE9NRXhjZXB0aW9uIGluIHNhbmRib3hlZCBpZnJhbWVzXG4gIHRyeSB7XG4gICAgaWYgKCFnbG9iYWwubG9jYWxTdG9yYWdlKSByZXR1cm4gZmFsc2U7XG4gIH0gY2F0Y2ggKF8pIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIHZhbCA9IGdsb2JhbC5sb2NhbFN0b3JhZ2VbbmFtZV07XG4gIGlmIChudWxsID09IHZhbCkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gU3RyaW5nKHZhbCkudG9Mb3dlckNhc2UoKSA9PT0gJ3RydWUnO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/util-deprecate/browser.js\n");

/***/ }),

/***/ "./node_modules/util/support/isBufferBrowser.js":
/*!******************************************************!*\
  !*** ./node_modules/util/support/isBufferBrowser.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXRpbC9zdXBwb3J0L2lzQnVmZmVyQnJvd3Nlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8uL25vZGVfbW9kdWxlcy91dGlsL3N1cHBvcnQvaXNCdWZmZXJCcm93c2VyLmpzP2Q2MGEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0J1ZmZlcihhcmcpIHtcbiAgcmV0dXJuIGFyZyAmJiB0eXBlb2YgYXJnID09PSAnb2JqZWN0J1xuICAgICYmIHR5cGVvZiBhcmcuY29weSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICYmIHR5cGVvZiBhcmcuZmlsbCA9PT0gJ2Z1bmN0aW9uJ1xuICAgICYmIHR5cGVvZiBhcmcucmVhZFVJbnQ4ID09PSAnZnVuY3Rpb24nO1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/util/support/isBufferBrowser.js\n");

/***/ }),

/***/ "./node_modules/util/util.js":
/*!***********************************!*\
  !*** ./node_modules/util/util.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ \"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/util/util.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2dsb2JhbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/Y2QwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSwgZXZhbCkoXCJ0aGlzXCIpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL21vZHVsZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC8od2VicGFjaykvYnVpbGRpbi9tb2R1bGUuanM/Y2VkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuXHRpZiAoIW1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/module.js\n");

/***/ }),

/***/ "./node_modules/xtend/immutable.js":
/*!*****************************************!*\
  !*** ./node_modules/xtend/immutable.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMveHRlbmQvaW1tdXRhYmxlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29zbW9zQ2xpZW50Ly4vbm9kZV9tb2R1bGVzL3h0ZW5kL2ltbXV0YWJsZS5qcz81M2E4Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZXh0ZW5kXG5cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbmZ1bmN0aW9uIGV4dGVuZCgpIHtcbiAgICB2YXIgdGFyZ2V0ID0ge31cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV1cblxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgICAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/xtend/immutable.js\n");

/***/ }),

/***/ 0:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC91dGlsIChpZ25vcmVkKT9kZTFjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n");

/***/ }),

/***/ 1:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC91dGlsIChpZ25vcmVkKT80M2U2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n");

/***/ }),

/***/ 2:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC91dGlsIChpZ25vcmVkKT8xY2RmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n");

/***/ }),

/***/ 3:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0Nvc21vc0NsaWVudC91dGlsIChpZ25vcmVkKT8xNWFjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n");

/***/ })

/******/ });